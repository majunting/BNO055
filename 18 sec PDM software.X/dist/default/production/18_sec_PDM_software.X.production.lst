

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jan 04 10:59:08 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 1.42
    51                           ; Generated 13/04/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F46K80 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	nvCOMRAM
    86  000046                     __pnvCOMRAM:
    87                           	opt stack 0
    88  000046                     _TMR1_InterruptHandler:
    89                           	opt stack 0
    90  000046                     	ds	2
    91  000048                     _timer1ReloadVal:
    92                           	opt stack 0
    93  000048                     	ds	2
    94  0000                     _BRGCON3	set	3653
    95  0000                     _BRGCON2	set	3652
    96  0000                     _BRGCON1	set	3651
    97  0000                     _RXF5SIDL	set	3829
    98  0000                     _RXF5SIDH	set	3828
    99  0000                     _RXF5EIDL	set	3831
   100  0000                     _RXF5EIDH	set	3830
   101  0000                     _RXF4SIDL	set	3825
   102  0000                     _RXF4SIDH	set	3824
   103  0000                     _RXF4EIDL	set	3827
   104  0000                     _RXF4EIDH	set	3826
   105  0000                     _RXF3SIDL	set	3821
   106  0000                     _RXF3SIDH	set	3820
   107  0000                     _RXF3EIDL	set	3823
   108  0000                     _RXF3EIDH	set	3822
   109  0000                     _RXF2SIDL	set	3817
   110  0000                     _RXF2SIDH	set	3816
   111  0000                     _RXF2EIDL	set	3819
   112  0000                     _RXF2EIDH	set	3818
   113  0000                     _RXF1SIDL	set	3813
   114  0000                     _RXF1SIDH	set	3812
   115  0000                     _RXF1EIDL	set	3815
   116  0000                     _RXF1EIDH	set	3814
   117  0000                     _RXF0SIDL	set	3809
   118  0000                     _RXF0SIDH	set	3808
   119  0000                     _RXF0EIDL	set	3811
   120  0000                     _RXF0EIDH	set	3810
   121  0000                     _RXM1SIDL	set	3837
   122  0000                     _RXM1SIDH	set	3836
   123  0000                     _RXM1EIDL	set	3839
   124  0000                     _RXM1EIDH	set	3838
   125  0000                     _RXM0SIDL	set	3833
   126  0000                     _RXM0SIDH	set	3832
   127  0000                     _RXM0EIDL	set	3835
   128  0000                     _RXM0EIDH	set	3834
   129  0000                     _CCPR2H	set	3922
   130  0000                     _CCPR2L	set	3921
   131  0000                     _CCP2CON	set	3920
   132  0000                     _WPUB	set	3931
   133  0000                     _ANCON1	set	3932
   134  0000                     _ANCON0	set	3933
   135  0000                     _RXB1D7	set	3901
   136  0000                     _RXB1D6	set	3900
   137  0000                     _RXB1D5	set	3899
   138  0000                     _RXB1D4	set	3898
   139  0000                     _RXB1D3	set	3897
   140  0000                     _RXB1D2	set	3896
   141  0000                     _RXB1D1	set	3895
   142  0000                     _RXB1D0	set	3894
   143  0000                     _RXB1DLC	set	3893
   144  0000                     _RXB1SIDH	set	3889
   145  0000                     _RXB1EIDL	set	3892
   146  0000                     _RXB1EIDH	set	3891
   147  0000                     _RXB1SIDL	set	3890
   148  0000                     _RXB1CONbits	set	3888
   149  0000                     _TXB2D7	set	3853
   150  0000                     _TXB2D6	set	3852
   151  0000                     _TXB2D5	set	3851
   152  0000                     _TXB2D4	set	3850
   153  0000                     _TXB2D3	set	3849
   154  0000                     _TXB2D2	set	3848
   155  0000                     _TXB2D1	set	3847
   156  0000                     _TXB2D0	set	3846
   157  0000                     _TXB2DLC	set	3845
   158  0000                     _TXB2SIDL	set	3842
   159  0000                     _TXB2SIDH	set	3841
   160  0000                     _TXB2EIDL	set	3844
   161  0000                     _TXB2EIDH	set	3843
   162  0000                     _TXB2CONbits	set	3840
   163  0000                     _TXB1D7	set	3869
   164  0000                     _TXB1D6	set	3868
   165  0000                     _TXB1D5	set	3867
   166  0000                     _TXB1D4	set	3866
   167  0000                     _TXB1D3	set	3865
   168  0000                     _TXB1D2	set	3864
   169  0000                     _TXB1D1	set	3863
   170  0000                     _TXB1D0	set	3862
   171  0000                     _TXB1DLC	set	3861
   172  0000                     _TXB1SIDL	set	3858
   173  0000                     _TXB1SIDH	set	3857
   174  0000                     _TXB1EIDL	set	3860
   175  0000                     _TXB1EIDH	set	3859
   176  0000                     _TXB1CONbits	set	3856
   177  0000                     _TXB0D7	set	3885
   178  0000                     _TXB0D6	set	3884
   179  0000                     _TXB0D5	set	3883
   180  0000                     _TXB0D4	set	3882
   181  0000                     _TXB0D3	set	3881
   182  0000                     _TXB0D2	set	3880
   183  0000                     _TXB0D1	set	3879
   184  0000                     _TXB0D0	set	3878
   185  0000                     _TXB0DLC	set	3877
   186  0000                     _TXB0SIDL	set	3874
   187  0000                     _TXB0SIDH	set	3873
   188  0000                     _TXB0EIDL	set	3876
   189  0000                     _TXB0EIDH	set	3875
   190  0000                     _TXB0CONbits	set	3872
   191  0000                     _CIOCONbits	set	3952
   192  0000                     _SSPBUF	set	4041
   193  0000                     _SSPCON2bits	set	4037
   194  0000                     _SSPCON1bits	set	4038
   195  0000                     _SSPADD	set	4040
   196  0000                     _SSPCON1	set	4038
   197  0000                     _SSPSTAT	set	4039
   198  0000                     _T1GCONbits	set	4010
   199  0000                     _T1CONbits	set	4045
   200  0000                     _TMR1L	set	4046
   201  0000                     _TMR1H	set	4047
   202  0000                     _T1GCON	set	4010
   203  0000                     _T1CON	set	4045
   204  0000                     _PIR1bits	set	3998
   205  0000                     _PIE1bits	set	3997
   206  0000                     _PIR2bits	set	4001
   207  0000                     _PIE2bits	set	4000
   208  0000                     _RCONbits	set	4048
   209  0000                     _PIE3bits	set	4003
   210  0000                     _PIR3bits	set	4004
   211  0000                     _CCPTMRSbits	set	3993
   212  0000                     _PIR4bits	set	4023
   213  0000                     _EEDATA	set	3955
   214  0000                     _EEADR	set	3956
   215  0000                     _EEADRH	set	3957
   216  0000                     _EECON2	set	3966
   217  0000                     _EECON1bits	set	3967
   218  0000                     _INTCONbits	set	4082
   219  0000                     _TABLAT	set	4085
   220  0000                     _TBLPTRL	set	4086
   221  0000                     _TBLPTRH	set	4087
   222  0000                     _TBLPTRU	set	4088
   223  0000                     _ADCON0bits	set	4034
   224  0000                     _ADRESL	set	4035
   225  0000                     _ADRESH	set	4036
   226  0000                     _ADCON2	set	4032
   227  0000                     _ADCON1	set	4033
   228  0000                     _ADCON0	set	4034
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISB	set	3987
   232  0000                     _TRISA	set	3986
   233  0000                     _TRISE	set	3990
   234  0000                     _LATC	set	3979
   235  0000                     _LATB	set	3978
   236  0000                     _LATA	set	3977
   237  0000                     _LATD	set	3980
   238  0000                     _LATE	set	3981
   239  0000                     _COMSTATbits	set	3953
   240  0000                     _RXB0D7	set	3949
   241  0000                     _RXB0D6	set	3948
   242  0000                     _RXB0D5	set	3947
   243  0000                     _RXB0D4	set	3946
   244  0000                     _RXB0D3	set	3945
   245  0000                     _RXB0D2	set	3944
   246  0000                     _RXB0D1	set	3943
   247  0000                     _RXB0D0	set	3942
   248  0000                     _RXB0DLC	set	3941
   249  0000                     _RXB0SIDH	set	3937
   250  0000                     _RXB0EIDL	set	3940
   251  0000                     _RXB0EIDH	set	3939
   252  0000                     _RXB0SIDL	set	3938
   253  0000                     _RXB0CONbits	set	3936
   254  0000                     _PIE5bits	set	3958
   255  0000                     _PIR5bits	set	3959
   256  0000                     _ECANCON	set	3954
   257  0000                     _CANSTAT	set	3950
   258  0000                     _CANCON	set	3951
   259  0000                     _REFOCON	set	3994
   260  0000                     _OSCTUNE	set	3995
   261  0000                     _OSCCON2	set	4050
   262  0000                     _OSCCON	set	4051
   263                           
   264                           ; #config settings
   265  0000                     
   266                           	psect	cinit
   267  001452                     __pcinit:
   268                           	opt stack 0
   269  001452                     start_initialization:
   270                           	opt stack 0
   271  001452                     __initialization:
   272                           	opt stack 0
   273                           
   274                           ; Clear objects allocated to BANK0 (10 bytes)
   275  001452  EE00  F0A3         	lfsr	0,__pbssBANK0
   276  001456  0E0A               	movlw	10
   277  001458                     clear_0:
   278  001458  6AEE               	clrf	postinc0,c
   279  00145A  06E8               	decf	wreg,f,c
   280  00145C  E1FD               	bnz	clear_0
   281                           
   282                           ; Clear objects allocated to COMRAM (30 bytes)
   283  00145E  EE00  F028         	lfsr	0,__pbssCOMRAM
   284  001462  0E1E               	movlw	30
   285  001464                     clear_1:
   286  001464  6AEE               	clrf	postinc0,c
   287  001466  06E8               	decf	wreg,f,c
   288  001468  E1FD               	bnz	clear_1
   289  00146A                     end_of_initialization:
   290                           	opt stack 0
   291  00146A                     __end_of__initialization:
   292                           	opt stack 0
   293  00146A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   294  00146C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   295  00146E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   296  001470  6EF8               	movwf	tblptru,c
   297  001472  0100               	movlb	0
   298  001474  EF06  F002         	goto	_main	;jump to C main() function
   299                           tblptru	equ	0xFF8
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           
   303                           	psect	bssCOMRAM
   304  000028                     __pbssCOMRAM:
   305                           	opt stack 0
   306  000028                     _i2c_object:
   307                           	opt stack 0
   308  000028                     	ds	7
   309  00002F                     I2C_ISR@pi2c_buf_ptr:
   310                           	opt stack 0
   311  00002F                     	ds	2
   312  000031                     _p_i2c_current:
   313                           	opt stack 0
   314  000031                     	ds	2
   315  000033                     _p_i2c_trb_current:
   316                           	opt stack 0
   317  000033                     	ds	2
   318  000035                     _prev_reading:
   319                           	opt stack 0
   320  000035                     	ds	2
   321  000037                     _time_diff:
   322                           	opt stack 0
   323  000037                     	ds	2
   324  000039                     I2C_ISR@i2c_10bit_address_restart:
   325                           	opt stack 0
   326  000039                     	ds	1
   327  00003A                     I2C_ISR@i2c_bytes_left:
   328                           	opt stack 0
   329  00003A                     	ds	1
   330  00003B                     _i2c_trb_count:
   331                           	opt stack 0
   332  00003B                     	ds	1
   333  00003C                     _i2c_state:
   334                           	opt stack 0
   335  00003C                     	ds	1
   336  00003D                     _read_available:
   337                           	opt stack 0
   338  00003D                     	ds	1
   339  00003E                     _cycle_num:
   340                           	opt stack 0
   341  00003E                     	ds	1
   342  00003F                     _i2c_tr_queue:
   343                           	opt stack 0
   344  00003F                     	ds	5
   345  000044                     I2C_ISR@i2c_address:
   346                           	opt stack 0
   347  000044                     	ds	2
   348                           tblptru	equ	0xFF8
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           
   352                           	psect	bssBANK0
   353  0000A3                     __pbssBANK0:
   354                           	opt stack 0
   355  0000A3                     I2C_MasterRead@trBlock:
   356                           	opt stack 0
   357  0000A3                     	ds	5
   358  0000A8                     I2C_MasterWrite@trBlock:
   359                           	opt stack 0
   360  0000A8                     	ds	5
   361                           tblptru	equ	0xFF8
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           
   365                           	psect	cstackBANK0
   366  000060                     __pcstackBANK0:
   367                           	opt stack 0
   368  000060                     CAN_transmit@returnValue:
   369                           	opt stack 0
   370  000060                     ___ftdiv@cntr:
   371                           	opt stack 0
   372  000060                     ___ftmul@exp:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x0
   376  000060                     	ds	1
   377  000061                     CAN_transmit@tempEIDH:
   378                           	opt stack 0
   379  000061                     ___ftdiv@f3:
   380                           	opt stack 0
   381  000061                     ___ftmul@f3_as_product:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x1
   385  000061                     	ds	1
   386  000062                     CAN_transmit@tempEIDL:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x2
   390  000062                     	ds	1
   391  000063                     CAN_transmit@tempSIDH:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x3
   395  000063                     	ds	1
   396  000064                     CAN_transmit@tempSIDL:
   397                           	opt stack 0
   398  000064                     ___ftdiv@exp:
   399                           	opt stack 0
   400  000064                     ___ftmul@cntr:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x4
   404  000064                     	ds	1
   405  000065                     ___ftdiv@sign:
   406                           	opt stack 0
   407  000065                     ___ftmul@sign:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x5
   411  000065                     	ds	1
   412  000066                     ?___fttol:
   413                           	opt stack 0
   414  000066                     ___fttol@f1:
   415                           	opt stack 0
   416                           
   417                           ; 3 bytes @ 0x6
   418  000066                     	ds	4
   419  00006A                     ??___fttol:
   420                           
   421                           ; 1 bytes @ 0xA
   422  00006A                     	ds	5
   423  00006F                     ___fttol@sign1:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0xF
   427  00006F                     	ds	1
   428  000070                     ___fttol@lval:
   429                           	opt stack 0
   430                           
   431                           ; 4 bytes @ 0x10
   432  000070                     	ds	4
   433  000074                     ___fttol@exp1:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x14
   437  000074                     	ds	1
   438  000075                     main@VDD:
   439                           	opt stack 0
   440                           
   441                           ; 3 bytes @ 0x15
   442  000075                     	ds	3
   443  000078                     main@x:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0x18
   447  000078                     	ds	3
   448  00007B                     main@ADCResult:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x1B
   452  00007B                     	ds	2
   453  00007D                     main@message:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x1D
   457  00007D                     	ds	1
   458  00007E                     main@linear_accel_x_LSB:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x1E
   462  00007E                     	ds	1
   463  00007F                     main@linear_accel_x_MSB:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x1F
   467  00007F                     	ds	1
   468  000080                     main@linear_accel_y_LSB:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x20
   472  000080                     	ds	1
   473  000081                     main@linear_accel_y_MSB:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x21
   477  000081                     	ds	1
   478  000082                     main@linear_accel_z_LSB:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x22
   482  000082                     	ds	1
   483  000083                     main@linear_accel_z_MSB:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x23
   487  000083                     	ds	1
   488  000084                     main@ADC_result_H:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x24
   492  000084                     	ds	1
   493  000085                     main@ADC_result_L:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x25
   497  000085                     	ds	1
   498  000086                     main@status:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x26
   502  000086                     	ds	1
   503  000087                     main@G_sensor_data:
   504                           	opt stack 0
   505                           
   506                           ; 14 bytes @ 0x27
   507  000087                     	ds	14
   508  000095                     main@test:
   509                           	opt stack 0
   510                           
   511                           ; 14 bytes @ 0x35
   512  000095                     	ds	14
   513                           tblptru	equ	0xFF8
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           
   517                           	psect	cstackCOMRAM
   518  000001                     __pcstackCOMRAM:
   519                           	opt stack 0
   520  000001                     ??_I2C_Stop:
   521  000001                     ??_CCP2_CaptureISR:
   522  000001                     
   523                           ; 1 bytes @ 0x0
   524  000001                     	ds	2
   525  000003                     I2C_Stop@completion_code:
   526                           	opt stack 0
   527  000003                     CCP2_CaptureISR@module:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x2
   531  000003                     	ds	1
   532  000004                     ??_I2C_ISR:
   533                           
   534                           ; 1 bytes @ 0x3
   535  000004                     	ds	2
   536  000006                     ??_INTERRUPT_InterruptManager:
   537                           
   538                           ; 1 bytes @ 0x5
   539  000006                     	ds	14
   540  000014                     ??_ECAN_Initialize:
   541  000014                     ?_ADC_GetConversion:
   542                           	opt stack 0
   543  000014                     ?___ftpack:
   544                           	opt stack 0
   545  000014                     TMR1_SetInterruptHandler@InterruptHandler:
   546                           	opt stack 0
   547  000014                     I2C_MasterTRBInsert@ptrb_list:
   548                           	opt stack 0
   549  000014                     I2C_MasterReadTRBBuild@ptrb:
   550                           	opt stack 0
   551  000014                     I2C_MasterWriteTRBBuild@ptrb:
   552                           	opt stack 0
   553  000014                     ___ftpack@arg:
   554                           	opt stack 0
   555  000014                     convertCANid2Reg@tempPassedInID:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x13
   559  000014                     	ds	2
   560  000016                     ??_TMR1_Initialize:
   561  000016                     ??_ADC_GetConversion:
   562  000016                     I2C_MasterTRBInsert@pflag:
   563                           	opt stack 0
   564  000016                     I2C_MasterReadTRBBuild@pdata:
   565                           	opt stack 0
   566  000016                     I2C_MasterWriteTRBBuild@pdata:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x15
   570  000016                     	ds	1
   571  000017                     ___ftpack@exp:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x16
   575  000017                     	ds	1
   576  000018                     convertCANid2Reg@canIdType:
   577                           	opt stack 0
   578  000018                     ADC_GetConversion@channel:
   579                           	opt stack 0
   580  000018                     I2C_MasterReadTRBBuild@length:
   581                           	opt stack 0
   582  000018                     I2C_MasterWriteTRBBuild@length:
   583                           	opt stack 0
   584  000018                     ___ftpack@sign:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x17
   588  000018                     	ds	1
   589  000019                     ??___ftpack:
   590  000019                     I2C_MasterTRBInsert@count:
   591                           	opt stack 0
   592  000019                     convertCANid2Reg@passedInEIDH:
   593                           	opt stack 0
   594  000019                     I2C_MasterReadTRBBuild@address:
   595                           	opt stack 0
   596  000019                     I2C_MasterWriteTRBBuild@address:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x18
   600  000019                     	ds	2
   601  00001B                     ??_I2C_MasterWriteTRBBuild:
   602  00001B                     ??_I2C_MasterReadTRBBuild:
   603  00001B                     convertCANid2Reg@passedInEIDL:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x1A
   607  00001B                     	ds	1
   608  00001C                     ?___ftdiv:
   609                           	opt stack 0
   610  00001C                     ?___lwtoft:
   611                           	opt stack 0
   612  00001C                     ___lwtoft@c:
   613                           	opt stack 0
   614  00001C                     ___ftdiv@f1:
   615                           	opt stack 0
   616                           
   617                           ; 3 bytes @ 0x1B
   618  00001C                     	ds	1
   619  00001D                     convertCANid2Reg@passedInSIDH:
   620                           	opt stack 0
   621  00001D                     I2C_MasterWrite@pdata:
   622                           	opt stack 0
   623  00001D                     I2C_MasterRead@pdata:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x1C
   627  00001D                     	ds	2
   628  00001F                     ?___ftmul:
   629                           	opt stack 0
   630  00001F                     I2C_MasterWrite@length:
   631                           	opt stack 0
   632  00001F                     I2C_MasterRead@length:
   633                           	opt stack 0
   634  00001F                     convertCANid2Reg@passedInSIDL:
   635                           	opt stack 0
   636  00001F                     ___ftdiv@f2:
   637                           	opt stack 0
   638  00001F                     ___ftmul@f1:
   639                           	opt stack 0
   640                           
   641                           ; 3 bytes @ 0x1E
   642  00001F                     	ds	1
   643  000020                     I2C_MasterWrite@address:
   644                           	opt stack 0
   645  000020                     I2C_MasterRead@address:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x1F
   649  000020                     	ds	1
   650  000021                     ??_convertCANid2Reg:
   651                           
   652                           ; 1 bytes @ 0x20
   653  000021                     	ds	1
   654  000022                     ??___ftdiv:
   655  000022                     I2C_MasterWrite@pflag:
   656                           	opt stack 0
   657  000022                     I2C_MasterRead@pflag:
   658                           	opt stack 0
   659  000022                     ___ftmul@f2:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x21
   663  000022                     	ds	2
   664  000024                     BNO055_Initialize@id:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x23
   668  000024                     	ds	1
   669  000025                     ??___ftmul:
   670  000025                     BNO055_Initialize@message:
   671                           	opt stack 0
   672  000025                     convertCANid2Reg@wipSIDL:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x24
   676  000025                     	ds	1
   677  000026                     BNO055_Initialize@pflag:
   678                           	opt stack 0
   679  000026                     CAN_transmit@tempCanMsg:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x25
   683  000026                     	ds	1
   684  000027                     
   685                           ; 1 bytes @ 0x26
   686  000027                     	ds	1
   687  000028                     tblptru	equ	0xFF8
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           
   691                           ; 1 bytes @ 0x27
   692 ;;
   693 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   694 ;;
   695 ;; *************** function _main *****************
   696 ;; Defined at:
   697 ;;		line 51 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  test           14   53[BANK0 ] struct .
   702 ;;  G_sensor_dat   14   39[BANK0 ] struct .
   703 ;;  x               3   24[BANK0 ] struct .
   704 ;;  VDD             3   21[BANK0 ] struct .
   705 ;;  ADCResult       2   27[BANK0 ] unsigned int 
   706 ;;  status          1   38[BANK0 ] enum E15164
   707 ;;  ADC_result_L    1   37[BANK0 ] unsigned char 
   708 ;;  ADC_result_H    1   36[BANK0 ] unsigned char 
   709 ;;  linear_accel    1   35[BANK0 ] unsigned char 
   710 ;;  linear_accel    1   34[BANK0 ] unsigned char 
   711 ;;  linear_accel    1   33[BANK0 ] unsigned char 
   712 ;;  linear_accel    1   32[BANK0 ] unsigned char 
   713 ;;  linear_accel    1   31[BANK0 ] unsigned char 
   714 ;;  linear_accel    1   30[BANK0 ] unsigned char 
   715 ;;  message         1   29[BANK0 ] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;Total ram usage:       46 bytes
   730 ;; Hardware stack levels required when called:    7
   731 ;; This function calls:
   732 ;;		_ADC_GetConversion
   733 ;;		_CAN_transmit
   734 ;;		_I2C_MasterRead
   735 ;;		_I2C_MasterWrite
   736 ;;		_SYSTEM_Initialize
   737 ;;		___ftdiv
   738 ;;		___ftmul
   739 ;;		___fttol
   740 ;;		___lwtoft
   741 ;; This function is called by:
   742 ;;		Startup code after reset
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text0
   747  00040C                     __ptext0:
   748                           	opt stack 0
   749  00040C                     _main:
   750                           	opt stack 24
   751                           
   752                           ;main.c: 54: SYSTEM_Initialize();
   753                           
   754                           ;incstack = 0
   755  00040C  EC3C  F00A         	call	_SYSTEM_Initialize	;wreg free
   756                           
   757                           ;main.c: 56: CIOCONbits.CLKSEL = 1;
   758  000410  8070               	bsf	3952,0,c	;volatile
   759                           
   760                           ;main.c: 57: CIOCONbits.ENDRHI = 1;
   761  000412  8A70               	bsf	3952,5,c	;volatile
   762                           
   763                           ;main.c: 58: CIOCONbits.TX2SRC = 0;
   764  000414  9E70               	bcf	3952,7,c	;volatile
   765                           
   766                           ;main.c: 59: CIOCONbits.TX2EN = 1;
   767  000416  8C70               	bsf	3952,6,c	;volatile
   768                           
   769                           ;main.c: 61: double VDD = 5000.0;
   770  000418  0E40               	movlw	64
   771  00041A  0100               	movlb	0	; () banked
   772  00041C  6F75               	movwf	main@VDD& (0+255),b
   773  00041E  0E9C               	movlw	156
   774  000420  0100               	movlb	0	; () banked
   775  000422  6F76               	movwf	(main@VDD+1)& (0+255),b
   776  000424  0E45               	movlw	69
   777  000426  0100               	movlb	0	; () banked
   778  000428  6F77               	movwf	(main@VDD+2)& (0+255),b
   779                           
   780                           ; BSR set to: 0
   781                           ;main.c: 62: double x = VDD / 4096.0;
   782  00042A  C075  F01C         	movff	main@VDD,___ftdiv@f1
   783  00042E  C076  F01D         	movff	main@VDD+1,___ftdiv@f1+1
   784  000432  C077  F01E         	movff	main@VDD+2,___ftdiv@f1+2
   785  000436  0E00               	movlw	0
   786  000438  6E1F               	movwf	___ftdiv@f2,c
   787  00043A  0E80               	movlw	128
   788  00043C  6E20               	movwf	___ftdiv@f2+1,c
   789  00043E  0E45               	movlw	69
   790  000440  6E21               	movwf	___ftdiv@f2+2,c
   791  000442  EC1F  F007         	call	___ftdiv	;wreg free
   792  000446  C01C  F078         	movff	?___ftdiv,main@x
   793  00044A  C01D  F079         	movff	?___ftdiv+1,main@x+1
   794  00044E  C01E  F07A         	movff	?___ftdiv+2,main@x+2
   795  000452                     l3737:
   796                           
   797                           ;main.c: 100: {
   798                           ;main.c: 102: ADCResult = ADC_GetConversion(BT_FL) * x;
   799  000452  C078  F022         	movff	main@x,___ftmul@f2
   800  000456  C079  F023         	movff	main@x+1,___ftmul@f2+1
   801  00045A  C07A  F024         	movff	main@x+2,___ftmul@f2+2
   802  00045E  0E01               	movlw	1
   803  000460  ECFC  F009         	call	_ADC_GetConversion
   804  000464  C014  F01C         	movff	?_ADC_GetConversion,___lwtoft@c
   805  000468  C015  F01D         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   806  00046C  EC4F  F00A         	call	___lwtoft	;wreg free
   807  000470  C01C  F01F         	movff	?___lwtoft,___ftmul@f1
   808  000474  C01D  F020         	movff	?___lwtoft+1,___ftmul@f1+1
   809  000478  C01E  F021         	movff	?___lwtoft+2,___ftmul@f1+2
   810  00047C  EC8F  F006         	call	___ftmul	;wreg free
   811  000480  C01F  F066         	movff	?___ftmul,___fttol@f1
   812  000484  C020  F067         	movff	?___ftmul+1,___fttol@f1+1
   813  000488  C021  F068         	movff	?___ftmul+2,___fttol@f1+2
   814  00048C  ECED  F005         	call	___fttol	;wreg free
   815  000490  C066  F07B         	movff	?___fttol,main@ADCResult
   816  000494  C067  F07C         	movff	?___fttol+1,main@ADCResult+1
   817                           
   818                           ;main.c: 103: ADC_result_H = ADCResult >> 8;
   819  000498  0100               	movlb	0	; () banked
   820  00049A  517C               	movf	(main@ADCResult+1)& (0+255),w,b
   821  00049C  0100               	movlb	0	; () banked
   822  00049E  6F84               	movwf	main@ADC_result_H& (0+255),b
   823                           
   824                           ; BSR set to: 0
   825                           ;main.c: 104: ADC_result_L = ADCResult;
   826  0004A0  C07B  F085         	movff	main@ADCResult,main@ADC_result_L
   827                           
   828                           ; BSR set to: 0
   829                           ;main.c: 105: uCAN_MSG test;
   830                           ;main.c: 106: test.frame.idType=1;
   831  0004A4  0E01               	movlw	1
   832  0004A6  0100               	movlb	0	; () banked
   833  0004A8  6F95               	movwf	main@test& (0+255),b
   834                           
   835                           ; BSR set to: 0
   836                           ;main.c: 107: test.frame.id=0x634;
   837  0004AA  0E34               	movlw	52
   838  0004AC  0100               	movlb	0	; () banked
   839  0004AE  6F96               	movwf	(main@test+1)& (0+255),b
   840  0004B0  0E06               	movlw	6
   841  0004B2  6F97               	movwf	(main@test+2)& (0+255),b
   842  0004B4  0E00               	movlw	0
   843  0004B6  6F98               	movwf	(main@test+3)& (0+255),b
   844  0004B8  0E00               	movlw	0
   845  0004BA  6F99               	movwf	(main@test+4)& (0+255),b
   846                           
   847                           ; BSR set to: 0
   848                           ;main.c: 108: test.frame.dlc=8;
   849  0004BC  0E08               	movlw	8
   850  0004BE  0100               	movlb	0	; () banked
   851  0004C0  6F9A               	movwf	(main@test+5)& (0+255),b
   852                           
   853                           ; BSR set to: 0
   854                           ;main.c: 109: test.frame.data0=ADC_result_H;
   855  0004C2  C084  F09B         	movff	main@ADC_result_H,main@test+6
   856                           
   857                           ; BSR set to: 0
   858                           ;main.c: 110: test.frame.data1=ADC_result_L;
   859  0004C6  C085  F09C         	movff	main@ADC_result_L,main@test+7
   860                           
   861                           ; BSR set to: 0
   862                           ;main.c: 111: test.frame.data2=ADC_result_H;
   863  0004CA  C084  F09D         	movff	main@ADC_result_H,main@test+8
   864                           
   865                           ; BSR set to: 0
   866                           ;main.c: 112: test.frame.data3=ADC_result_L;
   867  0004CE  C085  F09E         	movff	main@ADC_result_L,main@test+9
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 113: test.frame.data4=ADC_result_H;
   871  0004D2  C084  F09F         	movff	main@ADC_result_H,main@test+10
   872                           
   873                           ; BSR set to: 0
   874                           ;main.c: 114: test.frame.data5=ADC_result_L;
   875  0004D6  C085  F0A0         	movff	main@ADC_result_L,main@test+11
   876                           
   877                           ; BSR set to: 0
   878                           ;main.c: 115: test.frame.data6=ADC_result_H;
   879  0004DA  C084  F0A1         	movff	main@ADC_result_H,main@test+12
   880                           
   881                           ; BSR set to: 0
   882                           ;main.c: 116: test.frame.data7=ADC_result_L;
   883  0004DE  C085  F0A2         	movff	main@ADC_result_L,main@test+13
   884                           
   885                           ; BSR set to: 0
   886                           ;main.c: 118: CAN_transmit(&test);
   887  0004E2  0E95               	movlw	low main@test
   888  0004E4  6E26               	movwf	CAN_transmit@tempCanMsg,c
   889  0004E6  0E00               	movlw	high main@test
   890  0004E8  6E27               	movwf	CAN_transmit@tempCanMsg+1,c
   891  0004EA  EC5F  F000         	call	_CAN_transmit	;wreg free
   892                           
   893                           ;main.c: 122: message = OPERATION_MODE_NDOF;
   894  0004EE  0E0C               	movlw	12
   895  0004F0  0100               	movlb	0	; () banked
   896  0004F2  6F7D               	movwf	main@message& (0+255),b
   897                           
   898                           ;main.c: 123: status = I2C_MESSAGE_PENDING;
   899  0004F4  0E02               	movlw	2
   900  0004F6  0100               	movlb	0	; () banked
   901  0004F8  6F86               	movwf	main@status& (0+255),b
   902                           
   903                           ; BSR set to: 0
   904                           ;main.c: 124: I2C_MasterWrite ( &message, 1, BNO055_OPR_MODE_ADDR, &status );
   905  0004FA  0E7D               	movlw	low main@message
   906  0004FC  6E1D               	movwf	I2C_MasterWrite@pdata,c
   907  0004FE  0E00               	movlw	high main@message
   908  000500  6E1E               	movwf	I2C_MasterWrite@pdata+1,c
   909  000502  0E01               	movlw	1
   910  000504  6E1F               	movwf	I2C_MasterWrite@length,c
   911  000506  0E00               	movlw	0
   912  000508  6E21               	movwf	I2C_MasterWrite@address+1,c
   913  00050A  0E3D               	movlw	61
   914  00050C  6E20               	movwf	I2C_MasterWrite@address,c
   915  00050E  0E86               	movlw	low main@status
   916  000510  6E22               	movwf	I2C_MasterWrite@pflag,c
   917  000512  0E00               	movlw	high main@status
   918  000514  6E23               	movwf	I2C_MasterWrite@pflag+1,c
   919  000516  EC19  F009         	call	_I2C_MasterWrite	;wreg free
   920  00051A                     l3769:
   921  00051A  0100               	movlb	0	; () banked
   922  00051C  5186               	movf	main@status& (0+255),w,b
   923  00051E  0100               	movlb	0	; () banked
   924  000520  A4D8               	btfss	status,2,c
   925  000522  D7FB               	goto	l3769
   926                           
   927                           ; BSR set to: 0
   928                           ;main.c: 127: status = I2C_MESSAGE_PENDING;
   929                           
   930                           ; BSR set to: 0
   931  000524  0E02               	movlw	2
   932  000526  0100               	movlb	0	; () banked
   933  000528  6F86               	movwf	main@status& (0+255),b
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 128: I2C_MasterRead ( &linear_accel_x_LSB, 1, BNO055_LINEAR_ACCEL_DATA_X_LSB_AD
      +                          DR, &status );
   937  00052A  0E7E               	movlw	low main@linear_accel_x_LSB
   938  00052C  6E1D               	movwf	I2C_MasterRead@pdata,c
   939  00052E  0E00               	movlw	high main@linear_accel_x_LSB
   940  000530  6E1E               	movwf	I2C_MasterRead@pdata+1,c
   941  000532  0E01               	movlw	1
   942  000534  6E1F               	movwf	I2C_MasterRead@length,c
   943  000536  0E00               	movlw	0
   944  000538  6E21               	movwf	I2C_MasterRead@address+1,c
   945  00053A  0E28               	movlw	40
   946  00053C  6E20               	movwf	I2C_MasterRead@address,c
   947  00053E  0E86               	movlw	low main@status
   948  000540  6E22               	movwf	I2C_MasterRead@pflag,c
   949  000542  0E00               	movlw	high main@status
   950  000544  6E23               	movwf	I2C_MasterRead@pflag+1,c
   951  000546  EC3E  F009         	call	_I2C_MasterRead	;wreg free
   952  00054A                     l3775:
   953  00054A  0100               	movlb	0	; () banked
   954  00054C  5186               	movf	main@status& (0+255),w,b
   955  00054E  0100               	movlb	0	; () banked
   956  000550  A4D8               	btfss	status,2,c
   957  000552  D7FB               	goto	l3775
   958                           
   959                           ; BSR set to: 0
   960                           ;main.c: 130: status = I2C_MESSAGE_PENDING;
   961                           
   962                           ; BSR set to: 0
   963  000554  0E02               	movlw	2
   964  000556  0100               	movlb	0	; () banked
   965  000558  6F86               	movwf	main@status& (0+255),b
   966                           
   967                           ; BSR set to: 0
   968                           ;main.c: 131: I2C_MasterRead ( &linear_accel_x_MSB, 1, BNO055_LINEAR_ACCEL_DATA_X_MSB_AD
      +                          DR, &status );
   969  00055A  0E7F               	movlw	low main@linear_accel_x_MSB
   970  00055C  6E1D               	movwf	I2C_MasterRead@pdata,c
   971  00055E  0E00               	movlw	high main@linear_accel_x_MSB
   972  000560  6E1E               	movwf	I2C_MasterRead@pdata+1,c
   973  000562  0E01               	movlw	1
   974  000564  6E1F               	movwf	I2C_MasterRead@length,c
   975  000566  0E00               	movlw	0
   976  000568  6E21               	movwf	I2C_MasterRead@address+1,c
   977  00056A  0E29               	movlw	41
   978  00056C  6E20               	movwf	I2C_MasterRead@address,c
   979  00056E  0E86               	movlw	low main@status
   980  000570  6E22               	movwf	I2C_MasterRead@pflag,c
   981  000572  0E00               	movlw	high main@status
   982  000574  6E23               	movwf	I2C_MasterRead@pflag+1,c
   983  000576  EC3E  F009         	call	_I2C_MasterRead	;wreg free
   984  00057A                     l3781:
   985  00057A  0100               	movlb	0	; () banked
   986  00057C  5186               	movf	main@status& (0+255),w,b
   987  00057E  0100               	movlb	0	; () banked
   988  000580  A4D8               	btfss	status,2,c
   989  000582  D7FB               	goto	l3781
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 133: status = I2C_MESSAGE_PENDING;
   993                           
   994                           ; BSR set to: 0
   995  000584  0E02               	movlw	2
   996  000586  0100               	movlb	0	; () banked
   997  000588  6F86               	movwf	main@status& (0+255),b
   998                           
   999                           ; BSR set to: 0
  1000                           ;main.c: 134: I2C_MasterRead ( &linear_accel_y_LSB, 1, BNO055_LINEAR_ACCEL_DATA_Y_LSB_AD
      +                          DR, &status );
  1001  00058A  0E80               	movlw	low main@linear_accel_y_LSB
  1002  00058C  6E1D               	movwf	I2C_MasterRead@pdata,c
  1003  00058E  0E00               	movlw	high main@linear_accel_y_LSB
  1004  000590  6E1E               	movwf	I2C_MasterRead@pdata+1,c
  1005  000592  0E01               	movlw	1
  1006  000594  6E1F               	movwf	I2C_MasterRead@length,c
  1007  000596  0E00               	movlw	0
  1008  000598  6E21               	movwf	I2C_MasterRead@address+1,c
  1009  00059A  0E2A               	movlw	42
  1010  00059C  6E20               	movwf	I2C_MasterRead@address,c
  1011  00059E  0E86               	movlw	low main@status
  1012  0005A0  6E22               	movwf	I2C_MasterRead@pflag,c
  1013  0005A2  0E00               	movlw	high main@status
  1014  0005A4  6E23               	movwf	I2C_MasterRead@pflag+1,c
  1015  0005A6  EC3E  F009         	call	_I2C_MasterRead	;wreg free
  1016  0005AA                     l3787:
  1017  0005AA  0100               	movlb	0	; () banked
  1018  0005AC  5186               	movf	main@status& (0+255),w,b
  1019  0005AE  0100               	movlb	0	; () banked
  1020  0005B0  A4D8               	btfss	status,2,c
  1021  0005B2  D7FB               	goto	l3787
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main.c: 136: status = I2C_MESSAGE_PENDING;
  1025                           
  1026                           ; BSR set to: 0
  1027  0005B4  0E02               	movlw	2
  1028  0005B6  0100               	movlb	0	; () banked
  1029  0005B8  6F86               	movwf	main@status& (0+255),b
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;main.c: 137: I2C_MasterRead ( &linear_accel_y_MSB, 1, BNO055_LINEAR_ACCEL_DATA_Y_MSB_AD
      +                          DR, &status );
  1033  0005BA  0E81               	movlw	low main@linear_accel_y_MSB
  1034  0005BC  6E1D               	movwf	I2C_MasterRead@pdata,c
  1035  0005BE  0E00               	movlw	high main@linear_accel_y_MSB
  1036  0005C0  6E1E               	movwf	I2C_MasterRead@pdata+1,c
  1037  0005C2  0E01               	movlw	1
  1038  0005C4  6E1F               	movwf	I2C_MasterRead@length,c
  1039  0005C6  0E00               	movlw	0
  1040  0005C8  6E21               	movwf	I2C_MasterRead@address+1,c
  1041  0005CA  0E2B               	movlw	43
  1042  0005CC  6E20               	movwf	I2C_MasterRead@address,c
  1043  0005CE  0E86               	movlw	low main@status
  1044  0005D0  6E22               	movwf	I2C_MasterRead@pflag,c
  1045  0005D2  0E00               	movlw	high main@status
  1046  0005D4  6E23               	movwf	I2C_MasterRead@pflag+1,c
  1047  0005D6  EC3E  F009         	call	_I2C_MasterRead	;wreg free
  1048  0005DA                     l3793:
  1049  0005DA  0100               	movlb	0	; () banked
  1050  0005DC  5186               	movf	main@status& (0+255),w,b
  1051  0005DE  0100               	movlb	0	; () banked
  1052  0005E0  A4D8               	btfss	status,2,c
  1053  0005E2  D7FB               	goto	l3793
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;main.c: 139: status = I2C_MESSAGE_PENDING;
  1057                           
  1058                           ; BSR set to: 0
  1059  0005E4  0E02               	movlw	2
  1060  0005E6  0100               	movlb	0	; () banked
  1061  0005E8  6F86               	movwf	main@status& (0+255),b
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;main.c: 140: I2C_MasterRead ( &linear_accel_z_LSB, 1, BNO055_LINEAR_ACCEL_DATA_Z_LSB_AD
      +                          DR, &status );
  1065  0005EA  0E82               	movlw	low main@linear_accel_z_LSB
  1066  0005EC  6E1D               	movwf	I2C_MasterRead@pdata,c
  1067  0005EE  0E00               	movlw	high main@linear_accel_z_LSB
  1068  0005F0  6E1E               	movwf	I2C_MasterRead@pdata+1,c
  1069  0005F2  0E01               	movlw	1
  1070  0005F4  6E1F               	movwf	I2C_MasterRead@length,c
  1071  0005F6  0E00               	movlw	0
  1072  0005F8  6E21               	movwf	I2C_MasterRead@address+1,c
  1073  0005FA  0E2C               	movlw	44
  1074  0005FC  6E20               	movwf	I2C_MasterRead@address,c
  1075  0005FE  0E86               	movlw	low main@status
  1076  000600  6E22               	movwf	I2C_MasterRead@pflag,c
  1077  000602  0E00               	movlw	high main@status
  1078  000604  6E23               	movwf	I2C_MasterRead@pflag+1,c
  1079  000606  EC3E  F009         	call	_I2C_MasterRead	;wreg free
  1080  00060A                     l3799:
  1081  00060A  0100               	movlb	0	; () banked
  1082  00060C  5186               	movf	main@status& (0+255),w,b
  1083  00060E  0100               	movlb	0	; () banked
  1084  000610  A4D8               	btfss	status,2,c
  1085  000612  D7FB               	goto	l3799
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;main.c: 142: status = I2C_MESSAGE_PENDING;
  1089                           
  1090                           ; BSR set to: 0
  1091  000614  0E02               	movlw	2
  1092  000616  0100               	movlb	0	; () banked
  1093  000618  6F86               	movwf	main@status& (0+255),b
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;main.c: 143: I2C_MasterRead ( &linear_accel_z_MSB, 1, BNO055_LINEAR_ACCEL_DATA_Z_MSB_AD
      +                          DR, &status );
  1097  00061A  0E83               	movlw	low main@linear_accel_z_MSB
  1098  00061C  6E1D               	movwf	I2C_MasterRead@pdata,c
  1099  00061E  0E00               	movlw	high main@linear_accel_z_MSB
  1100  000620  6E1E               	movwf	I2C_MasterRead@pdata+1,c
  1101  000622  0E01               	movlw	1
  1102  000624  6E1F               	movwf	I2C_MasterRead@length,c
  1103  000626  0E00               	movlw	0
  1104  000628  6E21               	movwf	I2C_MasterRead@address+1,c
  1105  00062A  0E2D               	movlw	45
  1106  00062C  6E20               	movwf	I2C_MasterRead@address,c
  1107  00062E  0E86               	movlw	low main@status
  1108  000630  6E22               	movwf	I2C_MasterRead@pflag,c
  1109  000632  0E00               	movlw	high main@status
  1110  000634  6E23               	movwf	I2C_MasterRead@pflag+1,c
  1111  000636  EC3E  F009         	call	_I2C_MasterRead	;wreg free
  1112  00063A                     l3805:
  1113  00063A  0100               	movlb	0	; () banked
  1114  00063C  5186               	movf	main@status& (0+255),w,b
  1115  00063E  0100               	movlb	0	; () banked
  1116  000640  A4D8               	btfss	status,2,c
  1117  000642  D7FB               	goto	l3805
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;main.c: 146: uCAN_MSG G_sensor_data;
  1121                           ;main.c: 148: G_sensor_data.frame.idType = 1;
  1122                           
  1123                           ; BSR set to: 0
  1124  000644  0E01               	movlw	1
  1125  000646  0100               	movlb	0	; () banked
  1126  000648  6F87               	movwf	main@G_sensor_data& (0+255),b
  1127                           
  1128                           ;main.c: 149: G_sensor_data.frame.id = 0x635;
  1129  00064A  0E35               	movlw	53
  1130  00064C  0100               	movlb	0	; () banked
  1131  00064E  6F88               	movwf	(main@G_sensor_data+1)& (0+255),b
  1132  000650  0E06               	movlw	6
  1133  000652  6F89               	movwf	(main@G_sensor_data+2)& (0+255),b
  1134  000654  0E00               	movlw	0
  1135  000656  6F8A               	movwf	(main@G_sensor_data+3)& (0+255),b
  1136  000658  0E00               	movlw	0
  1137  00065A  6F8B               	movwf	(main@G_sensor_data+4)& (0+255),b
  1138                           
  1139                           ;main.c: 150: G_sensor_data.frame.dlc = 6;
  1140  00065C  0E06               	movlw	6
  1141  00065E  0100               	movlb	0	; () banked
  1142  000660  6F8C               	movwf	(main@G_sensor_data+5)& (0+255),b
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;main.c: 151: G_sensor_data.frame.data0 = linear_accel_x_LSB;
  1146  000662  C07E  F08D         	movff	main@linear_accel_x_LSB,main@G_sensor_data+6
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 152: G_sensor_data.frame.data1 = linear_accel_x_MSB;
  1150  000666  C07F  F08E         	movff	main@linear_accel_x_MSB,main@G_sensor_data+7
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 153: G_sensor_data.frame.data2 = linear_accel_y_LSB;
  1154  00066A  C080  F08F         	movff	main@linear_accel_y_LSB,main@G_sensor_data+8
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;main.c: 154: G_sensor_data.frame.data3 = linear_accel_y_MSB;
  1158  00066E  C081  F090         	movff	main@linear_accel_y_MSB,main@G_sensor_data+9
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 155: G_sensor_data.frame.data4 = linear_accel_z_LSB;
  1162  000672  C082  F091         	movff	main@linear_accel_z_LSB,main@G_sensor_data+10
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 156: G_sensor_data.frame.data5 = linear_accel_z_MSB;
  1166  000676  C083  F092         	movff	main@linear_accel_z_MSB,main@G_sensor_data+11
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 158: CAN_transmit ( &G_sensor_data );
  1170  00067A  0E87               	movlw	low main@G_sensor_data
  1171  00067C  6E26               	movwf	CAN_transmit@tempCanMsg,c
  1172  00067E  0E00               	movlw	high main@G_sensor_data
  1173  000680  6E27               	movwf	CAN_transmit@tempCanMsg+1,c
  1174  000682  EC5F  F000         	call	_CAN_transmit	;wreg free
  1175  000686  D6E5               	goto	l3737
  1176  000688                     __end_of_main:
  1177                           	opt stack 0
  1178                           tblptru	equ	0xFF8
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function ___lwtoft *****************
  1184 ;; Defined at:
  1185 ;;		line 28 in file "D:\Atmel\xc8\sources\common\lwtoft.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  c               2   27[COMRAM] unsigned int 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  3   27[COMRAM] float 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1199 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;Total ram usage:        3 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    4
  1206 ;; This function calls:
  1207 ;;		___ftpack
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text1
  1214  00149E                     __ptext1:
  1215                           	opt stack 0
  1216  00149E                     ___lwtoft:
  1217                           	opt stack 26
  1218                           
  1219                           ;incstack = 0
  1220  00149E  C01C  F014         	movff	___lwtoft@c,___ftpack@arg
  1221  0014A2  C01D  F015         	movff	___lwtoft@c+1,___ftpack@arg+1
  1222  0014A6  6A16               	clrf	___ftpack@arg+2,c
  1223  0014A8  0E8E               	movlw	142
  1224  0014AA  6E17               	movwf	___ftpack@exp,c
  1225  0014AC  0E00               	movlw	0
  1226  0014AE  6E18               	movwf	___ftpack@sign,c
  1227  0014B0  EC18  F008         	call	___ftpack	;wreg free
  1228  0014B4  C014  F01C         	movff	?___ftpack,?___lwtoft
  1229  0014B8  C015  F01D         	movff	?___ftpack+1,?___lwtoft+1
  1230  0014BC  C016  F01E         	movff	?___ftpack+2,?___lwtoft+2
  1231  0014C0  0012               	return	
  1232  0014C2                     __end_of___lwtoft:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           postinc0	equ	0xFEE
  1236                           wreg	equ	0xFE8
  1237                           status	equ	0xFD8
  1238                           
  1239 ;; *************** function ___fttol *****************
  1240 ;; Defined at:
  1241 ;;		line 44 in file "D:\Atmel\xc8\sources\common\fttol.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  f1              3    6[BANK0 ] float 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  lval            4   16[BANK0 ] unsigned long 
  1246 ;;  exp1            1   20[BANK0 ] unsigned char 
  1247 ;;  sign1           1   15[BANK0 ] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  4    6[BANK0 ] long 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1261 ;;Total ram usage:       15 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    3
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text2
  1272  000BDA                     __ptext2:
  1273                           	opt stack 0
  1274  000BDA                     ___fttol:
  1275                           	opt stack 27
  1276                           
  1277                           ;incstack = 0
  1278  000BDA  C068  F06A         	movff	___fttol@f1+2,??___fttol
  1279  000BDE  0100               	movlb	0	; () banked
  1280  000BE0  6B6B               	clrf	(??___fttol+1)& (0+255),b
  1281  000BE2  6B6C               	clrf	(??___fttol+2)& (0+255),b
  1282  000BE4  0100               	movlb	0	; () banked
  1283  000BE6  3567               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1284  000BE8  0100               	movlb	0	; () banked
  1285  000BEA  376A               	rlcf	??___fttol& (0+255),f,b
  1286  000BEC  E301               	bnc	u2311
  1287  000BEE  816B               	bsf	(??___fttol+1)& (0+255),0,b
  1288  000BF0                     u2311:
  1289  000BF0  0100               	movlb	0	; () banked
  1290  000BF2  516A               	movf	??___fttol& (0+255),w,b
  1291  000BF4  0100               	movlb	0	; () banked
  1292  000BF6  6F74               	movwf	___fttol@exp1& (0+255),b
  1293  000BF8  0100               	movlb	0	; () banked
  1294  000BFA  5174               	movf	___fttol@exp1& (0+255),w,b
  1295  000BFC  A4D8               	btfss	status,2,c
  1296  000BFE  D00A               	goto	l3679
  1297                           
  1298                           ; BSR set to: 0
  1299  000C00  0E00               	movlw	0
  1300  000C02  0100               	movlb	0	; () banked
  1301  000C04  6F66               	movwf	?___fttol& (0+255),b
  1302  000C06  0E00               	movlw	0
  1303  000C08  6F67               	movwf	(?___fttol+1)& (0+255),b
  1304  000C0A  0E00               	movlw	0
  1305  000C0C  6F68               	movwf	(?___fttol+2)& (0+255),b
  1306  000C0E  0E00               	movlw	0
  1307  000C10  6F69               	movwf	(?___fttol+3)& (0+255),b
  1308                           
  1309                           ; BSR set to: 0
  1310  000C12  0012               	return	
  1311  000C14                     l3679:
  1312                           
  1313                           ; BSR set to: 0
  1314  000C14  0E17               	movlw	23
  1315  000C16  0100               	movlb	0	; () banked
  1316  000C18  6F6A               	movwf	??___fttol& (0+255),b
  1317  000C1A  C066  F06B         	movff	___fttol@f1,??___fttol+1
  1318  000C1E  C067  F06C         	movff	___fttol@f1+1,??___fttol+2
  1319  000C22  C068  F06D         	movff	___fttol@f1+2,??___fttol+3
  1320  000C26  0100               	movlb	0	; () banked
  1321  000C28  296A               	incf	??___fttol& (0+255),w,b
  1322  000C2A  0100               	movlb	0	; () banked
  1323  000C2C  6F6E               	movwf	(??___fttol+4)& (0+255),b
  1324  000C2E  D005               	goto	u2330
  1325  000C30                     u2335:
  1326  000C30  0100               	movlb	0	; () banked
  1327  000C32  90D8               	bcf	status,0,c
  1328  000C34  336D               	rrcf	(??___fttol+3)& (0+255),f,b
  1329  000C36  336C               	rrcf	(??___fttol+2)& (0+255),f,b
  1330  000C38  336B               	rrcf	(??___fttol+1)& (0+255),f,b
  1331  000C3A                     u2330:
  1332  000C3A  0100               	movlb	0	; () banked
  1333  000C3C  2F6E               	decfsz	(??___fttol+4)& (0+255),f,b
  1334  000C3E  D7F8               	goto	u2335
  1335  000C40  0100               	movlb	0	; () banked
  1336  000C42  516B               	movf	(??___fttol+1)& (0+255),w,b
  1337  000C44  0100               	movlb	0	; () banked
  1338  000C46  6F6F               	movwf	___fttol@sign1& (0+255),b
  1339                           
  1340                           ; BSR set to: 0
  1341  000C48  0100               	movlb	0	; () banked
  1342  000C4A  8F67               	bsf	(___fttol@f1+1)& (0+255),7,b
  1343                           
  1344                           ; BSR set to: 0
  1345  000C4C  0EFF               	movlw	255
  1346  000C4E  0100               	movlb	0	; () banked
  1347  000C50  1766               	andwf	___fttol@f1& (0+255),f,b
  1348  000C52  0EFF               	movlw	255
  1349  000C54  0100               	movlb	0	; () banked
  1350  000C56  1767               	andwf	(___fttol@f1+1)& (0+255),f,b
  1351  000C58  0E00               	movlw	0
  1352  000C5A  0100               	movlb	0	; () banked
  1353  000C5C  1768               	andwf	(___fttol@f1+2)& (0+255),f,b
  1354                           
  1355                           ; BSR set to: 0
  1356  000C5E  0100               	movlb	0	; () banked
  1357  000C60  5166               	movf	___fttol@f1& (0+255),w,b
  1358  000C62  0100               	movlb	0	; () banked
  1359  000C64  6F70               	movwf	___fttol@lval& (0+255),b
  1360  000C66  0100               	movlb	0	; () banked
  1361  000C68  5167               	movf	(___fttol@f1+1)& (0+255),w,b
  1362  000C6A  0100               	movlb	0	; () banked
  1363  000C6C  6F71               	movwf	(___fttol@lval+1)& (0+255),b
  1364  000C6E  0100               	movlb	0	; () banked
  1365  000C70  5168               	movf	(___fttol@f1+2)& (0+255),w,b
  1366  000C72  0100               	movlb	0	; () banked
  1367  000C74  6F72               	movwf	(___fttol@lval+2)& (0+255),b
  1368  000C76  0100               	movlb	0	; () banked
  1369  000C78  6B73               	clrf	(___fttol@lval+3)& (0+255),b
  1370                           
  1371                           ; BSR set to: 0
  1372  000C7A  0E8E               	movlw	142
  1373  000C7C  0100               	movlb	0	; () banked
  1374  000C7E  5F74               	subwf	___fttol@exp1& (0+255),f,b
  1375                           
  1376                           ; BSR set to: 0
  1377  000C80  0100               	movlb	0	; () banked
  1378  000C82  AF74               	btfss	___fttol@exp1& (0+255),7,b
  1379  000C84  D01A               	goto	l3701
  1380                           
  1381                           ; BSR set to: 0
  1382  000C86  0100               	movlb	0	; () banked
  1383  000C88  5174               	movf	___fttol@exp1& (0+255),w,b
  1384  000C8A  0A80               	xorlw	128
  1385  000C8C  0F8F               	addlw	143
  1386  000C8E  B0D8               	btfsc	status,0,c
  1387  000C90  D00A               	goto	l3697
  1388                           
  1389                           ; BSR set to: 0
  1390  000C92  0E00               	movlw	0
  1391  000C94  0100               	movlb	0	; () banked
  1392  000C96  6F66               	movwf	?___fttol& (0+255),b
  1393  000C98  0E00               	movlw	0
  1394  000C9A  6F67               	movwf	(?___fttol+1)& (0+255),b
  1395  000C9C  0E00               	movlw	0
  1396  000C9E  6F68               	movwf	(?___fttol+2)& (0+255),b
  1397  000CA0  0E00               	movlw	0
  1398  000CA2  6F69               	movwf	(?___fttol+3)& (0+255),b
  1399                           
  1400                           ; BSR set to: 0
  1401  000CA4  0012               	return	
  1402  000CA6                     l3697:
  1403                           
  1404                           ; BSR set to: 0
  1405  000CA6  0100               	movlb	0	; () banked
  1406  000CA8  90D8               	bcf	status,0,c
  1407  000CAA  3373               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1408  000CAC  3372               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1409  000CAE  3371               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1410  000CB0  3370               	rrcf	___fttol@lval& (0+255),f,b
  1411                           
  1412                           ; BSR set to: 0
  1413  000CB2  0100               	movlb	0	; () banked
  1414  000CB4  3F74               	incfsz	___fttol@exp1& (0+255),f,b
  1415  000CB6  D7F7               	goto	l3697
  1416                           
  1417                           ; BSR set to: 0
  1418  000CB8  D01B               	goto	l3711
  1419  000CBA                     l3701:
  1420                           
  1421                           ; BSR set to: 0
  1422  000CBA  0E17               	movlw	23
  1423  000CBC  0100               	movlb	0	; () banked
  1424  000CBE  6574               	cpfsgt	___fttol@exp1& (0+255),b
  1425  000CC0  D012               	goto	l3709
  1426                           
  1427                           ; BSR set to: 0
  1428  000CC2  0E00               	movlw	0
  1429  000CC4  0100               	movlb	0	; () banked
  1430  000CC6  6F66               	movwf	?___fttol& (0+255),b
  1431  000CC8  0E00               	movlw	0
  1432  000CCA  6F67               	movwf	(?___fttol+1)& (0+255),b
  1433  000CCC  0E00               	movlw	0
  1434  000CCE  6F68               	movwf	(?___fttol+2)& (0+255),b
  1435  000CD0  0E00               	movlw	0
  1436  000CD2  6F69               	movwf	(?___fttol+3)& (0+255),b
  1437                           
  1438                           ; BSR set to: 0
  1439  000CD4  0012               	return	
  1440  000CD6                     l3707:
  1441                           
  1442                           ; BSR set to: 0
  1443  000CD6  0100               	movlb	0	; () banked
  1444  000CD8  90D8               	bcf	status,0,c
  1445  000CDA  3770               	rlcf	___fttol@lval& (0+255),f,b
  1446  000CDC  3771               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1447  000CDE  3772               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1448  000CE0  3773               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1449  000CE2  0100               	movlb	0	; () banked
  1450  000CE4  0774               	decf	___fttol@exp1& (0+255),f,b
  1451  000CE6                     l3709:
  1452                           
  1453                           ; BSR set to: 0
  1454  000CE6  0100               	movlb	0	; () banked
  1455  000CE8  5174               	movf	___fttol@exp1& (0+255),w,b
  1456  000CEA  0100               	movlb	0	; () banked
  1457  000CEC  A4D8               	btfss	status,2,c
  1458  000CEE  D7F3               	goto	l3707
  1459  000CF0                     l3711:
  1460                           
  1461                           ; BSR set to: 0
  1462  000CF0  0100               	movlb	0	; () banked
  1463  000CF2  516F               	movf	___fttol@sign1& (0+255),w,b
  1464  000CF4  0100               	movlb	0	; () banked
  1465  000CF6  B4D8               	btfsc	status,2,c
  1466  000CF8  D009               	goto	l3715
  1467                           
  1468                           ; BSR set to: 0
  1469  000CFA  0100               	movlb	0	; () banked
  1470  000CFC  1F73               	comf	(___fttol@lval+3)& (0+255),f,b
  1471  000CFE  1F72               	comf	(___fttol@lval+2)& (0+255),f,b
  1472  000D00  1F71               	comf	(___fttol@lval+1)& (0+255),f,b
  1473  000D02  6D70               	negf	___fttol@lval& (0+255),b
  1474  000D04  0E00               	movlw	0
  1475  000D06  2371               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1476  000D08  2372               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1477  000D0A  2373               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1478  000D0C                     l3715:
  1479                           
  1480                           ; BSR set to: 0
  1481  000D0C  C070  F066         	movff	___fttol@lval,?___fttol
  1482  000D10  C071  F067         	movff	___fttol@lval+1,?___fttol+1
  1483  000D14  C072  F068         	movff	___fttol@lval+2,?___fttol+2
  1484  000D18  C073  F069         	movff	___fttol@lval+3,?___fttol+3
  1485  000D1C  0012               	return	
  1486  000D1E                     __end_of___fttol:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           status	equ	0xFD8
  1492                           
  1493 ;; *************** function ___ftmul *****************
  1494 ;; Defined at:
  1495 ;;		line 62 in file "D:\Atmel\xc8\sources\common\ftmul.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  f1              3   30[COMRAM] float 
  1498 ;;  f2              3   33[COMRAM] float 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1501 ;;  sign            1    5[BANK0 ] unsigned char 
  1502 ;;  cntr            1    4[BANK0 ] unsigned char 
  1503 ;;  exp             1    0[BANK0 ] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  3   30[COMRAM] float 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1513 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1515 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1516 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1517 ;;Total ram usage:       15 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    4
  1520 ;; This function calls:
  1521 ;;		___ftpack
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text3
  1528  000D1E                     __ptext3:
  1529                           	opt stack 0
  1530  000D1E                     ___ftmul:
  1531                           	opt stack 26
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;incstack = 0
  1535  000D1E  C021  F025         	movff	___ftmul@f1+2,??___ftmul
  1536  000D22  6A26               	clrf	(??___ftmul+1)& (0+255),c
  1537  000D24  6A27               	clrf	(??___ftmul+2)& (0+255),c
  1538  000D26  3420               	rlcf	___ftmul@f1+1,w,c
  1539  000D28  3625               	rlcf	??___ftmul& (0+255),f,c
  1540  000D2A  E301               	bnc	u2251
  1541  000D2C  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  1542  000D2E                     u2251:
  1543  000D2E  5025               	movf	??___ftmul,w,c
  1544  000D30  0100               	movlb	0	; () banked
  1545  000D32  6F60               	movwf	___ftmul@exp& (0+255),b
  1546  000D34  0100               	movlb	0	; () banked
  1547  000D36  5160               	movf	___ftmul@exp& (0+255),w,b
  1548  000D38  A4D8               	btfss	status,2,c
  1549  000D3A  D007               	goto	l3631
  1550                           
  1551                           ; BSR set to: 0
  1552  000D3C  0E00               	movlw	0
  1553  000D3E  6E1F               	movwf	?___ftmul,c
  1554  000D40  0E00               	movlw	0
  1555  000D42  6E20               	movwf	?___ftmul+1,c
  1556  000D44  0E00               	movlw	0
  1557  000D46  6E21               	movwf	?___ftmul+2,c
  1558                           
  1559                           ; BSR set to: 0
  1560  000D48  0012               	return	
  1561  000D4A                     l3631:
  1562                           
  1563                           ; BSR set to: 0
  1564  000D4A  C024  F025         	movff	___ftmul@f2+2,??___ftmul
  1565  000D4E  6A26               	clrf	(??___ftmul+1)& (0+255),c
  1566  000D50  6A27               	clrf	(??___ftmul+2)& (0+255),c
  1567  000D52  3423               	rlcf	___ftmul@f2+1,w,c
  1568  000D54  3625               	rlcf	??___ftmul& (0+255),f,c
  1569  000D56  E301               	bnc	u2271
  1570  000D58  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  1571  000D5A                     u2271:
  1572  000D5A  5025               	movf	??___ftmul,w,c
  1573  000D5C  0100               	movlb	0	; () banked
  1574  000D5E  6F65               	movwf	___ftmul@sign& (0+255),b
  1575  000D60  0100               	movlb	0	; () banked
  1576  000D62  5165               	movf	___ftmul@sign& (0+255),w,b
  1577  000D64  A4D8               	btfss	status,2,c
  1578  000D66  D007               	goto	l3637
  1579                           
  1580                           ; BSR set to: 0
  1581  000D68  0E00               	movlw	0
  1582  000D6A  6E1F               	movwf	?___ftmul,c
  1583  000D6C  0E00               	movlw	0
  1584  000D6E  6E20               	movwf	?___ftmul+1,c
  1585  000D70  0E00               	movlw	0
  1586  000D72  6E21               	movwf	?___ftmul+2,c
  1587                           
  1588                           ; BSR set to: 0
  1589  000D74  0012               	return	
  1590  000D76                     l3637:
  1591                           
  1592                           ; BSR set to: 0
  1593  000D76  0100               	movlb	0	; () banked
  1594  000D78  5165               	movf	___ftmul@sign& (0+255),w,b
  1595  000D7A  0F7B               	addlw	123
  1596  000D7C  0100               	movlb	0	; () banked
  1597  000D7E  2760               	addwf	___ftmul@exp& (0+255),f,b
  1598                           
  1599                           ; BSR set to: 0
  1600  000D80  C021  F065         	movff	___ftmul@f1+2,___ftmul@sign
  1601  000D84  5024               	movf	___ftmul@f2+2,w,c
  1602  000D86  0100               	movlb	0	; () banked
  1603  000D88  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  1604  000D8A  0E80               	movlw	128
  1605  000D8C  0100               	movlb	0	; () banked
  1606  000D8E  1765               	andwf	___ftmul@sign& (0+255),f,b
  1607                           
  1608                           ; BSR set to: 0
  1609  000D90  8E20               	bsf	___ftmul@f1+1,7,c
  1610                           
  1611                           ; BSR set to: 0
  1612  000D92  8E23               	bsf	___ftmul@f2+1,7,c
  1613                           
  1614                           ; BSR set to: 0
  1615  000D94  0EFF               	movlw	255
  1616  000D96  1622               	andwf	___ftmul@f2,f,c
  1617  000D98  0EFF               	movlw	255
  1618  000D9A  1623               	andwf	___ftmul@f2+1,f,c
  1619  000D9C  0E00               	movlw	0
  1620  000D9E  1624               	andwf	___ftmul@f2+2,f,c
  1621                           
  1622                           ; BSR set to: 0
  1623  000DA0  0E00               	movlw	0
  1624  000DA2  0100               	movlb	0	; () banked
  1625  000DA4  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  1626  000DA6  0E00               	movlw	0
  1627  000DA8  0100               	movlb	0	; () banked
  1628  000DAA  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1629  000DAC  0E00               	movlw	0
  1630  000DAE  0100               	movlb	0	; () banked
  1631  000DB0  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634  000DB2  0E07               	movlw	7
  1635  000DB4  0100               	movlb	0	; () banked
  1636  000DB6  6F64               	movwf	___ftmul@cntr& (0+255),b
  1637  000DB8                     l3651:
  1638                           
  1639                           ; BSR set to: 0
  1640  000DB8  A01F               	btfss	___ftmul@f1,0,c
  1641  000DBA  D009               	goto	l3655
  1642                           
  1643                           ; BSR set to: 0
  1644  000DBC  5022               	movf	___ftmul@f2,w,c
  1645  000DBE  0100               	movlb	0	; () banked
  1646  000DC0  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1647  000DC2  5023               	movf	___ftmul@f2+1,w,c
  1648  000DC4  0100               	movlb	0	; () banked
  1649  000DC6  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1650  000DC8  5024               	movf	___ftmul@f2+2,w,c
  1651  000DCA  0100               	movlb	0	; () banked
  1652  000DCC  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1653  000DCE                     l3655:
  1654                           
  1655                           ; BSR set to: 0
  1656  000DCE  90D8               	bcf	status,0,c
  1657  000DD0  3221               	rrcf	___ftmul@f1+2,f,c
  1658  000DD2  3220               	rrcf	___ftmul@f1+1,f,c
  1659  000DD4  321F               	rrcf	___ftmul@f1,f,c
  1660  000DD6  90D8               	bcf	status,0,c
  1661  000DD8  3622               	rlcf	___ftmul@f2,f,c
  1662  000DDA  3623               	rlcf	___ftmul@f2+1,f,c
  1663  000DDC  3624               	rlcf	___ftmul@f2+2,f,c
  1664                           
  1665                           ; BSR set to: 0
  1666  000DDE  0100               	movlb	0	; () banked
  1667  000DE0  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1668  000DE2  D7EA               	goto	l3651
  1669                           
  1670                           ; BSR set to: 0
  1671                           
  1672                           ; BSR set to: 0
  1673  000DE4  0E09               	movlw	9
  1674  000DE6  0100               	movlb	0	; () banked
  1675  000DE8  6F64               	movwf	___ftmul@cntr& (0+255),b
  1676  000DEA                     l3661:
  1677                           
  1678                           ; BSR set to: 0
  1679  000DEA  A01F               	btfss	___ftmul@f1,0,c
  1680  000DEC  D009               	goto	l3665
  1681                           
  1682                           ; BSR set to: 0
  1683  000DEE  5022               	movf	___ftmul@f2,w,c
  1684  000DF0  0100               	movlb	0	; () banked
  1685  000DF2  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1686  000DF4  5023               	movf	___ftmul@f2+1,w,c
  1687  000DF6  0100               	movlb	0	; () banked
  1688  000DF8  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1689  000DFA  5024               	movf	___ftmul@f2+2,w,c
  1690  000DFC  0100               	movlb	0	; () banked
  1691  000DFE  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1692  000E00                     l3665:
  1693                           
  1694                           ; BSR set to: 0
  1695  000E00  90D8               	bcf	status,0,c
  1696  000E02  3221               	rrcf	___ftmul@f1+2,f,c
  1697  000E04  3220               	rrcf	___ftmul@f1+1,f,c
  1698  000E06  321F               	rrcf	___ftmul@f1,f,c
  1699  000E08  0100               	movlb	0	; () banked
  1700  000E0A  90D8               	bcf	status,0,c
  1701  000E0C  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1702  000E0E  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1703  000E10  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1704                           
  1705                           ; BSR set to: 0
  1706  000E12  0100               	movlb	0	; () banked
  1707  000E14  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1708  000E16  D7E9               	goto	l3661
  1709                           
  1710                           ; BSR set to: 0
  1711                           
  1712                           ; BSR set to: 0
  1713  000E18  C061  F014         	movff	___ftmul@f3_as_product,___ftpack@arg
  1714  000E1C  C062  F015         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1715  000E20  C063  F016         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1716  000E24  C060  F017         	movff	___ftmul@exp,___ftpack@exp
  1717  000E28  C065  F018         	movff	___ftmul@sign,___ftpack@sign
  1718  000E2C  EC18  F008         	call	___ftpack	;wreg free
  1719  000E30  C014  F01F         	movff	?___ftpack,?___ftmul
  1720  000E34  C015  F020         	movff	?___ftpack+1,?___ftmul+1
  1721  000E38  C016  F021         	movff	?___ftpack+2,?___ftmul+2
  1722  000E3C  0012               	return	
  1723  000E3E                     __end_of___ftmul:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function ___ftdiv *****************
  1731 ;; Defined at:
  1732 ;;		line 54 in file "D:\Atmel\xc8\sources\common\ftdiv.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  f1              3   27[COMRAM] float 
  1735 ;;  f2              3   30[COMRAM] float 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  f3              3    1[BANK0 ] float 
  1738 ;;  sign            1    5[BANK0 ] unsigned char 
  1739 ;;  exp             1    4[BANK0 ] unsigned char 
  1740 ;;  cntr            1    0[BANK0 ] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  3   27[COMRAM] float 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1750 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;Total ram usage:       15 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    4
  1757 ;; This function calls:
  1758 ;;		___ftpack
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text4
  1765  000E3E                     __ptext4:
  1766                           	opt stack 0
  1767  000E3E                     ___ftdiv:
  1768                           	opt stack 26
  1769                           
  1770                           ;incstack = 0
  1771  000E3E  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  1772  000E42  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  1773  000E44  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  1774  000E46  341D               	rlcf	___ftdiv@f1+1,w,c
  1775  000E48  3622               	rlcf	??___ftdiv& (0+255),f,c
  1776  000E4A  E301               	bnc	u2201
  1777  000E4C  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  1778  000E4E                     u2201:
  1779  000E4E  5022               	movf	??___ftdiv,w,c
  1780  000E50  0100               	movlb	0	; () banked
  1781  000E52  6F64               	movwf	___ftdiv@exp& (0+255),b
  1782  000E54  0100               	movlb	0	; () banked
  1783  000E56  5164               	movf	___ftdiv@exp& (0+255),w,b
  1784  000E58  A4D8               	btfss	status,2,c
  1785  000E5A  D007               	goto	l3585
  1786                           
  1787                           ; BSR set to: 0
  1788  000E5C  0E00               	movlw	0
  1789  000E5E  6E1C               	movwf	?___ftdiv,c
  1790  000E60  0E00               	movlw	0
  1791  000E62  6E1D               	movwf	?___ftdiv+1,c
  1792  000E64  0E00               	movlw	0
  1793  000E66  6E1E               	movwf	?___ftdiv+2,c
  1794                           
  1795                           ; BSR set to: 0
  1796  000E68  0012               	return	
  1797  000E6A                     l3585:
  1798                           
  1799                           ; BSR set to: 0
  1800  000E6A  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  1801  000E6E  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  1802  000E70  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  1803  000E72  3420               	rlcf	___ftdiv@f2+1,w,c
  1804  000E74  3622               	rlcf	??___ftdiv& (0+255),f,c
  1805  000E76  E301               	bnc	u2221
  1806  000E78  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  1807  000E7A                     u2221:
  1808  000E7A  5022               	movf	??___ftdiv,w,c
  1809  000E7C  0100               	movlb	0	; () banked
  1810  000E7E  6F65               	movwf	___ftdiv@sign& (0+255),b
  1811  000E80  0100               	movlb	0	; () banked
  1812  000E82  5165               	movf	___ftdiv@sign& (0+255),w,b
  1813  000E84  A4D8               	btfss	status,2,c
  1814  000E86  D007               	goto	l3591
  1815                           
  1816                           ; BSR set to: 0
  1817  000E88  0E00               	movlw	0
  1818  000E8A  6E1C               	movwf	?___ftdiv,c
  1819  000E8C  0E00               	movlw	0
  1820  000E8E  6E1D               	movwf	?___ftdiv+1,c
  1821  000E90  0E00               	movlw	0
  1822  000E92  6E1E               	movwf	?___ftdiv+2,c
  1823                           
  1824                           ; BSR set to: 0
  1825  000E94  0012               	return	
  1826  000E96                     l3591:
  1827                           
  1828                           ; BSR set to: 0
  1829  000E96  0E00               	movlw	0
  1830  000E98  0100               	movlb	0	; () banked
  1831  000E9A  6F61               	movwf	___ftdiv@f3& (0+255),b
  1832  000E9C  0E00               	movlw	0
  1833  000E9E  0100               	movlb	0	; () banked
  1834  000EA0  6F62               	movwf	(___ftdiv@f3+1)& (0+255),b
  1835  000EA2  0E00               	movlw	0
  1836  000EA4  0100               	movlb	0	; () banked
  1837  000EA6  6F63               	movwf	(___ftdiv@f3+2)& (0+255),b
  1838                           
  1839                           ; BSR set to: 0
  1840  000EA8  0100               	movlb	0	; () banked
  1841  000EAA  5165               	movf	___ftdiv@sign& (0+255),w,b
  1842  000EAC  0F89               	addlw	137
  1843  000EAE  0100               	movlb	0	; () banked
  1844  000EB0  5F64               	subwf	___ftdiv@exp& (0+255),f,b
  1845                           
  1846                           ; BSR set to: 0
  1847  000EB2  C01E  F065         	movff	___ftdiv@f1+2,___ftdiv@sign
  1848                           
  1849                           ; BSR set to: 0
  1850  000EB6  5021               	movf	___ftdiv@f2+2,w,c
  1851  000EB8  0100               	movlb	0	; () banked
  1852  000EBA  1B65               	xorwf	___ftdiv@sign& (0+255),f,b
  1853                           
  1854                           ; BSR set to: 0
  1855  000EBC  0E80               	movlw	128
  1856  000EBE  0100               	movlb	0	; () banked
  1857  000EC0  1765               	andwf	___ftdiv@sign& (0+255),f,b
  1858                           
  1859                           ; BSR set to: 0
  1860  000EC2  8E1D               	bsf	___ftdiv@f1+1,7,c
  1861                           
  1862                           ; BSR set to: 0
  1863  000EC4  0EFF               	movlw	255
  1864  000EC6  161C               	andwf	___ftdiv@f1,f,c
  1865  000EC8  0EFF               	movlw	255
  1866  000ECA  161D               	andwf	___ftdiv@f1+1,f,c
  1867  000ECC  0E00               	movlw	0
  1868  000ECE  161E               	andwf	___ftdiv@f1+2,f,c
  1869                           
  1870                           ; BSR set to: 0
  1871  000ED0  8E20               	bsf	___ftdiv@f2+1,7,c
  1872                           
  1873                           ; BSR set to: 0
  1874  000ED2  0EFF               	movlw	255
  1875  000ED4  161F               	andwf	___ftdiv@f2,f,c
  1876  000ED6  0EFF               	movlw	255
  1877  000ED8  1620               	andwf	___ftdiv@f2+1,f,c
  1878  000EDA  0E00               	movlw	0
  1879  000EDC  1621               	andwf	___ftdiv@f2+2,f,c
  1880                           
  1881                           ; BSR set to: 0
  1882  000EDE  0E18               	movlw	24
  1883  000EE0  0100               	movlb	0	; () banked
  1884  000EE2  6F60               	movwf	___ftdiv@cntr& (0+255),b
  1885  000EE4                     l3611:
  1886                           
  1887                           ; BSR set to: 0
  1888  000EE4  0100               	movlb	0	; () banked
  1889  000EE6  90D8               	bcf	status,0,c
  1890  000EE8  3761               	rlcf	___ftdiv@f3& (0+255),f,b
  1891  000EEA  3762               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  1892  000EEC  3763               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  1893                           
  1894                           ; BSR set to: 0
  1895  000EEE  501F               	movf	___ftdiv@f2,w,c
  1896  000EF0  5C1C               	subwf	___ftdiv@f1,w,c
  1897  000EF2  5020               	movf	___ftdiv@f2+1,w,c
  1898  000EF4  581D               	subwfb	___ftdiv@f1+1,w,c
  1899  000EF6  5021               	movf	___ftdiv@f2+2,w,c
  1900  000EF8  581E               	subwfb	___ftdiv@f1+2,w,c
  1901  000EFA  A0D8               	btfss	status,0,c
  1902  000EFC  D008               	goto	l1108
  1903                           
  1904                           ; BSR set to: 0
  1905  000EFE  501F               	movf	___ftdiv@f2,w,c
  1906  000F00  5E1C               	subwf	___ftdiv@f1,f,c
  1907  000F02  5020               	movf	___ftdiv@f2+1,w,c
  1908  000F04  5A1D               	subwfb	___ftdiv@f1+1,f,c
  1909  000F06  5021               	movf	___ftdiv@f2+2,w,c
  1910  000F08  5A1E               	subwfb	___ftdiv@f1+2,f,c
  1911                           
  1912                           ; BSR set to: 0
  1913  000F0A  0100               	movlb	0	; () banked
  1914  000F0C  8161               	bsf	___ftdiv@f3& (0+255),0,b
  1915  000F0E                     l1108:
  1916                           
  1917                           ; BSR set to: 0
  1918  000F0E  90D8               	bcf	status,0,c
  1919  000F10  361C               	rlcf	___ftdiv@f1,f,c
  1920  000F12  361D               	rlcf	___ftdiv@f1+1,f,c
  1921  000F14  361E               	rlcf	___ftdiv@f1+2,f,c
  1922                           
  1923                           ; BSR set to: 0
  1924  000F16  0100               	movlb	0	; () banked
  1925  000F18  2F60               	decfsz	___ftdiv@cntr& (0+255),f,b
  1926  000F1A  D7E4               	goto	l3611
  1927                           
  1928                           ; BSR set to: 0
  1929                           
  1930                           ; BSR set to: 0
  1931  000F1C  C061  F014         	movff	___ftdiv@f3,___ftpack@arg
  1932  000F20  C062  F015         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1933  000F24  C063  F016         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1934  000F28  C064  F017         	movff	___ftdiv@exp,___ftpack@exp
  1935  000F2C  C065  F018         	movff	___ftdiv@sign,___ftpack@sign
  1936  000F30  EC18  F008         	call	___ftpack	;wreg free
  1937  000F34  C014  F01C         	movff	?___ftpack,?___ftdiv
  1938  000F38  C015  F01D         	movff	?___ftpack+1,?___ftdiv+1
  1939  000F3C  C016  F01E         	movff	?___ftpack+2,?___ftdiv+2
  1940  000F40  0012               	return	
  1941  000F42                     __end_of___ftdiv:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           postinc0	equ	0xFEE
  1945                           wreg	equ	0xFE8
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function ___ftpack *****************
  1949 ;; Defined at:
  1950 ;;		line 62 in file "D:\Atmel\xc8\sources\common\float.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  arg             3   19[COMRAM] unsigned um
  1953 ;;  exp             1   22[COMRAM] unsigned char 
  1954 ;;  sign            1   23[COMRAM] unsigned char 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  3   19[COMRAM] float 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1966 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1968 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1969 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1970 ;;Total ram usage:        8 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    3
  1973 ;; This function calls:
  1974 ;;		Nothing
  1975 ;; This function is called by:
  1976 ;;		___ftdiv
  1977 ;;		___ftmul
  1978 ;;		___lwtoft
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text5
  1983  001030                     __ptext5:
  1984                           	opt stack 0
  1985  001030                     ___ftpack:
  1986                           	opt stack 26
  1987                           
  1988                           ;incstack = 0
  1989  001030  5017               	movf	___ftpack@exp,w,c
  1990  001032  B4D8               	btfsc	status,2,c
  1991  001034  D005               	goto	l3445
  1992  001036  5014               	movf	___ftpack@arg,w,c
  1993  001038  1015               	iorwf	___ftpack@arg+1,w,c
  1994  00103A  1016               	iorwf	___ftpack@arg+2,w,c
  1995  00103C  A4D8               	btfss	status,2,c
  1996  00103E  D00C               	goto	l3451
  1997  001040                     l3445:
  1998  001040  0E00               	movlw	0
  1999  001042  6E14               	movwf	?___ftpack,c
  2000  001044  0E00               	movlw	0
  2001  001046  6E15               	movwf	?___ftpack+1,c
  2002  001048  0E00               	movlw	0
  2003  00104A  6E16               	movwf	?___ftpack+2,c
  2004  00104C  0012               	return	
  2005  00104E                     l3449:
  2006  00104E  2A17               	incf	___ftpack@exp,f,c
  2007  001050  90D8               	bcf	status,0,c
  2008  001052  3216               	rrcf	___ftpack@arg+2,f,c
  2009  001054  3215               	rrcf	___ftpack@arg+1,f,c
  2010  001056  3214               	rrcf	___ftpack@arg,f,c
  2011  001058                     l3451:
  2012  001058  0E00               	movlw	0
  2013  00105A  1414               	andwf	___ftpack@arg,w,c
  2014  00105C  6E19               	movwf	??___ftpack& (0+255),c
  2015  00105E  0E00               	movlw	0
  2016  001060  1415               	andwf	___ftpack@arg+1,w,c
  2017  001062  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  2018  001064  0EFE               	movlw	254
  2019  001066  1416               	andwf	___ftpack@arg+2,w,c
  2020  001068  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  2021  00106A  5019               	movf	??___ftpack,w,c
  2022  00106C  101A               	iorwf	??___ftpack+1,w,c
  2023  00106E  101B               	iorwf	??___ftpack+2,w,c
  2024  001070  B4D8               	btfsc	status,2,c
  2025  001072  D00C               	goto	l3457
  2026  001074  D7EC               	goto	l3449
  2027  001076                     l3453:
  2028  001076  2A17               	incf	___ftpack@exp,f,c
  2029  001078  0E01               	movlw	1
  2030  00107A  2614               	addwf	___ftpack@arg,f,c
  2031  00107C  0E00               	movlw	0
  2032  00107E  2215               	addwfc	___ftpack@arg+1,f,c
  2033  001080  0E00               	movlw	0
  2034  001082  2216               	addwfc	___ftpack@arg+2,f,c
  2035  001084  90D8               	bcf	status,0,c
  2036  001086  3216               	rrcf	___ftpack@arg+2,f,c
  2037  001088  3215               	rrcf	___ftpack@arg+1,f,c
  2038  00108A  3214               	rrcf	___ftpack@arg,f,c
  2039  00108C                     l3457:
  2040  00108C  0E00               	movlw	0
  2041  00108E  1414               	andwf	___ftpack@arg,w,c
  2042  001090  6E19               	movwf	??___ftpack& (0+255),c
  2043  001092  0E00               	movlw	0
  2044  001094  1415               	andwf	___ftpack@arg+1,w,c
  2045  001096  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  2046  001098  0EFF               	movlw	255
  2047  00109A  1416               	andwf	___ftpack@arg+2,w,c
  2048  00109C  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  2049  00109E  5019               	movf	??___ftpack,w,c
  2050  0010A0  101A               	iorwf	??___ftpack+1,w,c
  2051  0010A2  101B               	iorwf	??___ftpack+2,w,c
  2052  0010A4  B4D8               	btfsc	status,2,c
  2053  0010A6  D006               	goto	l3461
  2054  0010A8  D7E6               	goto	l3453
  2055  0010AA                     l3459:
  2056  0010AA  0617               	decf	___ftpack@exp,f,c
  2057  0010AC  90D8               	bcf	status,0,c
  2058  0010AE  3614               	rlcf	___ftpack@arg,f,c
  2059  0010B0  3615               	rlcf	___ftpack@arg+1,f,c
  2060  0010B2  3616               	rlcf	___ftpack@arg+2,f,c
  2061  0010B4                     l3461:
  2062  0010B4  BE15               	btfsc	___ftpack@arg+1,7,c
  2063  0010B6  D003               	goto	l1050
  2064  0010B8  0E02               	movlw	2
  2065  0010BA  6017               	cpfslt	___ftpack@exp,c
  2066  0010BC  D7F6               	goto	l3459
  2067  0010BE                     l1050:
  2068  0010BE  A017               	btfss	___ftpack@exp,0,c
  2069  0010C0  9E15               	bcf	___ftpack@arg+1,7,c
  2070  0010C2  90D8               	bcf	status,0,c
  2071  0010C4  3217               	rrcf	___ftpack@exp,f,c
  2072  0010C6  5017               	movf	___ftpack@exp,w,c
  2073  0010C8  1216               	iorwf	___ftpack@arg+2,f,c
  2074  0010CA  5018               	movf	___ftpack@sign,w,c
  2075  0010CC  A4D8               	btfss	status,2,c
  2076  0010CE  8E16               	bsf	___ftpack@arg+2,7,c
  2077  0010D0  C014  F014         	movff	___ftpack@arg,?___ftpack
  2078  0010D4  C015  F015         	movff	___ftpack@arg+1,?___ftpack+1
  2079  0010D8  C016  F016         	movff	___ftpack@arg+2,?___ftpack+2
  2080  0010DC  0012               	return	
  2081  0010DE                     __end_of___ftpack:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           postinc0	equ	0xFEE
  2085                           wreg	equ	0xFE8
  2086                           status	equ	0xFD8
  2087                           
  2088 ;; *************** function _SYSTEM_Initialize *****************
  2089 ;; Defined at:
  2090 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2108 ;;Total ram usage:        0 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    6
  2111 ;; This function calls:
  2112 ;;		_ADC_Initialize
  2113 ;;		_BNO055_Initialize
  2114 ;;		_CCP2_Initialize
  2115 ;;		_ECAN_Initialize
  2116 ;;		_I2C_Initialize
  2117 ;;		_INTERRUPT_Initialize
  2118 ;;		_OSCILLATOR_Initialize
  2119 ;;		_PIN_MANAGER_Initialize
  2120 ;;		_TMR1_Initialize
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text6
  2127  001478                     __ptext6:
  2128                           	opt stack 0
  2129  001478                     _SYSTEM_Initialize:
  2130                           	opt stack 24
  2131                           
  2132                           ;mcc.c: 114: INTERRUPT_Initialize();
  2133                           
  2134                           ;incstack = 0
  2135  001478  EC93  F00A         	call	_INTERRUPT_Initialize	;wreg free
  2136                           
  2137                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2138  00147C  ECE2  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  2139                           
  2140                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2141  001480  EC85  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  2142                           
  2143                           ;mcc.c: 117: I2C_Initialize();
  2144  001484  EC14  F00A         	call	_I2C_Initialize	;wreg free
  2145                           
  2146                           ;mcc.c: 118: CCP2_Initialize();
  2147  001488  EC61  F00A         	call	_CCP2_Initialize	;wreg free
  2148                           
  2149                           ;mcc.c: 119: ADC_Initialize();
  2150  00148C  EC7A  F00A         	call	_ADC_Initialize	;wreg free
  2151                           
  2152                           ;mcc.c: 120: TMR1_Initialize();
  2153  001490  ECC5  F009         	call	_TMR1_Initialize	;wreg free
  2154                           
  2155                           ;mcc.c: 121: ECAN_Initialize();
  2156  001494  ECA1  F007         	call	_ECAN_Initialize	;wreg free
  2157                           
  2158                           ;mcc.c: 122: BNO055_Initialize();
  2159  001498  EC32  F005         	call	_BNO055_Initialize	;wreg free
  2160  00149C  0012               	return		;funcret
  2161  00149E                     __end_of_SYSTEM_Initialize:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _TMR1_Initialize *****************
  2169 ;; Defined at:
  2170 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2188 ;;Total ram usage:        2 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    4
  2191 ;; This function calls:
  2192 ;;		_TMR1_SetInterruptHandler
  2193 ;;		_TMR1_StartTimer
  2194 ;; This function is called by:
  2195 ;;		_SYSTEM_Initialize
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text7
  2200  00138A                     __ptext7:
  2201                           	opt stack 0
  2202  00138A                     _TMR1_Initialize:
  2203                           	opt stack 25
  2204                           
  2205                           ;tmr1.c: 68: T1CON = 0x00;
  2206                           
  2207                           ;incstack = 0
  2208  00138A  0E00               	movlw	0
  2209  00138C  6ECD               	movwf	4045,c	;volatile
  2210                           
  2211                           ;tmr1.c: 71: T1GCON = 0x00;
  2212  00138E  0E00               	movlw	0
  2213  001390  6EAA               	movwf	4010,c	;volatile
  2214                           
  2215                           ;tmr1.c: 74: TMR1H = 0xFF;
  2216  001392  68CF               	setf	4047,c	;volatile
  2217                           
  2218                           ;tmr1.c: 77: TMR1L = 0xF0;
  2219  001394  0EF0               	movlw	240
  2220  001396  6ECE               	movwf	4046,c	;volatile
  2221                           
  2222                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  2223  001398  50CE               	movf	4046,w,c	;volatile
  2224  00139A  CFCF F016          	movff	4047,??_TMR1_Initialize	;volatile
  2225  00139E  6A17               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2226  0013A0  C016  F017         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2227  0013A4  6A16               	clrf	??_TMR1_Initialize,c
  2228  0013A6  1016               	iorwf	??_TMR1_Initialize,w,c
  2229  0013A8  6E48               	movwf	_timer1ReloadVal,c	;volatile
  2230  0013AA  5017               	movf	??_TMR1_Initialize+1,w,c
  2231  0013AC  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
  2232                           
  2233                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2234  0013AE  909E               	bcf	3998,0,c	;volatile
  2235                           
  2236                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2237  0013B0  809D               	bsf	3997,0,c	;volatile
  2238                           
  2239                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2240  0013B2  0E32               	movlw	low _TMR1_DefaultInterruptHandler
  2241  0013B4  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2242  0013B6  0E15               	movlw	high _TMR1_DefaultInterruptHandler
  2243  0013B8  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2244  0013BA  EC8E  F00A         	call	_TMR1_SetInterruptHandler	;wreg free
  2245                           
  2246                           ;tmr1.c: 92: TMR1_StartTimer();
  2247  0013BE  EC97  F00A         	call	_TMR1_StartTimer	;wreg free
  2248  0013C2  0012               	return		;funcret
  2249  0013C4                     __end_of_TMR1_Initialize:
  2250                           	opt stack 0
  2251                           tblptru	equ	0xFF8
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _TMR1_StartTimer *****************
  2257 ;; Defined at:
  2258 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		None
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    3
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_TMR1_Initialize
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text8
  2287  00152E                     __ptext8:
  2288                           	opt stack 0
  2289  00152E                     _TMR1_StartTimer:
  2290                           	opt stack 25
  2291                           
  2292                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  2293                           
  2294                           ;incstack = 0
  2295  00152E  80CD               	bsf	4045,0,c	;volatile
  2296  001530  0012               	return		;funcret
  2297  001532                     __end_of_TMR1_StartTimer:
  2298                           	opt stack 0
  2299                           tblptru	equ	0xFF8
  2300                           postinc0	equ	0xFEE
  2301                           wreg	equ	0xFE8
  2302                           status	equ	0xFD8
  2303                           
  2304 ;; *************** function _TMR1_SetInterruptHandler *****************
  2305 ;; Defined at:
  2306 ;;		line 173 in file "mcc_generated_files/tmr1.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  InterruptHan    2   19[COMRAM] PTR void 
  2309 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2325 ;;Total ram usage:        2 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_TMR1_Initialize
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text9
  2336  00151C                     __ptext9:
  2337                           	opt stack 0
  2338  00151C                     _TMR1_SetInterruptHandler:
  2339                           	opt stack 25
  2340                           
  2341                           ;tmr1.c: 174: TMR1_InterruptHandler = InterruptHandler;
  2342                           
  2343                           ;incstack = 0
  2344  00151C  C014  F046         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2345  001520  C015  F047         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2346  001524  0012               	return		;funcret
  2347  001526                     __end_of_TMR1_SetInterruptHandler:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           status	equ	0xFD8
  2353                           
  2354 ;; *************** function _PIN_MANAGER_Initialize *****************
  2355 ;; Defined at:
  2356 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;Total ram usage:        0 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    3
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_SYSTEM_Initialize
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text10
  2385  0013C4                     __ptext10:
  2386                           	opt stack 0
  2387  0013C4                     _PIN_MANAGER_Initialize:
  2388                           	opt stack 26
  2389                           
  2390                           ;pin_manager.c: 56: LATE = 0x00;
  2391                           
  2392                           ;incstack = 0
  2393  0013C4  0E00               	movlw	0
  2394  0013C6  6E8D               	movwf	3981,c	;volatile
  2395                           
  2396                           ;pin_manager.c: 57: LATD = 0x00;
  2397  0013C8  0E00               	movlw	0
  2398  0013CA  6E8C               	movwf	3980,c	;volatile
  2399                           
  2400                           ;pin_manager.c: 58: LATA = 0x00;
  2401  0013CC  0E00               	movlw	0
  2402  0013CE  6E89               	movwf	3977,c	;volatile
  2403                           
  2404                           ;pin_manager.c: 59: LATB = 0x00;
  2405  0013D0  0E00               	movlw	0
  2406  0013D2  6E8A               	movwf	3978,c	;volatile
  2407                           
  2408                           ;pin_manager.c: 60: LATC = 0x00;
  2409  0013D4  0E00               	movlw	0
  2410  0013D6  6E8B               	movwf	3979,c	;volatile
  2411                           
  2412                           ;pin_manager.c: 65: TRISE = 0x07;
  2413  0013D8  0E07               	movlw	7
  2414  0013DA  6E96               	movwf	3990,c	;volatile
  2415                           
  2416                           ;pin_manager.c: 66: TRISA = 0xEF;
  2417  0013DC  0EEF               	movlw	239
  2418  0013DE  6E92               	movwf	3986,c	;volatile
  2419                           
  2420                           ;pin_manager.c: 67: TRISB = 0xFB;
  2421  0013E0  0EFB               	movlw	251
  2422  0013E2  6E93               	movwf	3987,c	;volatile
  2423                           
  2424                           ;pin_manager.c: 68: TRISC = 0xFF;
  2425  0013E4  6894               	setf	3988,c	;volatile
  2426                           
  2427                           ;pin_manager.c: 69: TRISD = 0xFF;
  2428  0013E6  6895               	setf	3989,c	;volatile
  2429                           
  2430                           ;pin_manager.c: 74: ANCON0 = 0xFF;
  2431  0013E8  010F               	movlb	15	; () banked
  2432  0013EA  695D               	setf	93,b	;volatile
  2433                           
  2434                           ;pin_manager.c: 75: ANCON1 = 0x7A;
  2435  0013EC  0E7A               	movlw	122
  2436  0013EE  010F               	movlb	15	; () banked
  2437  0013F0  6F5C               	movwf	92,b	;volatile
  2438                           
  2439                           ; BSR set to: 15
  2440                           ;pin_manager.c: 80: WPUB = 0xFF;
  2441  0013F2  010F               	movlb	15	; () banked
  2442  0013F4  695B               	setf	91,b	;volatile
  2443                           
  2444                           ; BSR set to: 15
  2445  0013F6  0012               	return		;funcret
  2446  0013F8                     __end_of_PIN_MANAGER_Initialize:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _OSCILLATOR_Initialize *****************
  2454 ;; Defined at:
  2455 ;;		line 125 in file "mcc_generated_files/mcc.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_SYSTEM_Initialize
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text11
  2484  00150A                     __ptext11:
  2485                           	opt stack 0
  2486  00150A                     _OSCILLATOR_Initialize:
  2487                           	opt stack 26
  2488                           
  2489                           ;mcc.c: 128: OSCCON = 0x60;
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;incstack = 0
  2493  00150A  0E60               	movlw	96
  2494  00150C  6ED3               	movwf	4051,c	;volatile
  2495                           
  2496                           ;mcc.c: 130: OSCCON2 = 0x00;
  2497  00150E  0E00               	movlw	0
  2498  001510  6ED2               	movwf	4050,c	;volatile
  2499                           
  2500                           ;mcc.c: 132: OSCTUNE = 0x40;
  2501  001512  0E40               	movlw	64
  2502  001514  6E9B               	movwf	3995,c	;volatile
  2503                           
  2504                           ;mcc.c: 134: REFOCON = 0x00;
  2505  001516  0E00               	movlw	0
  2506  001518  6E9A               	movwf	3994,c	;volatile
  2507  00151A  0012               	return		;funcret
  2508  00151C                     __end_of_OSCILLATOR_Initialize:
  2509                           	opt stack 0
  2510                           tblptru	equ	0xFF8
  2511                           postinc0	equ	0xFEE
  2512                           wreg	equ	0xFE8
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _INTERRUPT_Initialize *****************
  2516 ;; Defined at:
  2517 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		None
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    3
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_SYSTEM_Initialize
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text12
  2546  001526                     __ptext12:
  2547                           	opt stack 0
  2548  001526                     _INTERRUPT_Initialize:
  2549                           	opt stack 26
  2550                           
  2551                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2552                           
  2553                           ;incstack = 0
  2554  001526  9ED0               	bcf	4048,7,c	;volatile
  2555                           
  2556                           ;interrupt_manager.c: 56: INTCONbits.GIE = 1;
  2557  001528  8EF2               	bsf	intcon,7,c	;volatile
  2558                           
  2559                           ;interrupt_manager.c: 57: INTCONbits.PEIE = 1;
  2560  00152A  8CF2               	bsf	intcon,6,c	;volatile
  2561  00152C  0012               	return		;funcret
  2562  00152E                     __end_of_INTERRUPT_Initialize:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           status	equ	0xFD8
  2569                           
  2570 ;; *************** function _I2C_Initialize *****************
  2571 ;; Defined at:
  2572 ;;		line 198 in file "mcc_generated_files/i2c.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    3
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_SYSTEM_Initialize
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text13
  2601  001428                     __ptext13:
  2602                           	opt stack 0
  2603  001428                     _I2C_Initialize:
  2604                           	opt stack 26
  2605                           
  2606                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
  2607                           
  2608                           ;incstack = 0
  2609  001428  0E3F               	movlw	low _i2c_tr_queue
  2610  00142A  6E2A               	movwf	_i2c_object+2,c
  2611  00142C  0E00               	movlw	high _i2c_tr_queue
  2612  00142E  6E2B               	movwf	_i2c_object+3,c
  2613                           
  2614                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
  2615  001430  0E3F               	movlw	low _i2c_tr_queue
  2616  001432  6E28               	movwf	_i2c_object,c
  2617  001434  0E00               	movlw	high _i2c_tr_queue
  2618  001436  6E29               	movwf	_i2c_object+1,c
  2619                           
  2620                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
  2621  001438  822C               	bsf	_i2c_object+4,1,c
  2622                           
  2623                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
  2624  00143A  902C               	bcf	_i2c_object+4,0,c
  2625                           
  2626                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
  2627  00143C  0E00               	movlw	0
  2628  00143E  6E2E               	movwf	_i2c_object+6,c
  2629                           
  2630                           ;i2c.c: 208: SSPSTAT = 0x00;
  2631  001440  0E00               	movlw	0
  2632  001442  6EC7               	movwf	4039,c	;volatile
  2633                           
  2634                           ;i2c.c: 210: SSPCON1 = 0x28;
  2635  001444  0E28               	movlw	40
  2636  001446  6EC6               	movwf	4038,c	;volatile
  2637                           
  2638                           ;i2c.c: 212: SSPADD = 0x03;
  2639  001448  0E03               	movlw	3
  2640  00144A  6EC8               	movwf	4040,c	;volatile
  2641                           
  2642                           ;i2c.c: 216: PIR1bits.SSPIF = 0;
  2643  00144C  969E               	bcf	3998,3,c	;volatile
  2644                           
  2645                           ;i2c.c: 218: PIE1bits.SSPIE = 1;
  2646  00144E  869D               	bsf	3997,3,c	;volatile
  2647  001450  0012               	return		;funcret
  2648  001452                     __end_of_I2C_Initialize:
  2649                           	opt stack 0
  2650                           tblptru	equ	0xFF8
  2651                           intcon	equ	0xFF2
  2652                           postinc0	equ	0xFEE
  2653                           wreg	equ	0xFE8
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function _ECAN_Initialize *****************
  2657 ;; Defined at:
  2658 ;;		line 63 in file "mcc_generated_files/ecan.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2676 ;;Total ram usage:        1 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_SYSTEM_Initialize
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text14
  2687  000F42                     __ptext14:
  2688                           	opt stack 0
  2689  000F42                     _ECAN_Initialize:
  2690                           	opt stack 26
  2691                           
  2692                           ;ecan.c: 65: CANCON = 0x80;
  2693                           
  2694                           ;incstack = 0
  2695  000F42  0E80               	movlw	128
  2696  000F44  6E6F               	movwf	3951,c	;volatile
  2697  000F46                     l2721:
  2698  000F46  506E               	movf	3950,w,c	;volatile
  2699  000F48  0BE0               	andlw	224
  2700  000F4A  0A80               	xorlw	128
  2701  000F4C  A4D8               	btfss	status,2,c
  2702  000F4E  D7FB               	goto	l2721
  2703                           
  2704                           ;ecan.c: 71: ECANCON = 0x00;
  2705  000F50  0E00               	movlw	0
  2706  000F52  6E72               	movwf	3954,c	;volatile
  2707                           
  2708                           ;ecan.c: 88: RXM0EIDH = 0x00;
  2709  000F54  0E00               	movlw	0
  2710  000F56  010E               	movlb	14	; () banked
  2711  000F58  6FFA               	movwf	250,b	;volatile
  2712                           
  2713                           ;ecan.c: 89: RXM0EIDL = 0x00;
  2714  000F5A  0E00               	movlw	0
  2715  000F5C  010E               	movlb	14	; () banked
  2716  000F5E  6FFB               	movwf	251,b	;volatile
  2717                           
  2718                           ;ecan.c: 90: RXM0SIDH = 0x00;
  2719  000F60  0E00               	movlw	0
  2720  000F62  010E               	movlb	14	; () banked
  2721  000F64  6FF8               	movwf	248,b	;volatile
  2722                           
  2723                           ;ecan.c: 91: RXM0SIDL = 0x00;
  2724  000F66  0E00               	movlw	0
  2725  000F68  010E               	movlb	14	; () banked
  2726  000F6A  6FF9               	movwf	249,b	;volatile
  2727                           
  2728                           ; BSR set to: 14
  2729                           ;ecan.c: 93: RXM1EIDH = 0xFF;
  2730  000F6C  010E               	movlb	14	; () banked
  2731  000F6E  69FE               	setf	254,b	;volatile
  2732                           
  2733                           ; BSR set to: 14
  2734                           ;ecan.c: 94: RXM1EIDL = 0xFF;
  2735  000F70  010E               	movlb	14	; () banked
  2736  000F72  69FF               	setf	255,b	;volatile
  2737                           
  2738                           ; BSR set to: 14
  2739                           ;ecan.c: 95: RXM1SIDH = 0xFF;
  2740  000F74  010E               	movlb	14	; () banked
  2741  000F76  69FC               	setf	252,b	;volatile
  2742                           
  2743                           ; BSR set to: 14
  2744                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  2745  000F78  010E               	movlb	14	; () banked
  2746  000F7A  69FD               	setf	253,b	;volatile
  2747                           
  2748                           ;ecan.c: 102: RXF0EIDH = 0x00;
  2749  000F7C  0E00               	movlw	0
  2750  000F7E  010E               	movlb	14	; () banked
  2751  000F80  6FE2               	movwf	226,b	;volatile
  2752                           
  2753                           ;ecan.c: 103: RXF0EIDL = 0x00;
  2754  000F82  0E00               	movlw	0
  2755  000F84  010E               	movlb	14	; () banked
  2756  000F86  6FE3               	movwf	227,b	;volatile
  2757                           
  2758                           ;ecan.c: 104: RXF0SIDH = 0x88;
  2759  000F88  0E88               	movlw	136
  2760  000F8A  010E               	movlb	14	; () banked
  2761  000F8C  6FE0               	movwf	224,b	;volatile
  2762                           
  2763                           ;ecan.c: 105: RXF0SIDL = 0x80;
  2764  000F8E  0E80               	movlw	128
  2765  000F90  010E               	movlb	14	; () banked
  2766  000F92  6FE1               	movwf	225,b	;volatile
  2767                           
  2768                           ;ecan.c: 107: RXF1EIDH = 0x00;
  2769  000F94  0E00               	movlw	0
  2770  000F96  010E               	movlb	14	; () banked
  2771  000F98  6FE6               	movwf	230,b	;volatile
  2772                           
  2773                           ;ecan.c: 108: RXF1EIDL = 0x00;
  2774  000F9A  0E00               	movlw	0
  2775  000F9C  010E               	movlb	14	; () banked
  2776  000F9E  6FE7               	movwf	231,b	;volatile
  2777                           
  2778                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  2779  000FA0  0ECC               	movlw	204
  2780  000FA2  010E               	movlb	14	; () banked
  2781  000FA4  6FE4               	movwf	228,b	;volatile
  2782                           
  2783                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  2784  000FA6  0EC0               	movlw	192
  2785  000FA8  010E               	movlb	14	; () banked
  2786  000FAA  6FE5               	movwf	229,b	;volatile
  2787                           
  2788                           ;ecan.c: 112: RXF2EIDH = 0x00;
  2789  000FAC  0E00               	movlw	0
  2790  000FAE  010E               	movlb	14	; () banked
  2791  000FB0  6FEA               	movwf	234,b	;volatile
  2792                           
  2793                           ;ecan.c: 113: RXF2EIDL = 0x00;
  2794  000FB2  0E00               	movlw	0
  2795  000FB4  010E               	movlb	14	; () banked
  2796  000FB6  6FEB               	movwf	235,b	;volatile
  2797                           
  2798                           ;ecan.c: 114: RXF2SIDH = 0x00;
  2799  000FB8  0E00               	movlw	0
  2800  000FBA  010E               	movlb	14	; () banked
  2801  000FBC  6FE8               	movwf	232,b	;volatile
  2802                           
  2803                           ;ecan.c: 115: RXF2SIDL = 0x00;
  2804  000FBE  0E00               	movlw	0
  2805  000FC0  010E               	movlb	14	; () banked
  2806  000FC2  6FE9               	movwf	233,b	;volatile
  2807                           
  2808                           ;ecan.c: 117: RXF3EIDH = 0x00;
  2809  000FC4  0E00               	movlw	0
  2810  000FC6  010E               	movlb	14	; () banked
  2811  000FC8  6FEE               	movwf	238,b	;volatile
  2812                           
  2813                           ;ecan.c: 118: RXF3EIDL = 0x00;
  2814  000FCA  0E00               	movlw	0
  2815  000FCC  010E               	movlb	14	; () banked
  2816  000FCE  6FEF               	movwf	239,b	;volatile
  2817                           
  2818                           ;ecan.c: 119: RXF3SIDH = 0x00;
  2819  000FD0  0E00               	movlw	0
  2820  000FD2  010E               	movlb	14	; () banked
  2821  000FD4  6FEC               	movwf	236,b	;volatile
  2822                           
  2823                           ;ecan.c: 120: RXF3SIDL = 0x00;
  2824  000FD6  0E00               	movlw	0
  2825  000FD8  010E               	movlb	14	; () banked
  2826  000FDA  6FED               	movwf	237,b	;volatile
  2827                           
  2828                           ;ecan.c: 122: RXF4EIDH = 0x00;
  2829  000FDC  0E00               	movlw	0
  2830  000FDE  010E               	movlb	14	; () banked
  2831  000FE0  6FF2               	movwf	242,b	;volatile
  2832                           
  2833                           ;ecan.c: 123: RXF4EIDL = 0x00;
  2834  000FE2  0E00               	movlw	0
  2835  000FE4  010E               	movlb	14	; () banked
  2836  000FE6  6FF3               	movwf	243,b	;volatile
  2837                           
  2838                           ;ecan.c: 124: RXF4SIDH = 0x00;
  2839  000FE8  0E00               	movlw	0
  2840  000FEA  010E               	movlb	14	; () banked
  2841  000FEC  6FF0               	movwf	240,b	;volatile
  2842                           
  2843                           ;ecan.c: 125: RXF4SIDL = 0x00;
  2844  000FEE  0E00               	movlw	0
  2845  000FF0  010E               	movlb	14	; () banked
  2846  000FF2  6FF1               	movwf	241,b	;volatile
  2847                           
  2848                           ;ecan.c: 127: RXF5EIDH = 0x00;
  2849  000FF4  0E00               	movlw	0
  2850  000FF6  010E               	movlb	14	; () banked
  2851  000FF8  6FF6               	movwf	246,b	;volatile
  2852                           
  2853                           ;ecan.c: 128: RXF5EIDL = 0x00;
  2854  000FFA  0E00               	movlw	0
  2855  000FFC  010E               	movlb	14	; () banked
  2856  000FFE  6FF7               	movwf	247,b	;volatile
  2857                           
  2858                           ;ecan.c: 129: RXF5SIDH = 0x00;
  2859  001000  0E00               	movlw	0
  2860  001002  010E               	movlb	14	; () banked
  2861  001004  6FF4               	movwf	244,b	;volatile
  2862                           
  2863                           ;ecan.c: 130: RXF5SIDL = 0x00;
  2864  001006  0E00               	movlw	0
  2865  001008  010E               	movlb	14	; () banked
  2866  00100A  6FF5               	movwf	245,b	;volatile
  2867                           
  2868                           ;ecan.c: 145: BRGCON1 = 0x03;
  2869  00100C  0E03               	movlw	3
  2870  00100E  010E               	movlb	14	; () banked
  2871  001010  6F43               	movwf	67,b	;volatile
  2872                           
  2873                           ;ecan.c: 146: BRGCON2 = 0x98;
  2874  001012  0E98               	movlw	152
  2875  001014  010E               	movlb	14	; () banked
  2876  001016  6F44               	movwf	68,b	;volatile
  2877                           
  2878                           ;ecan.c: 147: BRGCON3 = 0x01;
  2879  001018  0E01               	movlw	1
  2880  00101A  010E               	movlb	14	; () banked
  2881  00101C  6F45               	movwf	69,b	;volatile
  2882                           
  2883                           ;ecan.c: 149: CANCON = 0x00;
  2884  00101E  0E00               	movlw	0
  2885  001020  6E6F               	movwf	3951,c	;volatile
  2886  001022                     l2733:
  2887  001022  CF6E F014          	movff	3950,??_ECAN_Initialize	;volatile
  2888  001026  0EE0               	movlw	224
  2889  001028  1614               	andwf	??_ECAN_Initialize,f,c
  2890  00102A  B4D8               	btfsc	status,2,c
  2891  00102C  0012               	return	
  2892  00102E  D7F9               	goto	l2733
  2893  001030                     __end_of_ECAN_Initialize:
  2894                           	opt stack 0
  2895                           tblptru	equ	0xFF8
  2896                           intcon	equ	0xFF2
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           status	equ	0xFD8
  2900                           
  2901 ;; *************** function _CCP2_Initialize *****************
  2902 ;; Defined at:
  2903 ;;		line 57 in file "mcc_generated_files/ccp2.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2921 ;;Total ram usage:        0 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    3
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_SYSTEM_Initialize
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text15
  2932  0014C2                     __ptext15:
  2933                           	opt stack 0
  2934  0014C2                     _CCP2_Initialize:
  2935                           	opt stack 26
  2936                           
  2937                           ;ccp2.c: 62: CCP2CON = 0x07;
  2938                           
  2939                           ;incstack = 0
  2940  0014C2  0E07               	movlw	7
  2941  0014C4  010F               	movlb	15	; () banked
  2942  0014C6  6F50               	movwf	80,b	;volatile
  2943                           
  2944                           ;ccp2.c: 65: CCPR2L = 0x00;
  2945  0014C8  0E00               	movlw	0
  2946  0014CA  010F               	movlb	15	; () banked
  2947  0014CC  6F51               	movwf	81,b	;volatile
  2948                           
  2949                           ;ccp2.c: 68: CCPR2H = 0x00;
  2950  0014CE  0E00               	movlw	0
  2951  0014D0  010F               	movlb	15	; () banked
  2952  0014D2  6F52               	movwf	82,b	;volatile
  2953                           
  2954                           ; BSR set to: 15
  2955                           ;ccp2.c: 71: CCPTMRSbits.C2TSEL = 0x0;
  2956  0014D4  9299               	bcf	3993,1,c	;volatile
  2957                           
  2958                           ; BSR set to: 15
  2959                           ;ccp2.c: 74: PIR3bits.CCP2IF = 0;
  2960  0014D6  94A4               	bcf	4004,2,c	;volatile
  2961                           
  2962                           ; BSR set to: 15
  2963                           ;ccp2.c: 77: PIE3bits.CCP2IE = 1;
  2964  0014D8  84A3               	bsf	4003,2,c	;volatile
  2965                           
  2966                           ; BSR set to: 15
  2967  0014DA  0012               	return		;funcret
  2968  0014DC                     __end_of_CCP2_Initialize:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           intcon	equ	0xFF2
  2972                           postinc0	equ	0xFEE
  2973                           wreg	equ	0xFE8
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _BNO055_Initialize *****************
  2977 ;; Defined at:
  2978 ;;		line 137 in file "mcc_generated_files/mcc.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  pflag           1   37[COMRAM] enum E15164
  2983 ;;  message         1   36[COMRAM] unsigned char 
  2984 ;;  id              1   35[COMRAM] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;Total ram usage:        3 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    5
  3001 ;; This function calls:
  3002 ;;		_I2C_MasterRead
  3003 ;;		_I2C_MasterWrite
  3004 ;; This function is called by:
  3005 ;;		_SYSTEM_Initialize
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text16
  3010  000A64                     __ptext16:
  3011                           	opt stack 0
  3012  000A64                     _BNO055_Initialize:
  3013                           	opt stack 24
  3014                           
  3015                           ;mcc.c: 139: uint8_t id;
  3016                           ;mcc.c: 140: uint8_t message;
  3017                           ;mcc.c: 141: I2C_MESSAGE_STATUS pflag;
  3018                           ;mcc.c: 143: I2C_MasterRead ( &id, 1, BNO055_CHIP_ID_ADDR, &pflag );
  3019                           
  3020                           ; BSR set to: 15
  3021                           ;incstack = 0
  3022  000A64  0E24               	movlw	low BNO055_Initialize@id
  3023  000A66  6E1D               	movwf	I2C_MasterRead@pdata,c
  3024  000A68  0E00               	movlw	high BNO055_Initialize@id
  3025  000A6A  6E1E               	movwf	I2C_MasterRead@pdata+1,c
  3026  000A6C  0E01               	movlw	1
  3027  000A6E  6E1F               	movwf	I2C_MasterRead@length,c
  3028  000A70  0E00               	movlw	0
  3029  000A72  6E21               	movwf	I2C_MasterRead@address+1,c
  3030  000A74  0E00               	movlw	0
  3031  000A76  6E20               	movwf	I2C_MasterRead@address,c
  3032  000A78  0E26               	movlw	low BNO055_Initialize@pflag
  3033  000A7A  6E22               	movwf	I2C_MasterRead@pflag,c
  3034  000A7C  0E00               	movlw	high BNO055_Initialize@pflag
  3035  000A7E  6E23               	movwf	I2C_MasterRead@pflag+1,c
  3036  000A80  EC3E  F009         	call	_I2C_MasterRead	;wreg free
  3037  000A84                     l2737:
  3038  000A84  5026               	movf	BNO055_Initialize@pflag,w,c
  3039  000A86  A4D8               	btfss	status,2,c
  3040  000A88  D7FD               	goto	l2737
  3041                           
  3042                           ;mcc.c: 145: if ( id != (0xA0) ){
  3043  000A8A  0EA0               	movlw	160
  3044  000A8C  1824               	xorwf	BNO055_Initialize@id,w,c
  3045  000A8E  B4D8               	btfsc	status,2,c
  3046  000A90  D017               	goto	l2749
  3047                           
  3048                           ;mcc.c: 146: I2C_MasterRead ( &id, 1, BNO055_CHIP_ID_ADDR, &pflag );
  3049  000A92  0E24               	movlw	low BNO055_Initialize@id
  3050  000A94  6E1D               	movwf	I2C_MasterRead@pdata,c
  3051  000A96  0E00               	movlw	high BNO055_Initialize@id
  3052  000A98  6E1E               	movwf	I2C_MasterRead@pdata+1,c
  3053  000A9A  0E01               	movlw	1
  3054  000A9C  6E1F               	movwf	I2C_MasterRead@length,c
  3055  000A9E  0E00               	movlw	0
  3056  000AA0  6E21               	movwf	I2C_MasterRead@address+1,c
  3057  000AA2  0E00               	movlw	0
  3058  000AA4  6E20               	movwf	I2C_MasterRead@address,c
  3059  000AA6  0E26               	movlw	low BNO055_Initialize@pflag
  3060  000AA8  6E22               	movwf	I2C_MasterRead@pflag,c
  3061  000AAA  0E00               	movlw	high BNO055_Initialize@pflag
  3062  000AAC  6E23               	movwf	I2C_MasterRead@pflag+1,c
  3063  000AAE  EC3E  F009         	call	_I2C_MasterRead	;wreg free
  3064  000AB2                     l2743:
  3065  000AB2  5026               	movf	BNO055_Initialize@pflag,w,c
  3066  000AB4  A4D8               	btfss	status,2,c
  3067  000AB6  D7FD               	goto	l2743
  3068                           
  3069                           ;mcc.c: 148: if ( id != (0xA0) ) {
  3070  000AB8  0EA0               	movlw	160
  3071  000ABA  1824               	xorwf	BNO055_Initialize@id,w,c
  3072  000ABC  A4D8               	btfss	status,2,c
  3073  000ABE  0012               	return	
  3074  000AC0                     l2749:
  3075                           
  3076                           ;mcc.c: 150: }
  3077                           ;mcc.c: 151: }
  3078                           ;mcc.c: 153: message = OPERATION_MODE_CONFIG;
  3079  000AC0  0E00               	movlw	0
  3080  000AC2  6E25               	movwf	BNO055_Initialize@message,c
  3081                           
  3082                           ;mcc.c: 154: pflag = I2C_MESSAGE_PENDING;
  3083  000AC4  0E02               	movlw	2
  3084  000AC6  6E26               	movwf	BNO055_Initialize@pflag,c
  3085                           
  3086                           ;mcc.c: 155: I2C_MasterWrite( &message, 1, BNO055_OPR_MODE_ADDR, &pflag );
  3087  000AC8  0E25               	movlw	low BNO055_Initialize@message
  3088  000ACA  6E1D               	movwf	I2C_MasterWrite@pdata,c
  3089  000ACC  0E00               	movlw	high BNO055_Initialize@message
  3090  000ACE  6E1E               	movwf	I2C_MasterWrite@pdata+1,c
  3091  000AD0  0E01               	movlw	1
  3092  000AD2  6E1F               	movwf	I2C_MasterWrite@length,c
  3093  000AD4  0E00               	movlw	0
  3094  000AD6  6E21               	movwf	I2C_MasterWrite@address+1,c
  3095  000AD8  0E3D               	movlw	61
  3096  000ADA  6E20               	movwf	I2C_MasterWrite@address,c
  3097  000ADC  0E26               	movlw	low BNO055_Initialize@pflag
  3098  000ADE  6E22               	movwf	I2C_MasterWrite@pflag,c
  3099  000AE0  0E00               	movlw	high BNO055_Initialize@pflag
  3100  000AE2  6E23               	movwf	I2C_MasterWrite@pflag+1,c
  3101  000AE4  EC19  F009         	call	_I2C_MasterWrite	;wreg free
  3102  000AE8                     l2753:
  3103  000AE8  5026               	movf	BNO055_Initialize@pflag,w,c
  3104  000AEA  A4D8               	btfss	status,2,c
  3105  000AEC  D7FD               	goto	l2753
  3106                           
  3107                           ;mcc.c: 158: message = 0x20;
  3108  000AEE  0E20               	movlw	32
  3109  000AF0  6E25               	movwf	BNO055_Initialize@message,c
  3110                           
  3111                           ;mcc.c: 159: pflag = I2C_MESSAGE_PENDING;
  3112  000AF2  0E02               	movlw	2
  3113  000AF4  6E26               	movwf	BNO055_Initialize@pflag,c
  3114                           
  3115                           ;mcc.c: 160: I2C_MasterWrite ( &message, 1, BNO055_SYS_TRIGGER_ADDR, &pflag );
  3116  000AF6  0E25               	movlw	low BNO055_Initialize@message
  3117  000AF8  6E1D               	movwf	I2C_MasterWrite@pdata,c
  3118  000AFA  0E00               	movlw	high BNO055_Initialize@message
  3119  000AFC  6E1E               	movwf	I2C_MasterWrite@pdata+1,c
  3120  000AFE  0E01               	movlw	1
  3121  000B00  6E1F               	movwf	I2C_MasterWrite@length,c
  3122  000B02  0E00               	movlw	0
  3123  000B04  6E21               	movwf	I2C_MasterWrite@address+1,c
  3124  000B06  0E3F               	movlw	63
  3125  000B08  6E20               	movwf	I2C_MasterWrite@address,c
  3126  000B0A  0E26               	movlw	low BNO055_Initialize@pflag
  3127  000B0C  6E22               	movwf	I2C_MasterWrite@pflag,c
  3128  000B0E  0E00               	movlw	high BNO055_Initialize@pflag
  3129  000B10  6E23               	movwf	I2C_MasterWrite@pflag+1,c
  3130  000B12  EC19  F009         	call	_I2C_MasterWrite	;wreg free
  3131  000B16                     l2759:
  3132  000B16  5026               	movf	BNO055_Initialize@pflag,w,c
  3133  000B18  A4D8               	btfss	status,2,c
  3134  000B1A  D7FD               	goto	l2759
  3135  000B1C                     l2761:
  3136                           
  3137                           ;mcc.c: 163: pflag = I2C_MESSAGE_PENDING;
  3138  000B1C  0E02               	movlw	2
  3139  000B1E  6E26               	movwf	BNO055_Initialize@pflag,c
  3140                           
  3141                           ;mcc.c: 164: I2C_MasterRead ( &id, 1, BNO055_CHIP_ID_ADDR, &pflag );
  3142  000B20  0E24               	movlw	low BNO055_Initialize@id
  3143  000B22  6E1D               	movwf	I2C_MasterRead@pdata,c
  3144  000B24  0E00               	movlw	high BNO055_Initialize@id
  3145  000B26  6E1E               	movwf	I2C_MasterRead@pdata+1,c
  3146  000B28  0E01               	movlw	1
  3147  000B2A  6E1F               	movwf	I2C_MasterRead@length,c
  3148  000B2C  0E00               	movlw	0
  3149  000B2E  6E21               	movwf	I2C_MasterRead@address+1,c
  3150  000B30  0E00               	movlw	0
  3151  000B32  6E20               	movwf	I2C_MasterRead@address,c
  3152  000B34  0E26               	movlw	low BNO055_Initialize@pflag
  3153  000B36  6E22               	movwf	I2C_MasterRead@pflag,c
  3154  000B38  0E00               	movlw	high BNO055_Initialize@pflag
  3155  000B3A  6E23               	movwf	I2C_MasterRead@pflag+1,c
  3156  000B3C  EC3E  F009         	call	_I2C_MasterRead	;wreg free
  3157  000B40                     l2765:
  3158  000B40  5026               	movf	BNO055_Initialize@pflag,w,c
  3159  000B42  A4D8               	btfss	status,2,c
  3160  000B44  D7FD               	goto	l2765
  3161                           
  3162                           ;mcc.c: 166: } while ( id != (0xA0) );
  3163  000B46  0EA0               	movlw	160
  3164  000B48  1824               	xorwf	BNO055_Initialize@id,w,c
  3165  000B4A  A4D8               	btfss	status,2,c
  3166  000B4C  D7E7               	goto	l2761
  3167                           
  3168                           ;mcc.c: 168: message = POWER_MODE_NORMAL;
  3169  000B4E  0E00               	movlw	0
  3170  000B50  6E25               	movwf	BNO055_Initialize@message,c
  3171                           
  3172                           ;mcc.c: 169: pflag = I2C_MESSAGE_PENDING;
  3173  000B52  0E02               	movlw	2
  3174  000B54  6E26               	movwf	BNO055_Initialize@pflag,c
  3175                           
  3176                           ;mcc.c: 170: I2C_MasterWrite ( &message, 1, BNO055_PWR_MODE_ADDR, &pflag );
  3177  000B56  0E25               	movlw	low BNO055_Initialize@message
  3178  000B58  6E1D               	movwf	I2C_MasterWrite@pdata,c
  3179  000B5A  0E00               	movlw	high BNO055_Initialize@message
  3180  000B5C  6E1E               	movwf	I2C_MasterWrite@pdata+1,c
  3181  000B5E  0E01               	movlw	1
  3182  000B60  6E1F               	movwf	I2C_MasterWrite@length,c
  3183  000B62  0E00               	movlw	0
  3184  000B64  6E21               	movwf	I2C_MasterWrite@address+1,c
  3185  000B66  0E3E               	movlw	62
  3186  000B68  6E20               	movwf	I2C_MasterWrite@address,c
  3187  000B6A  0E26               	movlw	low BNO055_Initialize@pflag
  3188  000B6C  6E22               	movwf	I2C_MasterWrite@pflag,c
  3189  000B6E  0E00               	movlw	high BNO055_Initialize@pflag
  3190  000B70  6E23               	movwf	I2C_MasterWrite@pflag+1,c
  3191  000B72  EC19  F009         	call	_I2C_MasterWrite	;wreg free
  3192  000B76                     l2773:
  3193  000B76  5026               	movf	BNO055_Initialize@pflag,w,c
  3194  000B78  A4D8               	btfss	status,2,c
  3195  000B7A  D7FD               	goto	l2773
  3196                           
  3197                           ;mcc.c: 173: message = 0x0;
  3198  000B7C  0E00               	movlw	0
  3199  000B7E  6E25               	movwf	BNO055_Initialize@message,c
  3200                           
  3201                           ;mcc.c: 174: pflag = I2C_MESSAGE_PENDING;
  3202  000B80  0E02               	movlw	2
  3203  000B82  6E26               	movwf	BNO055_Initialize@pflag,c
  3204                           
  3205                           ;mcc.c: 175: I2C_MasterWrite ( &message, 1, BNO055_PAGE_ID_ADDR, &pflag );
  3206  000B84  0E25               	movlw	low BNO055_Initialize@message
  3207  000B86  6E1D               	movwf	I2C_MasterWrite@pdata,c
  3208  000B88  0E00               	movlw	high BNO055_Initialize@message
  3209  000B8A  6E1E               	movwf	I2C_MasterWrite@pdata+1,c
  3210  000B8C  0E01               	movlw	1
  3211  000B8E  6E1F               	movwf	I2C_MasterWrite@length,c
  3212  000B90  0E00               	movlw	0
  3213  000B92  6E21               	movwf	I2C_MasterWrite@address+1,c
  3214  000B94  0E07               	movlw	7
  3215  000B96  6E20               	movwf	I2C_MasterWrite@address,c
  3216  000B98  0E26               	movlw	low BNO055_Initialize@pflag
  3217  000B9A  6E22               	movwf	I2C_MasterWrite@pflag,c
  3218  000B9C  0E00               	movlw	high BNO055_Initialize@pflag
  3219  000B9E  6E23               	movwf	I2C_MasterWrite@pflag+1,c
  3220  000BA0  EC19  F009         	call	_I2C_MasterWrite	;wreg free
  3221  000BA4                     l2779:
  3222  000BA4  5026               	movf	BNO055_Initialize@pflag,w,c
  3223  000BA6  A4D8               	btfss	status,2,c
  3224  000BA8  D7FD               	goto	l2779
  3225                           
  3226                           ;mcc.c: 178: message = 0x0;
  3227  000BAA  0E00               	movlw	0
  3228  000BAC  6E25               	movwf	BNO055_Initialize@message,c
  3229                           
  3230                           ;mcc.c: 179: pflag = I2C_MESSAGE_PENDING;
  3231  000BAE  0E02               	movlw	2
  3232  000BB0  6E26               	movwf	BNO055_Initialize@pflag,c
  3233                           
  3234                           ;mcc.c: 180: I2C_MasterWrite ( &message, 1, BNO055_SYS_TRIGGER_ADDR, &pflag );
  3235  000BB2  0E25               	movlw	low BNO055_Initialize@message
  3236  000BB4  6E1D               	movwf	I2C_MasterWrite@pdata,c
  3237  000BB6  0E00               	movlw	high BNO055_Initialize@message
  3238  000BB8  6E1E               	movwf	I2C_MasterWrite@pdata+1,c
  3239  000BBA  0E01               	movlw	1
  3240  000BBC  6E1F               	movwf	I2C_MasterWrite@length,c
  3241  000BBE  0E00               	movlw	0
  3242  000BC0  6E21               	movwf	I2C_MasterWrite@address+1,c
  3243  000BC2  0E3F               	movlw	63
  3244  000BC4  6E20               	movwf	I2C_MasterWrite@address,c
  3245  000BC6  0E26               	movlw	low BNO055_Initialize@pflag
  3246  000BC8  6E22               	movwf	I2C_MasterWrite@pflag,c
  3247  000BCA  0E00               	movlw	high BNO055_Initialize@pflag
  3248  000BCC  6E23               	movwf	I2C_MasterWrite@pflag+1,c
  3249  000BCE  EC19  F009         	call	_I2C_MasterWrite	;wreg free
  3250  000BD2                     l2785:
  3251  000BD2  5026               	movf	BNO055_Initialize@pflag,w,c
  3252  000BD4  B4D8               	btfsc	status,2,c
  3253  000BD6  0012               	return	
  3254  000BD8  D7FC               	goto	l2785
  3255  000BDA                     __end_of_BNO055_Initialize:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _I2C_MasterWrite *****************
  3264 ;; Defined at:
  3265 ;;		line 596 in file "mcc_generated_files/i2c.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  pdata           2   28[COMRAM] PTR unsigned char 
  3268 ;;		 -> main@message(1), BNO055_Initialize@message(1), 
  3269 ;;  length          1   30[COMRAM] unsigned char 
  3270 ;;  address         2   31[COMRAM] unsigned int 
  3271 ;;  pflag           2   33[COMRAM] PTR enum E15091
  3272 ;;		 -> main@status(1), BNO055_Initialize@pflag(1), 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3284 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;Total ram usage:        7 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    4
  3291 ;; This function calls:
  3292 ;;		_I2C_MasterTRBInsert
  3293 ;;		_I2C_MasterWriteTRBBuild
  3294 ;; This function is called by:
  3295 ;;		_BNO055_Initialize
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text17
  3301  001232                     __ptext17:
  3302                           	opt stack 0
  3303  001232                     _I2C_MasterWrite:
  3304                           	opt stack 24
  3305                           
  3306                           ;i2c.c: 602: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;
  3307                           ;i2c.c: 605: if (i2c_object.trStatus.s.full != 1)
  3308                           
  3309                           ;incstack = 0
  3310  001232  B02C               	btfsc	_i2c_object+4,0,c
  3311  001234  D01C               	goto	l2657
  3312                           
  3313                           ;i2c.c: 606: {
  3314                           ;i2c.c: 607: I2C_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  3315  001236  0EA8               	movlw	low I2C_MasterWrite@trBlock
  3316  001238  6E14               	movwf	I2C_MasterWriteTRBBuild@ptrb,c
  3317  00123A  0E00               	movlw	high I2C_MasterWrite@trBlock
  3318  00123C  6E15               	movwf	I2C_MasterWriteTRBBuild@ptrb+1,c
  3319  00123E  C01D  F016         	movff	I2C_MasterWrite@pdata,I2C_MasterWriteTRBBuild@pdata
  3320  001242  C01E  F017         	movff	I2C_MasterWrite@pdata+1,I2C_MasterWriteTRBBuild@pdata+1
  3321  001246  C01F  F018         	movff	I2C_MasterWrite@length,I2C_MasterWriteTRBBuild@length
  3322  00124A  C020  F019         	movff	I2C_MasterWrite@address,I2C_MasterWriteTRBBuild@address
  3323  00124E  C021  F01A         	movff	I2C_MasterWrite@address+1,I2C_MasterWriteTRBBuild@address+1
  3324  001252  EC63  F009         	call	_I2C_MasterWriteTRBBuild	;wreg free
  3325                           
  3326                           ;i2c.c: 608: I2C_MasterTRBInsert(1, &trBlock, pflag);
  3327  001256  0EA8               	movlw	low I2C_MasterWrite@trBlock
  3328  001258  6E14               	movwf	I2C_MasterTRBInsert@ptrb_list,c
  3329  00125A  0E00               	movlw	high I2C_MasterWrite@trBlock
  3330  00125C  6E15               	movwf	I2C_MasterTRBInsert@ptrb_list+1,c
  3331  00125E  C022  F016         	movff	I2C_MasterWrite@pflag,I2C_MasterTRBInsert@pflag
  3332  001262  C023  F017         	movff	I2C_MasterWrite@pflag+1,I2C_MasterTRBInsert@pflag+1
  3333  001266  0E01               	movlw	1
  3334  001268  EC6F  F008         	call	_I2C_MasterTRBInsert
  3335                           
  3336                           ;i2c.c: 609: }
  3337  00126C  0012               	return	
  3338  00126E                     l2657:
  3339                           
  3340                           ;i2c.c: 610: else
  3341                           ;i2c.c: 611: {
  3342                           ;i2c.c: 612: *pflag = I2C_MESSAGE_FAIL;
  3343  00126E  C022  FFD9         	movff	I2C_MasterWrite@pflag,fsr2l
  3344  001272  C023  FFDA         	movff	I2C_MasterWrite@pflag+1,fsr2h
  3345  001276  0E01               	movlw	1
  3346  001278  6EDF               	movwf	indf2,c
  3347  00127A  0012               	return	
  3348  00127C                     __end_of_I2C_MasterWrite:
  3349                           	opt stack 0
  3350                           tblptru	equ	0xFF8
  3351                           intcon	equ	0xFF2
  3352                           postinc0	equ	0xFEE
  3353                           wreg	equ	0xFE8
  3354                           indf2	equ	0xFDF
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _I2C_MasterWriteTRBBuild *****************
  3360 ;; Defined at:
  3361 ;;		line 705 in file "mcc_generated_files/i2c.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  ptrb            2   19[COMRAM] PTR struct .
  3364 ;;		 -> I2C_MasterWrite@trBlock(5), 
  3365 ;;  pdata           2   21[COMRAM] PTR unsigned char 
  3366 ;;		 -> main@message(1), BNO055_Initialize@message(1), 
  3367 ;;  length          1   23[COMRAM] unsigned char 
  3368 ;;  address         2   24[COMRAM] unsigned int 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3380 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;Total ram usage:        9 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    3
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_I2C_MasterWrite
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text18
  3395  0012C6                     __ptext18:
  3396                           	opt stack 0
  3397  0012C6                     _I2C_MasterWriteTRBBuild:
  3398                           	opt stack 24
  3399                           
  3400                           ;i2c.c: 711: ptrb->address = address << 1;
  3401                           
  3402                           ;incstack = 0
  3403  0012C6  C019  F01B         	movff	I2C_MasterWriteTRBBuild@address,??_I2C_MasterWriteTRBBuild
  3404  0012CA  C01A  F01C         	movff	I2C_MasterWriteTRBBuild@address+1,??_I2C_MasterWriteTRBBuild+1
  3405  0012CE  90D8               	bcf	status,0,c
  3406  0012D0  361B               	rlcf	??_I2C_MasterWriteTRBBuild,f,c
  3407  0012D2  361C               	rlcf	??_I2C_MasterWriteTRBBuild+1,f,c
  3408  0012D4  C014  FFD9         	movff	I2C_MasterWriteTRBBuild@ptrb,fsr2l
  3409  0012D8  C015  FFDA         	movff	I2C_MasterWriteTRBBuild@ptrb+1,fsr2h
  3410  0012DC  C01B  FFDE         	movff	??_I2C_MasterWriteTRBBuild,postinc2
  3411  0012E0  C01C  FFDD         	movff	??_I2C_MasterWriteTRBBuild+1,postdec2
  3412                           
  3413                           ;i2c.c: 712: ptrb->length = length;
  3414  0012E4  EE20 F002          	lfsr	2,2
  3415  0012E8  5014               	movf	I2C_MasterWriteTRBBuild@ptrb,w,c
  3416  0012EA  26D9               	addwf	fsr2l,f,c
  3417  0012EC  5015               	movf	I2C_MasterWriteTRBBuild@ptrb+1,w,c
  3418  0012EE  22DA               	addwfc	fsr2h,f,c
  3419  0012F0  C018  FFDF         	movff	I2C_MasterWriteTRBBuild@length,indf2
  3420                           
  3421                           ;i2c.c: 713: ptrb->pbuffer = pdata;
  3422  0012F4  EE20 F003          	lfsr	2,3
  3423  0012F8  5014               	movf	I2C_MasterWriteTRBBuild@ptrb,w,c
  3424  0012FA  26D9               	addwf	fsr2l,f,c
  3425  0012FC  5015               	movf	I2C_MasterWriteTRBBuild@ptrb+1,w,c
  3426  0012FE  22DA               	addwfc	fsr2h,f,c
  3427  001300  C016  FFDE         	movff	I2C_MasterWriteTRBBuild@pdata,postinc2
  3428  001304  C017  FFDD         	movff	I2C_MasterWriteTRBBuild@pdata+1,postdec2
  3429  001308  0012               	return		;funcret
  3430  00130A                     __end_of_I2C_MasterWriteTRBBuild:
  3431                           	opt stack 0
  3432                           tblptru	equ	0xFF8
  3433                           intcon	equ	0xFF2
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           indf2	equ	0xFDF
  3437                           postinc2	equ	0xFDE
  3438                           postdec2	equ	0xFDD
  3439                           fsr2h	equ	0xFDA
  3440                           fsr2l	equ	0xFD9
  3441                           status	equ	0xFD8
  3442                           
  3443 ;; *************** function _I2C_MasterRead *****************
  3444 ;; Defined at:
  3445 ;;		line 617 in file "mcc_generated_files/i2c.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  pdata           2   28[COMRAM] PTR unsigned char 
  3448 ;;		 -> main@linear_accel_z_MSB(1), main@linear_accel_z_LSB(1), main@linear_accel_y_MSB(1), main@linear_accel_y_LSB(1), 
  3449 ;;		 -> main@linear_accel_x_MSB(1), main@linear_accel_x_LSB(1), BNO055_Initialize@id(1), 
  3450 ;;  length          1   30[COMRAM] unsigned char 
  3451 ;;  address         2   31[COMRAM] unsigned int 
  3452 ;;  pflag           2   33[COMRAM] PTR enum E15091
  3453 ;;		 -> main@status(1), BNO055_Initialize@pflag(1), 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3465 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;Total ram usage:        7 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    4
  3472 ;; This function calls:
  3473 ;;		_I2C_MasterReadTRBBuild
  3474 ;;		_I2C_MasterTRBInsert
  3475 ;; This function is called by:
  3476 ;;		_BNO055_Initialize
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text19
  3482  00127C                     __ptext19:
  3483                           	opt stack 0
  3484  00127C                     _I2C_MasterRead:
  3485                           	opt stack 24
  3486                           
  3487                           ;i2c.c: 623: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;
  3488                           ;i2c.c: 627: if (i2c_object.trStatus.s.full != 1)
  3489                           
  3490                           ;incstack = 0
  3491  00127C  B02C               	btfsc	_i2c_object+4,0,c
  3492  00127E  D01C               	goto	l2651
  3493                           
  3494                           ;i2c.c: 628: {
  3495                           ;i2c.c: 629: I2C_MasterReadTRBBuild(&trBlock, pdata, length, address);
  3496  001280  0EA3               	movlw	low I2C_MasterRead@trBlock
  3497  001282  6E14               	movwf	I2C_MasterReadTRBBuild@ptrb,c
  3498  001284  0E00               	movlw	high I2C_MasterRead@trBlock
  3499  001286  6E15               	movwf	I2C_MasterReadTRBBuild@ptrb+1,c
  3500  001288  C01D  F016         	movff	I2C_MasterRead@pdata,I2C_MasterReadTRBBuild@pdata
  3501  00128C  C01E  F017         	movff	I2C_MasterRead@pdata+1,I2C_MasterReadTRBBuild@pdata+1
  3502  001290  C01F  F018         	movff	I2C_MasterRead@length,I2C_MasterReadTRBBuild@length
  3503  001294  C020  F019         	movff	I2C_MasterRead@address,I2C_MasterReadTRBBuild@address
  3504  001298  C021  F01A         	movff	I2C_MasterRead@address+1,I2C_MasterReadTRBBuild@address+1
  3505  00129C  ECF1  F008         	call	_I2C_MasterReadTRBBuild	;wreg free
  3506                           
  3507                           ;i2c.c: 630: I2C_MasterTRBInsert(1, &trBlock, pflag);
  3508  0012A0  0EA3               	movlw	low I2C_MasterRead@trBlock
  3509  0012A2  6E14               	movwf	I2C_MasterTRBInsert@ptrb_list,c
  3510  0012A4  0E00               	movlw	high I2C_MasterRead@trBlock
  3511  0012A6  6E15               	movwf	I2C_MasterTRBInsert@ptrb_list+1,c
  3512  0012A8  C022  F016         	movff	I2C_MasterRead@pflag,I2C_MasterTRBInsert@pflag
  3513  0012AC  C023  F017         	movff	I2C_MasterRead@pflag+1,I2C_MasterTRBInsert@pflag+1
  3514  0012B0  0E01               	movlw	1
  3515  0012B2  EC6F  F008         	call	_I2C_MasterTRBInsert
  3516                           
  3517                           ;i2c.c: 631: }
  3518  0012B6  0012               	return	
  3519  0012B8                     l2651:
  3520                           
  3521                           ;i2c.c: 632: else
  3522                           ;i2c.c: 633: {
  3523                           ;i2c.c: 634: *pflag = I2C_MESSAGE_FAIL;
  3524  0012B8  C022  FFD9         	movff	I2C_MasterRead@pflag,fsr2l
  3525  0012BC  C023  FFDA         	movff	I2C_MasterRead@pflag+1,fsr2h
  3526  0012C0  0E01               	movlw	1
  3527  0012C2  6EDF               	movwf	indf2,c
  3528  0012C4  0012               	return	
  3529  0012C6                     __end_of_I2C_MasterRead:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           intcon	equ	0xFF2
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           indf2	equ	0xFDF
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _I2C_MasterTRBInsert *****************
  3543 ;; Defined at:
  3544 ;;		line 639 in file "mcc_generated_files/i2c.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  count           1    wreg     unsigned char 
  3547 ;;  ptrb_list       2   19[COMRAM] PTR struct .
  3548 ;;		 -> I2C_MasterRead@trBlock(5), I2C_MasterWrite@trBlock(5), 
  3549 ;;  pflag           2   21[COMRAM] PTR enum E15091
  3550 ;;		 -> main@status(1), BNO055_Initialize@pflag(1), 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  count           1   24[COMRAM] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;Total ram usage:        6 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    3
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_I2C_MasterWrite
  3573 ;;		_I2C_MasterRead
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text20
  3578  0010DE                     __ptext20:
  3579                           	opt stack 0
  3580  0010DE                     _I2C_MasterTRBInsert:
  3581                           	opt stack 24
  3582                           
  3583                           ;incstack = 0
  3584                           ;I2C_MasterTRBInsert@count stored from wreg
  3585  0010DE  6E19               	movwf	I2C_MasterTRBInsert@count,c
  3586                           
  3587                           ;i2c.c: 646: if (i2c_object.trStatus.s.full != 1)
  3588  0010E0  B02C               	btfsc	_i2c_object+4,0,c
  3589  0010E2  D039               	goto	l2631
  3590                           
  3591                           ;i2c.c: 647: {
  3592                           ;i2c.c: 648: *pflag = I2C_MESSAGE_PENDING;
  3593  0010E4  C016  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  3594  0010E8  C017  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  3595  0010EC  0E02               	movlw	2
  3596  0010EE  6EDF               	movwf	indf2,c
  3597                           
  3598                           ;i2c.c: 650: i2c_object.pTrTail->ptrb_list = ptrb_list;
  3599  0010F0  EE20 F001          	lfsr	2,1
  3600  0010F4  5028               	movf	_i2c_object,w,c
  3601  0010F6  26D9               	addwf	fsr2l,f,c
  3602  0010F8  5029               	movf	_i2c_object+1,w,c
  3603  0010FA  22DA               	addwfc	fsr2h,f,c
  3604  0010FC  C014  FFDE         	movff	I2C_MasterTRBInsert@ptrb_list,postinc2
  3605  001100  C015  FFDD         	movff	I2C_MasterTRBInsert@ptrb_list+1,postdec2
  3606                           
  3607                           ;i2c.c: 651: i2c_object.pTrTail->count = count;
  3608  001104  C028  FFD9         	movff	_i2c_object,fsr2l
  3609  001108  C029  FFDA         	movff	_i2c_object+1,fsr2h
  3610  00110C  C019  FFDF         	movff	I2C_MasterTRBInsert@count,indf2
  3611                           
  3612                           ;i2c.c: 652: i2c_object.pTrTail->pTrFlag = pflag;
  3613  001110  EE20 F003          	lfsr	2,3
  3614  001114  5028               	movf	_i2c_object,w,c
  3615  001116  26D9               	addwf	fsr2l,f,c
  3616  001118  5029               	movf	_i2c_object+1,w,c
  3617  00111A  22DA               	addwfc	fsr2h,f,c
  3618  00111C  C016  FFDE         	movff	I2C_MasterTRBInsert@pflag,postinc2
  3619  001120  C017  FFDD         	movff	I2C_MasterTRBInsert@pflag+1,postdec2
  3620                           
  3621                           ;i2c.c: 653: i2c_object.pTrTail++;
  3622  001124  0E05               	movlw	5
  3623  001126  2628               	addwf	_i2c_object,f,c
  3624  001128  0E00               	movlw	0
  3625  00112A  2229               	addwfc	_i2c_object+1,f,c
  3626                           
  3627                           ;i2c.c: 656: if (i2c_object.pTrTail == (i2c_tr_queue + 1))
  3628  00112C  0E44               	movlw	low (_i2c_tr_queue+5)
  3629  00112E  1828               	xorwf	_i2c_object,w,c
  3630  001130  E108               	bnz	l2627
  3631  001132  0E00               	movlw	high (_i2c_tr_queue+5)
  3632  001134  1829               	xorwf	_i2c_object+1,w,c
  3633  001136  A4D8               	btfss	status,2,c
  3634  001138  D004               	goto	l2627
  3635                           
  3636                           ;i2c.c: 657: {
  3637                           ;i2c.c: 659: i2c_object.pTrTail = i2c_tr_queue;
  3638  00113A  0E3F               	movlw	low _i2c_tr_queue
  3639  00113C  6E28               	movwf	_i2c_object,c
  3640  00113E  0E00               	movlw	high _i2c_tr_queue
  3641  001140  6E29               	movwf	_i2c_object+1,c
  3642  001142                     l2627:
  3643                           
  3644                           ;i2c.c: 660: }
  3645                           ;i2c.c: 664: i2c_object.trStatus.s.empty = 0;
  3646  001142  922C               	bcf	_i2c_object+4,1,c
  3647                           
  3648                           ;i2c.c: 667: if (i2c_object.pTrHead == i2c_object.pTrTail)
  3649  001144  5028               	movf	_i2c_object,w,c
  3650  001146  182A               	xorwf	_i2c_object+2,w,c
  3651  001148  E10C               	bnz	l2633
  3652  00114A  5029               	movf	_i2c_object+1,w,c
  3653  00114C  182B               	xorwf	_i2c_object+3,w,c
  3654  00114E  A4D8               	btfss	status,2,c
  3655  001150  D008               	goto	l2633
  3656                           
  3657                           ;i2c.c: 668: {
  3658                           ;i2c.c: 670: i2c_object.trStatus.s.full = 1;
  3659  001152  802C               	bsf	_i2c_object+4,0,c
  3660                           
  3661                           ;i2c.c: 671: }
  3662                           ;i2c.c: 673: }
  3663  001154  D006               	goto	l2633
  3664  001156                     l2631:
  3665                           
  3666                           ;i2c.c: 674: else
  3667                           ;i2c.c: 675: {
  3668                           ;i2c.c: 676: *pflag = I2C_MESSAGE_FAIL;
  3669  001156  C016  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  3670  00115A  C017  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  3671  00115E  0E01               	movlw	1
  3672  001160  6EDF               	movwf	indf2,c
  3673  001162                     l2633:
  3674                           
  3675                           ;i2c.c: 677: }
  3676                           ;i2c.c: 680: if (*pflag == I2C_MESSAGE_PENDING)
  3677  001162  C016  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  3678  001166  C017  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  3679  00116A  0E02               	movlw	2
  3680  00116C  18DE               	xorwf	postinc2,w,c
  3681  00116E  A4D8               	btfss	status,2,c
  3682  001170  0012               	return	
  3683  001172                     l2637:
  3684  001172  503C               	movf	_i2c_state,w,c
  3685  001174  A4D8               	btfss	status,2,c
  3686  001176  D7FD               	goto	l2637
  3687                           
  3688                           ;i2c.c: 683: {
  3689                           ;i2c.c: 686: PIR1bits.SSPIF = 1;
  3690  001178  869E               	bsf	3998,3,c	;volatile
  3691  00117A  0012               	return	
  3692  00117C                     __end_of_I2C_MasterTRBInsert:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           intcon	equ	0xFF2
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           indf2	equ	0xFDF
  3699                           postinc2	equ	0xFDE
  3700                           postdec2	equ	0xFDD
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705 ;; *************** function _I2C_MasterReadTRBBuild *****************
  3706 ;; Defined at:
  3707 ;;		line 692 in file "mcc_generated_files/i2c.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  ptrb            2   19[COMRAM] PTR struct .
  3710 ;;		 -> I2C_MasterRead@trBlock(5), 
  3711 ;;  pdata           2   21[COMRAM] PTR unsigned char 
  3712 ;;		 -> main@linear_accel_z_MSB(1), main@linear_accel_z_LSB(1), main@linear_accel_y_MSB(1), main@linear_accel_y_LSB(1), 
  3713 ;;		 -> main@linear_accel_x_MSB(1), main@linear_accel_x_LSB(1), BNO055_Initialize@id(1), 
  3714 ;;  length          1   23[COMRAM] unsigned char 
  3715 ;;  address         2   24[COMRAM] unsigned int 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3727 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;Total ram usage:        9 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    3
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_I2C_MasterRead
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text21
  3742  0011E2                     __ptext21:
  3743                           	opt stack 0
  3744  0011E2                     _I2C_MasterReadTRBBuild:
  3745                           	opt stack 24
  3746                           
  3747                           ;i2c.c: 698: ptrb->address = address << 1;
  3748                           
  3749                           ;incstack = 0
  3750  0011E2  C019  F01B         	movff	I2C_MasterReadTRBBuild@address,??_I2C_MasterReadTRBBuild
  3751  0011E6  C01A  F01C         	movff	I2C_MasterReadTRBBuild@address+1,??_I2C_MasterReadTRBBuild+1
  3752  0011EA  90D8               	bcf	status,0,c
  3753  0011EC  361B               	rlcf	??_I2C_MasterReadTRBBuild,f,c
  3754  0011EE  361C               	rlcf	??_I2C_MasterReadTRBBuild+1,f,c
  3755  0011F0  C014  FFD9         	movff	I2C_MasterReadTRBBuild@ptrb,fsr2l
  3756  0011F4  C015  FFDA         	movff	I2C_MasterReadTRBBuild@ptrb+1,fsr2h
  3757  0011F8  C01B  FFDE         	movff	??_I2C_MasterReadTRBBuild,postinc2
  3758  0011FC  C01C  FFDD         	movff	??_I2C_MasterReadTRBBuild+1,postdec2
  3759                           
  3760                           ;i2c.c: 700: ptrb->address |= 0x01;
  3761  001200  C014  FFD9         	movff	I2C_MasterReadTRBBuild@ptrb,fsr2l
  3762  001204  C015  FFDA         	movff	I2C_MasterReadTRBBuild@ptrb+1,fsr2h
  3763  001208  0E00               	movlw	0
  3764  00120A  80DB               	bsf	plusw2,0,c
  3765                           
  3766                           ;i2c.c: 701: ptrb->length = length;
  3767  00120C  EE20 F002          	lfsr	2,2
  3768  001210  5014               	movf	I2C_MasterReadTRBBuild@ptrb,w,c
  3769  001212  26D9               	addwf	fsr2l,f,c
  3770  001214  5015               	movf	I2C_MasterReadTRBBuild@ptrb+1,w,c
  3771  001216  22DA               	addwfc	fsr2h,f,c
  3772  001218  C018  FFDF         	movff	I2C_MasterReadTRBBuild@length,indf2
  3773                           
  3774                           ;i2c.c: 702: ptrb->pbuffer = pdata;
  3775  00121C  EE20 F003          	lfsr	2,3
  3776  001220  5014               	movf	I2C_MasterReadTRBBuild@ptrb,w,c
  3777  001222  26D9               	addwf	fsr2l,f,c
  3778  001224  5015               	movf	I2C_MasterReadTRBBuild@ptrb+1,w,c
  3779  001226  22DA               	addwfc	fsr2h,f,c
  3780  001228  C016  FFDE         	movff	I2C_MasterReadTRBBuild@pdata,postinc2
  3781  00122C  C017  FFDD         	movff	I2C_MasterReadTRBBuild@pdata+1,postdec2
  3782  001230  0012               	return		;funcret
  3783  001232                     __end_of_I2C_MasterReadTRBBuild:
  3784                           	opt stack 0
  3785                           tblptru	equ	0xFF8
  3786                           intcon	equ	0xFF2
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           indf2	equ	0xFDF
  3790                           postinc2	equ	0xFDE
  3791                           postdec2	equ	0xFDD
  3792                           plusw2	equ	0xFDB
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function _ADC_Initialize *****************
  3798 ;; Defined at:
  3799 ;;		line 58 in file "mcc_generated_files/adc.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3817 ;;Total ram usage:        0 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    3
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_SYSTEM_Initialize
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text22
  3828  0014F4                     __ptext22:
  3829                           	opt stack 0
  3830  0014F4                     _ADC_Initialize:
  3831                           	opt stack 26
  3832                           
  3833                           ;adc.c: 63: ADCON0 = 0x01;
  3834                           
  3835                           ;incstack = 0
  3836  0014F4  0E01               	movlw	1
  3837  0014F6  6EC2               	movwf	4034,c	;volatile
  3838                           
  3839                           ;adc.c: 66: ADCON1 = 0x98;
  3840  0014F8  0E98               	movlw	152
  3841  0014FA  6EC1               	movwf	4033,c	;volatile
  3842                           
  3843                           ;adc.c: 69: ADCON2 = 0x8E;
  3844  0014FC  0E8E               	movlw	142
  3845  0014FE  6EC0               	movwf	4032,c	;volatile
  3846                           
  3847                           ;adc.c: 72: ADRESH = 0x00;
  3848  001500  0E00               	movlw	0
  3849  001502  6EC4               	movwf	4036,c	;volatile
  3850                           
  3851                           ;adc.c: 75: ADRESL = 0x00;
  3852  001504  0E00               	movlw	0
  3853  001506  6EC3               	movwf	4035,c	;volatile
  3854  001508  0012               	return		;funcret
  3855  00150A                     __end_of_ADC_Initialize:
  3856                           	opt stack 0
  3857                           tblptru	equ	0xFF8
  3858                           intcon	equ	0xFF2
  3859                           postinc0	equ	0xFEE
  3860                           wreg	equ	0xFE8
  3861                           indf2	equ	0xFDF
  3862                           postinc2	equ	0xFDE
  3863                           postdec2	equ	0xFDD
  3864                           plusw2	equ	0xFDB
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function _CAN_transmit *****************
  3870 ;; Defined at:
  3871 ;;		line 167 in file "mcc_generated_files/ecan.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  tempCanMsg      2   37[COMRAM] PTR struct .
  3874 ;;		 -> main@G_sensor_data(14), main@test(14), 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  tempSIDL        1    4[BANK0 ] unsigned char 
  3877 ;;  tempSIDH        1    3[BANK0 ] unsigned char 
  3878 ;;  tempEIDL        1    2[BANK0 ] unsigned char 
  3879 ;;  tempEIDH        1    1[BANK0 ] unsigned char 
  3880 ;;  returnValue     1    0[BANK0 ] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      unsigned char 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;Total ram usage:        7 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    4
  3897 ;; This function calls:
  3898 ;;		_convertCANid2Reg
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text23
  3905  0000BE                     __ptext23:
  3906                           	opt stack 0
  3907  0000BE                     _CAN_transmit:
  3908                           	opt stack 26
  3909                           
  3910                           ;ecan.c: 168: unsigned char tempEIDH = 0;
  3911                           
  3912                           ;incstack = 0
  3913  0000BE  0E00               	movlw	0
  3914  0000C0  0100               	movlb	0	; () banked
  3915  0000C2  6F61               	movwf	CAN_transmit@tempEIDH& (0+255),b
  3916                           
  3917                           ;ecan.c: 169: unsigned char tempEIDL = 0;
  3918  0000C4  0E00               	movlw	0
  3919  0000C6  0100               	movlb	0	; () banked
  3920  0000C8  6F62               	movwf	CAN_transmit@tempEIDL& (0+255),b
  3921                           
  3922                           ;ecan.c: 170: unsigned char tempSIDH = 0;
  3923  0000CA  0E00               	movlw	0
  3924  0000CC  0100               	movlb	0	; () banked
  3925  0000CE  6F63               	movwf	CAN_transmit@tempSIDH& (0+255),b
  3926                           
  3927                           ;ecan.c: 171: unsigned char tempSIDL = 0;
  3928  0000D0  0E00               	movlw	0
  3929  0000D2  0100               	movlb	0	; () banked
  3930  0000D4  6F64               	movwf	CAN_transmit@tempSIDL& (0+255),b
  3931                           
  3932                           ;ecan.c: 173: unsigned char returnValue = 0;
  3933  0000D6  0E00               	movlw	0
  3934  0000D8  0100               	movlb	0	; () banked
  3935  0000DA  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;ecan.c: 175: if (TXB0CONbits.TXREQ != 1) {
  3939  0000DC  010F               	movlb	15	; () banked
  3940  0000DE  B720               	btfsc	32,3,b	;volatile
  3941  0000E0  D085               	goto	l321
  3942                           
  3943                           ; BSR set to: 15
  3944                           ;ecan.c: 177: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  3945  0000E2  EE20 F001          	lfsr	2,1
  3946  0000E6  5026               	movf	CAN_transmit@tempCanMsg,w,c
  3947  0000E8  26D9               	addwf	fsr2l,f,c
  3948  0000EA  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  3949  0000EC  22DA               	addwfc	fsr2h,f,c
  3950  0000EE  CFDE F014          	movff	postinc2,convertCANid2Reg@tempPassedInID
  3951  0000F2  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  3952  0000F6  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  3953  0000FA  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  3954  0000FE  C026  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  3955  000102  C027  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  3956  000106  50DF               	movf	indf2,w,c
  3957  000108  6E18               	movwf	convertCANid2Reg@canIdType,c
  3958  00010A  0E61               	movlw	low CAN_transmit@tempEIDH
  3959  00010C  6E19               	movwf	convertCANid2Reg@passedInEIDH,c
  3960  00010E  0E00               	movlw	high CAN_transmit@tempEIDH
  3961  000110  6E1A               	movwf	convertCANid2Reg@passedInEIDH+1,c
  3962  000112  0E62               	movlw	low CAN_transmit@tempEIDL
  3963  000114  6E1B               	movwf	convertCANid2Reg@passedInEIDL,c
  3964  000116  0E00               	movlw	high CAN_transmit@tempEIDL
  3965  000118  6E1C               	movwf	convertCANid2Reg@passedInEIDL+1,c
  3966  00011A  0E63               	movlw	low CAN_transmit@tempSIDH
  3967  00011C  6E1D               	movwf	convertCANid2Reg@passedInSIDH,c
  3968  00011E  0E00               	movlw	high CAN_transmit@tempSIDH
  3969  000120  6E1E               	movwf	convertCANid2Reg@passedInSIDH+1,c
  3970  000122  0E64               	movlw	low CAN_transmit@tempSIDL
  3971  000124  6E1F               	movwf	convertCANid2Reg@passedInSIDL,c
  3972  000126  0E00               	movlw	high CAN_transmit@tempSIDL
  3973  000128  6E20               	movwf	convertCANid2Reg@passedInSIDL+1,c
  3974  00012A  EC63  F004         	call	_convertCANid2Reg	;wreg free
  3975                           
  3976                           ;ecan.c: 179: TXB0EIDH = tempEIDH;
  3977  00012E  C061  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  3978                           
  3979                           ;ecan.c: 180: TXB0EIDL = tempEIDL;
  3980  000132  C062  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  3981                           
  3982                           ;ecan.c: 181: TXB0SIDH = tempSIDH;
  3983  000136  C063  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  3984                           
  3985                           ;ecan.c: 182: TXB0SIDL = tempSIDL;
  3986  00013A  C064  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  3987                           
  3988                           ;ecan.c: 183: TXB0DLC = tempCanMsg->frame.dlc;
  3989  00013E  EE20 F005          	lfsr	2,5
  3990  000142  5026               	movf	CAN_transmit@tempCanMsg,w,c
  3991  000144  26D9               	addwf	fsr2l,f,c
  3992  000146  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  3993  000148  22DA               	addwfc	fsr2h,f,c
  3994  00014A  50DF               	movf	indf2,w,c
  3995  00014C  010F               	movlb	15	; () banked
  3996  00014E  6F25               	movwf	37,b	;volatile
  3997                           
  3998                           ; BSR set to: 15
  3999                           ;ecan.c: 184: TXB0D0 = tempCanMsg->frame.data0;
  4000  000150  EE20 F006          	lfsr	2,6
  4001  000154  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4002  000156  26D9               	addwf	fsr2l,f,c
  4003  000158  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4004  00015A  22DA               	addwfc	fsr2h,f,c
  4005  00015C  50DF               	movf	indf2,w,c
  4006  00015E  010F               	movlb	15	; () banked
  4007  000160  6F26               	movwf	38,b	;volatile
  4008                           
  4009                           ; BSR set to: 15
  4010                           ;ecan.c: 185: TXB0D1 = tempCanMsg->frame.data1;
  4011  000162  EE20 F007          	lfsr	2,7
  4012  000166  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4013  000168  26D9               	addwf	fsr2l,f,c
  4014  00016A  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4015  00016C  22DA               	addwfc	fsr2h,f,c
  4016  00016E  50DF               	movf	indf2,w,c
  4017  000170  010F               	movlb	15	; () banked
  4018  000172  6F27               	movwf	39,b	;volatile
  4019                           
  4020                           ; BSR set to: 15
  4021                           ;ecan.c: 186: TXB0D2 = tempCanMsg->frame.data2;
  4022  000174  EE20 F008          	lfsr	2,8
  4023  000178  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4024  00017A  26D9               	addwf	fsr2l,f,c
  4025  00017C  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4026  00017E  22DA               	addwfc	fsr2h,f,c
  4027  000180  50DF               	movf	indf2,w,c
  4028  000182  010F               	movlb	15	; () banked
  4029  000184  6F28               	movwf	40,b	;volatile
  4030                           
  4031                           ; BSR set to: 15
  4032                           ;ecan.c: 187: TXB0D3 = tempCanMsg->frame.data3;
  4033  000186  EE20 F009          	lfsr	2,9
  4034  00018A  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4035  00018C  26D9               	addwf	fsr2l,f,c
  4036  00018E  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4037  000190  22DA               	addwfc	fsr2h,f,c
  4038  000192  50DF               	movf	indf2,w,c
  4039  000194  010F               	movlb	15	; () banked
  4040  000196  6F29               	movwf	41,b	;volatile
  4041                           
  4042                           ; BSR set to: 15
  4043                           ;ecan.c: 188: TXB0D4 = tempCanMsg->frame.data4;
  4044  000198  EE20 F00A          	lfsr	2,10
  4045  00019C  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4046  00019E  26D9               	addwf	fsr2l,f,c
  4047  0001A0  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4048  0001A2  22DA               	addwfc	fsr2h,f,c
  4049  0001A4  50DF               	movf	indf2,w,c
  4050  0001A6  010F               	movlb	15	; () banked
  4051  0001A8  6F2A               	movwf	42,b	;volatile
  4052                           
  4053                           ; BSR set to: 15
  4054                           ;ecan.c: 189: TXB0D5 = tempCanMsg->frame.data5;
  4055  0001AA  EE20 F00B          	lfsr	2,11
  4056  0001AE  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4057  0001B0  26D9               	addwf	fsr2l,f,c
  4058  0001B2  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4059  0001B4  22DA               	addwfc	fsr2h,f,c
  4060  0001B6  50DF               	movf	indf2,w,c
  4061  0001B8  010F               	movlb	15	; () banked
  4062  0001BA  6F2B               	movwf	43,b	;volatile
  4063                           
  4064                           ; BSR set to: 15
  4065                           ;ecan.c: 190: TXB0D6 = tempCanMsg->frame.data6;
  4066  0001BC  EE20 F00C          	lfsr	2,12
  4067  0001C0  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4068  0001C2  26D9               	addwf	fsr2l,f,c
  4069  0001C4  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4070  0001C6  22DA               	addwfc	fsr2h,f,c
  4071  0001C8  50DF               	movf	indf2,w,c
  4072  0001CA  010F               	movlb	15	; () banked
  4073  0001CC  6F2C               	movwf	44,b	;volatile
  4074                           
  4075                           ; BSR set to: 15
  4076                           ;ecan.c: 191: TXB0D7 = tempCanMsg->frame.data7;
  4077  0001CE  EE20 F00D          	lfsr	2,13
  4078  0001D2  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4079  0001D4  26D9               	addwf	fsr2l,f,c
  4080  0001D6  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4081  0001D8  22DA               	addwfc	fsr2h,f,c
  4082  0001DA  50DF               	movf	indf2,w,c
  4083  0001DC  010F               	movlb	15	; () banked
  4084  0001DE  6F2D               	movwf	45,b	;volatile
  4085                           
  4086                           ; BSR set to: 15
  4087                           ;ecan.c: 193: TXB0CONbits.TXREQ = 1;
  4088  0001E0  010F               	movlb	15	; () banked
  4089  0001E2  8720               	bsf	32,3,b	;volatile
  4090                           
  4091                           ; BSR set to: 15
  4092                           ;ecan.c: 194: returnValue = 1;
  4093  0001E4  0E01               	movlw	1
  4094  0001E6  0100               	movlb	0	; () banked
  4095  0001E8  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  4096                           
  4097                           ;ecan.c: 195: } else if (TXB1CONbits.TXREQ != 1) {
  4098  0001EA  0012               	return	
  4099  0001EC                     l321:
  4100                           
  4101                           ; BSR set to: 15
  4102  0001EC  010F               	movlb	15	; () banked
  4103  0001EE  B710               	btfsc	16,3,b	;volatile
  4104  0001F0  D085               	goto	l323
  4105                           
  4106                           ; BSR set to: 15
  4107                           ;ecan.c: 197: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  4108  0001F2  EE20 F001          	lfsr	2,1
  4109  0001F6  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4110  0001F8  26D9               	addwf	fsr2l,f,c
  4111  0001FA  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4112  0001FC  22DA               	addwfc	fsr2h,f,c
  4113  0001FE  CFDE F014          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4114  000202  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4115  000206  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4116  00020A  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4117  00020E  C026  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4118  000212  C027  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4119  000216  50DF               	movf	indf2,w,c
  4120  000218  6E18               	movwf	convertCANid2Reg@canIdType,c
  4121  00021A  0E61               	movlw	low CAN_transmit@tempEIDH
  4122  00021C  6E19               	movwf	convertCANid2Reg@passedInEIDH,c
  4123  00021E  0E00               	movlw	high CAN_transmit@tempEIDH
  4124  000220  6E1A               	movwf	convertCANid2Reg@passedInEIDH+1,c
  4125  000222  0E62               	movlw	low CAN_transmit@tempEIDL
  4126  000224  6E1B               	movwf	convertCANid2Reg@passedInEIDL,c
  4127  000226  0E00               	movlw	high CAN_transmit@tempEIDL
  4128  000228  6E1C               	movwf	convertCANid2Reg@passedInEIDL+1,c
  4129  00022A  0E63               	movlw	low CAN_transmit@tempSIDH
  4130  00022C  6E1D               	movwf	convertCANid2Reg@passedInSIDH,c
  4131  00022E  0E00               	movlw	high CAN_transmit@tempSIDH
  4132  000230  6E1E               	movwf	convertCANid2Reg@passedInSIDH+1,c
  4133  000232  0E64               	movlw	low CAN_transmit@tempSIDL
  4134  000234  6E1F               	movwf	convertCANid2Reg@passedInSIDL,c
  4135  000236  0E00               	movlw	high CAN_transmit@tempSIDL
  4136  000238  6E20               	movwf	convertCANid2Reg@passedInSIDL+1,c
  4137  00023A  EC63  F004         	call	_convertCANid2Reg	;wreg free
  4138                           
  4139                           ;ecan.c: 199: TXB1EIDH = tempEIDH;
  4140  00023E  C061  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  4141                           
  4142                           ;ecan.c: 200: TXB1EIDL = tempEIDL;
  4143  000242  C062  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  4144                           
  4145                           ;ecan.c: 201: TXB1SIDH = tempSIDH;
  4146  000246  C063  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  4147                           
  4148                           ;ecan.c: 202: TXB1SIDL = tempSIDL;
  4149  00024A  C064  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  4150                           
  4151                           ;ecan.c: 203: TXB1DLC = tempCanMsg->frame.dlc;
  4152  00024E  EE20 F005          	lfsr	2,5
  4153  000252  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4154  000254  26D9               	addwf	fsr2l,f,c
  4155  000256  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4156  000258  22DA               	addwfc	fsr2h,f,c
  4157  00025A  50DF               	movf	indf2,w,c
  4158  00025C  010F               	movlb	15	; () banked
  4159  00025E  6F15               	movwf	21,b	;volatile
  4160                           
  4161                           ; BSR set to: 15
  4162                           ;ecan.c: 204: TXB1D0 = tempCanMsg->frame.data0;
  4163  000260  EE20 F006          	lfsr	2,6
  4164  000264  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4165  000266  26D9               	addwf	fsr2l,f,c
  4166  000268  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4167  00026A  22DA               	addwfc	fsr2h,f,c
  4168  00026C  50DF               	movf	indf2,w,c
  4169  00026E  010F               	movlb	15	; () banked
  4170  000270  6F16               	movwf	22,b	;volatile
  4171                           
  4172                           ; BSR set to: 15
  4173                           ;ecan.c: 205: TXB1D1 = tempCanMsg->frame.data1;
  4174  000272  EE20 F007          	lfsr	2,7
  4175  000276  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4176  000278  26D9               	addwf	fsr2l,f,c
  4177  00027A  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4178  00027C  22DA               	addwfc	fsr2h,f,c
  4179  00027E  50DF               	movf	indf2,w,c
  4180  000280  010F               	movlb	15	; () banked
  4181  000282  6F17               	movwf	23,b	;volatile
  4182                           
  4183                           ; BSR set to: 15
  4184                           ;ecan.c: 206: TXB1D2 = tempCanMsg->frame.data2;
  4185  000284  EE20 F008          	lfsr	2,8
  4186  000288  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4187  00028A  26D9               	addwf	fsr2l,f,c
  4188  00028C  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4189  00028E  22DA               	addwfc	fsr2h,f,c
  4190  000290  50DF               	movf	indf2,w,c
  4191  000292  010F               	movlb	15	; () banked
  4192  000294  6F18               	movwf	24,b	;volatile
  4193                           
  4194                           ; BSR set to: 15
  4195                           ;ecan.c: 207: TXB1D3 = tempCanMsg->frame.data3;
  4196  000296  EE20 F009          	lfsr	2,9
  4197  00029A  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4198  00029C  26D9               	addwf	fsr2l,f,c
  4199  00029E  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4200  0002A0  22DA               	addwfc	fsr2h,f,c
  4201  0002A2  50DF               	movf	indf2,w,c
  4202  0002A4  010F               	movlb	15	; () banked
  4203  0002A6  6F19               	movwf	25,b	;volatile
  4204                           
  4205                           ; BSR set to: 15
  4206                           ;ecan.c: 208: TXB1D4 = tempCanMsg->frame.data4;
  4207  0002A8  EE20 F00A          	lfsr	2,10
  4208  0002AC  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4209  0002AE  26D9               	addwf	fsr2l,f,c
  4210  0002B0  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4211  0002B2  22DA               	addwfc	fsr2h,f,c
  4212  0002B4  50DF               	movf	indf2,w,c
  4213  0002B6  010F               	movlb	15	; () banked
  4214  0002B8  6F1A               	movwf	26,b	;volatile
  4215                           
  4216                           ; BSR set to: 15
  4217                           ;ecan.c: 209: TXB1D5 = tempCanMsg->frame.data5;
  4218  0002BA  EE20 F00B          	lfsr	2,11
  4219  0002BE  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4220  0002C0  26D9               	addwf	fsr2l,f,c
  4221  0002C2  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4222  0002C4  22DA               	addwfc	fsr2h,f,c
  4223  0002C6  50DF               	movf	indf2,w,c
  4224  0002C8  010F               	movlb	15	; () banked
  4225  0002CA  6F1B               	movwf	27,b	;volatile
  4226                           
  4227                           ; BSR set to: 15
  4228                           ;ecan.c: 210: TXB1D6 = tempCanMsg->frame.data6;
  4229  0002CC  EE20 F00C          	lfsr	2,12
  4230  0002D0  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4231  0002D2  26D9               	addwf	fsr2l,f,c
  4232  0002D4  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4233  0002D6  22DA               	addwfc	fsr2h,f,c
  4234  0002D8  50DF               	movf	indf2,w,c
  4235  0002DA  010F               	movlb	15	; () banked
  4236  0002DC  6F1C               	movwf	28,b	;volatile
  4237                           
  4238                           ; BSR set to: 15
  4239                           ;ecan.c: 211: TXB1D7 = tempCanMsg->frame.data7;
  4240  0002DE  EE20 F00D          	lfsr	2,13
  4241  0002E2  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4242  0002E4  26D9               	addwf	fsr2l,f,c
  4243  0002E6  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4244  0002E8  22DA               	addwfc	fsr2h,f,c
  4245  0002EA  50DF               	movf	indf2,w,c
  4246  0002EC  010F               	movlb	15	; () banked
  4247  0002EE  6F1D               	movwf	29,b	;volatile
  4248                           
  4249                           ; BSR set to: 15
  4250                           ;ecan.c: 213: TXB1CONbits.TXREQ = 1;
  4251  0002F0  010F               	movlb	15	; () banked
  4252  0002F2  8710               	bsf	16,3,b	;volatile
  4253                           
  4254                           ; BSR set to: 15
  4255                           ;ecan.c: 214: returnValue = 1;
  4256  0002F4  0E01               	movlw	1
  4257  0002F6  0100               	movlb	0	; () banked
  4258  0002F8  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  4259                           
  4260                           ;ecan.c: 215: } else if (TXB2CONbits.TXREQ != 1) {
  4261  0002FA  0012               	return	
  4262  0002FC                     l323:
  4263                           
  4264                           ; BSR set to: 15
  4265  0002FC  010F               	movlb	15	; () banked
  4266  0002FE  B700               	btfsc	0,3,b	;volatile
  4267  000300  0012               	return	
  4268                           
  4269                           ; BSR set to: 15
  4270                           ;ecan.c: 217: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  4271  000302  EE20 F001          	lfsr	2,1
  4272  000306  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4273  000308  26D9               	addwf	fsr2l,f,c
  4274  00030A  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4275  00030C  22DA               	addwfc	fsr2h,f,c
  4276  00030E  CFDE F014          	movff	postinc2,convertCANid2Reg@tempPassedInID
  4277  000312  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  4278  000316  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  4279  00031A  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  4280  00031E  C026  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  4281  000322  C027  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  4282  000326  50DF               	movf	indf2,w,c
  4283  000328  6E18               	movwf	convertCANid2Reg@canIdType,c
  4284  00032A  0E61               	movlw	low CAN_transmit@tempEIDH
  4285  00032C  6E19               	movwf	convertCANid2Reg@passedInEIDH,c
  4286  00032E  0E00               	movlw	high CAN_transmit@tempEIDH
  4287  000330  6E1A               	movwf	convertCANid2Reg@passedInEIDH+1,c
  4288  000332  0E62               	movlw	low CAN_transmit@tempEIDL
  4289  000334  6E1B               	movwf	convertCANid2Reg@passedInEIDL,c
  4290  000336  0E00               	movlw	high CAN_transmit@tempEIDL
  4291  000338  6E1C               	movwf	convertCANid2Reg@passedInEIDL+1,c
  4292  00033A  0E63               	movlw	low CAN_transmit@tempSIDH
  4293  00033C  6E1D               	movwf	convertCANid2Reg@passedInSIDH,c
  4294  00033E  0E00               	movlw	high CAN_transmit@tempSIDH
  4295  000340  6E1E               	movwf	convertCANid2Reg@passedInSIDH+1,c
  4296  000342  0E64               	movlw	low CAN_transmit@tempSIDL
  4297  000344  6E1F               	movwf	convertCANid2Reg@passedInSIDL,c
  4298  000346  0E00               	movlw	high CAN_transmit@tempSIDL
  4299  000348  6E20               	movwf	convertCANid2Reg@passedInSIDL+1,c
  4300  00034A  EC63  F004         	call	_convertCANid2Reg	;wreg free
  4301                           
  4302                           ;ecan.c: 219: TXB2EIDH = tempEIDH;
  4303  00034E  C061  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  4304                           
  4305                           ;ecan.c: 220: TXB2EIDL = tempEIDL;
  4306  000352  C062  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  4307                           
  4308                           ;ecan.c: 221: TXB2SIDH = tempSIDH;
  4309  000356  C063  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  4310                           
  4311                           ;ecan.c: 222: TXB2SIDL = tempSIDL;
  4312  00035A  C064  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  4313                           
  4314                           ;ecan.c: 223: TXB2DLC = tempCanMsg->frame.dlc;
  4315  00035E  EE20 F005          	lfsr	2,5
  4316  000362  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4317  000364  26D9               	addwf	fsr2l,f,c
  4318  000366  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4319  000368  22DA               	addwfc	fsr2h,f,c
  4320  00036A  50DF               	movf	indf2,w,c
  4321  00036C  010F               	movlb	15	; () banked
  4322  00036E  6F05               	movwf	5,b	;volatile
  4323                           
  4324                           ; BSR set to: 15
  4325                           ;ecan.c: 224: TXB2D0 = tempCanMsg->frame.data0;
  4326  000370  EE20 F006          	lfsr	2,6
  4327  000374  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4328  000376  26D9               	addwf	fsr2l,f,c
  4329  000378  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4330  00037A  22DA               	addwfc	fsr2h,f,c
  4331  00037C  50DF               	movf	indf2,w,c
  4332  00037E  010F               	movlb	15	; () banked
  4333  000380  6F06               	movwf	6,b	;volatile
  4334                           
  4335                           ; BSR set to: 15
  4336                           ;ecan.c: 225: TXB2D1 = tempCanMsg->frame.data1;
  4337  000382  EE20 F007          	lfsr	2,7
  4338  000386  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4339  000388  26D9               	addwf	fsr2l,f,c
  4340  00038A  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4341  00038C  22DA               	addwfc	fsr2h,f,c
  4342  00038E  50DF               	movf	indf2,w,c
  4343  000390  010F               	movlb	15	; () banked
  4344  000392  6F07               	movwf	7,b	;volatile
  4345                           
  4346                           ; BSR set to: 15
  4347                           ;ecan.c: 226: TXB2D2 = tempCanMsg->frame.data2;
  4348  000394  EE20 F008          	lfsr	2,8
  4349  000398  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4350  00039A  26D9               	addwf	fsr2l,f,c
  4351  00039C  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4352  00039E  22DA               	addwfc	fsr2h,f,c
  4353  0003A0  50DF               	movf	indf2,w,c
  4354  0003A2  010F               	movlb	15	; () banked
  4355  0003A4  6F08               	movwf	8,b	;volatile
  4356                           
  4357                           ; BSR set to: 15
  4358                           ;ecan.c: 227: TXB2D3 = tempCanMsg->frame.data3;
  4359  0003A6  EE20 F009          	lfsr	2,9
  4360  0003AA  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4361  0003AC  26D9               	addwf	fsr2l,f,c
  4362  0003AE  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4363  0003B0  22DA               	addwfc	fsr2h,f,c
  4364  0003B2  50DF               	movf	indf2,w,c
  4365  0003B4  010F               	movlb	15	; () banked
  4366  0003B6  6F09               	movwf	9,b	;volatile
  4367                           
  4368                           ; BSR set to: 15
  4369                           ;ecan.c: 228: TXB2D4 = tempCanMsg->frame.data4;
  4370  0003B8  EE20 F00A          	lfsr	2,10
  4371  0003BC  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4372  0003BE  26D9               	addwf	fsr2l,f,c
  4373  0003C0  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4374  0003C2  22DA               	addwfc	fsr2h,f,c
  4375  0003C4  50DF               	movf	indf2,w,c
  4376  0003C6  010F               	movlb	15	; () banked
  4377  0003C8  6F0A               	movwf	10,b	;volatile
  4378                           
  4379                           ; BSR set to: 15
  4380                           ;ecan.c: 229: TXB2D5 = tempCanMsg->frame.data5;
  4381  0003CA  EE20 F00B          	lfsr	2,11
  4382  0003CE  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4383  0003D0  26D9               	addwf	fsr2l,f,c
  4384  0003D2  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4385  0003D4  22DA               	addwfc	fsr2h,f,c
  4386  0003D6  50DF               	movf	indf2,w,c
  4387  0003D8  010F               	movlb	15	; () banked
  4388  0003DA  6F0B               	movwf	11,b	;volatile
  4389                           
  4390                           ; BSR set to: 15
  4391                           ;ecan.c: 230: TXB2D6 = tempCanMsg->frame.data6;
  4392  0003DC  EE20 F00C          	lfsr	2,12
  4393  0003E0  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4394  0003E2  26D9               	addwf	fsr2l,f,c
  4395  0003E4  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4396  0003E6  22DA               	addwfc	fsr2h,f,c
  4397  0003E8  50DF               	movf	indf2,w,c
  4398  0003EA  010F               	movlb	15	; () banked
  4399  0003EC  6F0C               	movwf	12,b	;volatile
  4400                           
  4401                           ; BSR set to: 15
  4402                           ;ecan.c: 231: TXB2D7 = tempCanMsg->frame.data7;
  4403  0003EE  EE20 F00D          	lfsr	2,13
  4404  0003F2  5026               	movf	CAN_transmit@tempCanMsg,w,c
  4405  0003F4  26D9               	addwf	fsr2l,f,c
  4406  0003F6  5027               	movf	CAN_transmit@tempCanMsg+1,w,c
  4407  0003F8  22DA               	addwfc	fsr2h,f,c
  4408  0003FA  50DF               	movf	indf2,w,c
  4409  0003FC  010F               	movlb	15	; () banked
  4410  0003FE  6F0D               	movwf	13,b	;volatile
  4411                           
  4412                           ; BSR set to: 15
  4413                           ;ecan.c: 233: TXB2CONbits.TXREQ = 1;
  4414  000400  010F               	movlb	15	; () banked
  4415  000402  8700               	bsf	0,3,b	;volatile
  4416                           
  4417                           ; BSR set to: 15
  4418                           ;ecan.c: 234: returnValue = 1;
  4419  000404  0E01               	movlw	1
  4420  000406  0100               	movlb	0	; () banked
  4421  000408  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  4422                           
  4423                           ; BSR set to: 0
  4424                           
  4425                           ; BSR set to: 0
  4426                           
  4427                           ; BSR set to: 0
  4428  00040A  0012               	return	
  4429  00040C                     __end_of_CAN_transmit:
  4430                           	opt stack 0
  4431                           tblptru	equ	0xFF8
  4432                           intcon	equ	0xFF2
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           plusw2	equ	0xFDB
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8
  4442                           
  4443 ;; *************** function _convertCANid2Reg *****************
  4444 ;; Defined at:
  4445 ;;		line 400 in file "mcc_generated_files/ecan.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  tempPassedIn    4   19[COMRAM] unsigned long 
  4448 ;;  canIdType       1   23[COMRAM] unsigned char 
  4449 ;;  passedInEIDH    2   24[COMRAM] PTR unsigned char 
  4450 ;;		 -> CAN_transmit@tempEIDH(1), 
  4451 ;;  passedInEIDL    2   26[COMRAM] PTR unsigned char 
  4452 ;;		 -> CAN_transmit@tempEIDL(1), 
  4453 ;;  passedInSIDH    2   28[COMRAM] PTR unsigned char 
  4454 ;;		 -> CAN_transmit@tempSIDH(1), 
  4455 ;;  passedInSIDL    2   30[COMRAM] PTR unsigned char 
  4456 ;;		 -> CAN_transmit@tempSIDL(1), 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  wipSIDL         1   36[COMRAM] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4468 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4471 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;Total ram usage:       18 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    3
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_CAN_transmit
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text24
  4483  0008C6                     __ptext24:
  4484                           	opt stack 0
  4485  0008C6                     _convertCANid2Reg:
  4486                           	opt stack 26
  4487                           
  4488                           ;ecan.c: 401: unsigned char wipSIDL = 0;
  4489                           
  4490                           ;incstack = 0
  4491  0008C6  0E00               	movlw	0
  4492  0008C8  6E25               	movwf	convertCANid2Reg@wipSIDL,c
  4493                           
  4494                           ;ecan.c: 403: if (canIdType == 2) {
  4495  0008CA  0E02               	movlw	2
  4496  0008CC  1818               	xorwf	convertCANid2Reg@canIdType,w,c
  4497  0008CE  A4D8               	btfss	status,2,c
  4498  0008D0  D081               	goto	l3431
  4499                           
  4500                           ;ecan.c: 406: *passedInEIDL = 0xFF & tempPassedInID;
  4501  0008D2  C01B  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4502  0008D6  C01C  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4503  0008DA  C014  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4504                           
  4505                           ;ecan.c: 407: tempPassedInID = tempPassedInID >> 8;
  4506  0008DE  C014  F021         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4507  0008E2  C015  F022         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4508  0008E6  C016  F023         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4509  0008EA  C017  F024         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4510  0008EE  C022  F021         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4511  0008F2  C023  F022         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4512  0008F6  C024  F023         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4513  0008FA  6A24               	clrf	??_convertCANid2Reg+3,c
  4514  0008FC  C021  F014         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4515  000900  C022  F015         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4516  000904  C023  F016         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4517  000908  C024  F017         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4518                           
  4519                           ;ecan.c: 410: *passedInEIDH = 0xFF & tempPassedInID;
  4520  00090C  C019  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4521  000910  C01A  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4522  000914  C014  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4523                           
  4524                           ;ecan.c: 411: tempPassedInID = tempPassedInID >> 8;
  4525  000918  C014  F021         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4526  00091C  C015  F022         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4527  000920  C016  F023         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4528  000924  C017  F024         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4529  000928  C022  F021         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4530  00092C  C023  F022         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4531  000930  C024  F023         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4532  000934  6A24               	clrf	??_convertCANid2Reg+3,c
  4533  000936  C021  F014         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4534  00093A  C022  F015         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4535  00093E  C023  F016         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4536  000942  C024  F017         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4537                           
  4538                           ;ecan.c: 415: wipSIDL = 0x03 & tempPassedInID;
  4539  000946  5014               	movf	convertCANid2Reg@tempPassedInID,w,c
  4540  000948  0B03               	andlw	3
  4541  00094A  6E25               	movwf	convertCANid2Reg@wipSIDL,c
  4542                           
  4543                           ;ecan.c: 416: tempPassedInID = tempPassedInID << 3;
  4544  00094C  C014  F021         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4545  000950  C015  F022         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4546  000954  C016  F023         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4547  000958  C017  F024         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4548  00095C  0E03               	movlw	3
  4549  00095E                     u2075:
  4550  00095E  90D8               	bcf	status,0,c
  4551  000960  3621               	rlcf	??_convertCANid2Reg,f,c
  4552  000962  3622               	rlcf	??_convertCANid2Reg+1,f,c
  4553  000964  3623               	rlcf	??_convertCANid2Reg+2,f,c
  4554  000966  3624               	rlcf	??_convertCANid2Reg+3,f,c
  4555  000968  2EE8               	decfsz	wreg,f,c
  4556  00096A  D7F9               	goto	u2075
  4557  00096C  C021  F014         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4558  000970  C022  F015         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4559  000974  C023  F016         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4560  000978  C024  F017         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4561                           
  4562                           ;ecan.c: 417: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  4563  00097C  5014               	movf	convertCANid2Reg@tempPassedInID,w,c
  4564  00097E  0BE0               	andlw	224
  4565  000980  2425               	addwf	convertCANid2Reg@wipSIDL,w,c
  4566  000982  6E25               	movwf	convertCANid2Reg@wipSIDL,c
  4567                           
  4568                           ;ecan.c: 418: wipSIDL = wipSIDL + 0x08;
  4569  000984  5025               	movf	convertCANid2Reg@wipSIDL,w,c
  4570  000986  0F08               	addlw	8
  4571  000988  6E25               	movwf	convertCANid2Reg@wipSIDL,c
  4572                           
  4573                           ;ecan.c: 419: *passedInSIDL = 0xEB & wipSIDL;
  4574  00098A  5025               	movf	convertCANid2Reg@wipSIDL,w,c
  4575  00098C  0BEB               	andlw	235
  4576  00098E  C01F  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4577  000992  C020  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4578  000996  6EDF               	movwf	indf2,c
  4579                           
  4580                           ;ecan.c: 422: tempPassedInID = tempPassedInID >> 8;
  4581  000998  C014  F021         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4582  00099C  C015  F022         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4583  0009A0  C016  F023         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4584  0009A4  C017  F024         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4585  0009A8  C022  F021         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4586  0009AC  C023  F022         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4587  0009B0  C024  F023         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4588  0009B4  6A24               	clrf	??_convertCANid2Reg+3,c
  4589  0009B6  C021  F014         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4590  0009BA  C022  F015         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4591  0009BE  C023  F016         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4592  0009C2  C024  F017         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4593                           
  4594                           ;ecan.c: 423: *passedInSIDH = 0xFF & tempPassedInID;
  4595  0009C6  C01D  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  4596  0009CA  C01E  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  4597  0009CE  C014  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4598                           
  4599                           ;ecan.c: 424: } else
  4600  0009D2  0012               	return	
  4601  0009D4                     l3431:
  4602                           
  4603                           ;ecan.c: 425: {
  4604                           ;ecan.c: 426: *passedInEIDH = 0;
  4605  0009D4  C019  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  4606  0009D8  C01A  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  4607  0009DC  0E00               	movlw	0
  4608  0009DE  6EDF               	movwf	indf2,c
  4609                           
  4610                           ;ecan.c: 427: *passedInEIDL = 0;
  4611  0009E0  C01B  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  4612  0009E4  C01C  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  4613  0009E8  0E00               	movlw	0
  4614  0009EA  6EDF               	movwf	indf2,c
  4615                           
  4616                           ;ecan.c: 428: tempPassedInID = tempPassedInID << 5;
  4617  0009EC  C014  F021         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4618  0009F0  C015  F022         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4619  0009F4  C016  F023         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4620  0009F8  C017  F024         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4621  0009FC  0E05               	movlw	5
  4622  0009FE                     u2085:
  4623  0009FE  90D8               	bcf	status,0,c
  4624  000A00  3621               	rlcf	??_convertCANid2Reg,f,c
  4625  000A02  3622               	rlcf	??_convertCANid2Reg+1,f,c
  4626  000A04  3623               	rlcf	??_convertCANid2Reg+2,f,c
  4627  000A06  3624               	rlcf	??_convertCANid2Reg+3,f,c
  4628  000A08  2EE8               	decfsz	wreg,f,c
  4629  000A0A  D7F9               	goto	u2085
  4630  000A0C  C021  F014         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4631  000A10  C022  F015         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4632  000A14  C023  F016         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4633  000A18  C024  F017         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4634                           
  4635                           ;ecan.c: 429: *passedInSIDL = 0xFF & tempPassedInID;
  4636  000A1C  C01F  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  4637  000A20  C020  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  4638  000A24  C014  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4639                           
  4640                           ;ecan.c: 430: tempPassedInID = tempPassedInID >> 8;
  4641  000A28  C014  F021         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  4642  000A2C  C015  F022         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  4643  000A30  C016  F023         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  4644  000A34  C017  F024         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  4645  000A38  C022  F021         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  4646  000A3C  C023  F022         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  4647  000A40  C024  F023         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  4648  000A44  6A24               	clrf	??_convertCANid2Reg+3,c
  4649  000A46  C021  F014         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  4650  000A4A  C022  F015         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  4651  000A4E  C023  F016         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  4652  000A52  C024  F017         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  4653                           
  4654                           ;ecan.c: 431: *passedInSIDH = 0xFF & tempPassedInID;
  4655  000A56  C01D  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  4656  000A5A  C01E  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  4657  000A5E  C014  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  4658  000A62  0012               	return	
  4659  000A64                     __end_of_convertCANid2Reg:
  4660                           	opt stack 0
  4661                           tblptru	equ	0xFF8
  4662                           intcon	equ	0xFF2
  4663                           postinc0	equ	0xFEE
  4664                           wreg	equ	0xFE8
  4665                           indf2	equ	0xFDF
  4666                           postinc2	equ	0xFDE
  4667                           postdec2	equ	0xFDD
  4668                           plusw2	equ	0xFDB
  4669                           fsr2h	equ	0xFDA
  4670                           fsr2l	equ	0xFD9
  4671                           status	equ	0xFD8
  4672                           
  4673 ;; *************** function _ADC_GetConversion *****************
  4674 ;; Defined at:
  4675 ;;		line 104 in file "mcc_generated_files/adc.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  channel         1    wreg     enum E15090
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  channel         1   23[COMRAM] enum E15090
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  2   19[COMRAM] unsigned int 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4693 ;;Total ram usage:        5 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    3
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text25
  4704  0013F8                     __ptext25:
  4705                           	opt stack 0
  4706  0013F8                     _ADC_GetConversion:
  4707                           	opt stack 27
  4708                           
  4709                           ;incstack = 0
  4710                           ;ADC_GetConversion@channel stored from wreg
  4711  0013F8  6E18               	movwf	ADC_GetConversion@channel,c
  4712                           
  4713                           ;adc.c: 107: ADCON0bits.CHS = channel;
  4714  0013FA  C018  F016         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4715  0013FE  4616               	rlncf	??_ADC_GetConversion,f,c
  4716  001400  4616               	rlncf	??_ADC_GetConversion,f,c
  4717  001402  50C2               	movf	4034,w,c	;volatile
  4718  001404  1816               	xorwf	??_ADC_GetConversion,w,c
  4719  001406  0B83               	andlw	-125
  4720  001408  1816               	xorwf	??_ADC_GetConversion,w,c
  4721  00140A  6EC2               	movwf	4034,c	;volatile
  4722                           
  4723                           ;adc.c: 110: ADCON0bits.ADON = 1;
  4724  00140C  80C2               	bsf	4034,0,c	;volatile
  4725                           
  4726                           ;adc.c: 114: ADCON0bits.GO_nDONE = 1;
  4727  00140E  82C2               	bsf	4034,1,c	;volatile
  4728  001410                     l423:
  4729  001410  B2C2               	btfsc	4034,1,c	;volatile
  4730  001412  D7FE               	goto	l423
  4731                           
  4732                           ;adc.c: 119: }
  4733                           ;adc.c: 122: return ((ADRESH << 8) + ADRESL);
  4734  001414  50C4               	movf	4036,w,c	;volatile
  4735  001416  6E17               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  4736  001418  6A16               	clrf	??_ADC_GetConversion& (0+255),c
  4737  00141A  50C3               	movf	4035,w,c	;volatile
  4738  00141C  2416               	addwf	??_ADC_GetConversion,w,c
  4739  00141E  6E14               	movwf	?_ADC_GetConversion,c
  4740  001420  0E00               	movlw	0
  4741  001422  2017               	addwfc	??_ADC_GetConversion+1,w,c
  4742  001424  6E15               	movwf	?_ADC_GetConversion+1,c
  4743  001426  0012               	return	
  4744  001428                     __end_of_ADC_GetConversion:
  4745                           	opt stack 0
  4746                           tblptru	equ	0xFF8
  4747                           intcon	equ	0xFF2
  4748                           postinc0	equ	0xFEE
  4749                           wreg	equ	0xFE8
  4750                           indf2	equ	0xFDF
  4751                           postinc2	equ	0xFDE
  4752                           postdec2	equ	0xFDD
  4753                           plusw2	equ	0xFDB
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function _INTERRUPT_InterruptManager *****************
  4759 ;; Defined at:
  4760 ;;		line 60 in file "mcc_generated_files/interrupt_manager.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4778 ;;Total ram usage:       14 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    2
  4781 ;; This function calls:
  4782 ;;		_CCP2_CaptureISR
  4783 ;;		_I2C_BusCollisionISR
  4784 ;;		_I2C_ISR
  4785 ;;		_TMR1_ISR
  4786 ;; This function is called by:
  4787 ;;		Interrupt level 2
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	intcode
  4792  000008                     __pintcode:
  4793                           	opt stack 0
  4794  000008                     _INTERRUPT_InterruptManager:
  4795                           	opt stack 24
  4796                           
  4797                           ;incstack = 0
  4798  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4799  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  4800  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4801  000012  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4802  000016  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4803  00001A  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4804  00001E  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4805  000022  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4806  000026  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4807  00002A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4808  00002E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4809  000032  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4810  000036  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4811  00003A  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4812  00003E  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4813                           
  4814                           ;interrupt_manager.c: 63: if(INTCONbits.PEIE == 1 && PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  4815  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4816  000044  A6A0               	btfss	4000,3,c	;volatile
  4817  000046  D005               	goto	i2l559
  4818  000048  A6A1               	btfss	4001,3,c	;volatile
  4819  00004A  D003               	goto	i2l559
  4820                           
  4821                           ;interrupt_manager.c: 64: {
  4822                           ;interrupt_manager.c: 65: I2C_BusCollisionISR();
  4823  00004C  EC9A  F00A         	call	_I2C_BusCollisionISR	;wreg free
  4824                           
  4825                           ;interrupt_manager.c: 66: }
  4826  000050  D016               	goto	i2l567
  4827  000052                     i2l559:
  4828                           
  4829                           ;interrupt_manager.c: 67: else if(INTCONbits.PEIE == 1 && PIE1bits.SSPIE == 1 && PIR1bit
      +                          s.SSPIF == 1)
  4830  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4831  000054  A69D               	btfss	3997,3,c	;volatile
  4832  000056  D005               	goto	i2l561
  4833  000058  A69E               	btfss	3998,3,c	;volatile
  4834  00005A  D003               	goto	i2l561
  4835                           
  4836                           ;interrupt_manager.c: 68: {
  4837                           ;interrupt_manager.c: 69: I2C_ISR();
  4838  00005C  EC44  F003         	call	_I2C_ISR	;wreg free
  4839                           
  4840                           ;interrupt_manager.c: 70: }
  4841  000060  D00E               	goto	i2l567
  4842  000062                     i2l561:
  4843                           
  4844                           ;interrupt_manager.c: 71: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  4845  000062  BCF2               	btfsc	intcon,6,c	;volatile
  4846  000064  A09D               	btfss	3997,0,c	;volatile
  4847  000066  D005               	goto	i2l563
  4848  000068  A09E               	btfss	3998,0,c	;volatile
  4849  00006A  D003               	goto	i2l563
  4850                           
  4851                           ;interrupt_manager.c: 72: {
  4852                           ;interrupt_manager.c: 73: TMR1_ISR();
  4853  00006C  EC85  F009         	call	_TMR1_ISR	;wreg free
  4854                           
  4855                           ;interrupt_manager.c: 74: }
  4856  000070  D006               	goto	i2l567
  4857  000072                     i2l563:
  4858                           
  4859                           ;interrupt_manager.c: 75: else if(INTCONbits.PEIE == 1 && PIE3bits.CCP2IE == 1 && PIR3bi
      +                          ts.CCP2IF == 1)
  4860  000072  BCF2               	btfsc	intcon,6,c	;volatile
  4861  000074  A4A3               	btfss	4003,2,c	;volatile
  4862  000076  D003               	goto	i2l567
  4863  000078  B4A4               	btfsc	4004,2,c	;volatile
  4864                           
  4865                           ;interrupt_manager.c: 76: {
  4866                           ;interrupt_manager.c: 77: CCP2_CaptureISR();
  4867  00007A  ECBE  F008         	call	_CCP2_CaptureISR	;wreg free
  4868  00007E                     i2l567:
  4869  00007E  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4870  000082  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4871  000086  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4872  00008A  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4873  00008E  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4874  000092  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4875  000096  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4876  00009A  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4877  00009E  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4878  0000A2  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4879  0000A6  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4880  0000AA  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4881  0000AE  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4882  0000B2  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4883  0000B6  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4884  0000B8  0011               	retfie		f
  4885  0000BA                     __end_of_INTERRUPT_InterruptManager:
  4886                           	opt stack 0
  4887                           pclatu	equ	0xFFB
  4888                           pclath	equ	0xFFA
  4889                           tblptru	equ	0xFF8
  4890                           tblptrh	equ	0xFF7
  4891                           tblptrl	equ	0xFF6
  4892                           tablat	equ	0xFF5
  4893                           prodh	equ	0xFF4
  4894                           prodl	equ	0xFF3
  4895                           intcon	equ	0xFF2
  4896                           postinc0	equ	0xFEE
  4897                           fsr0h	equ	0xFEA
  4898                           fsr0l	equ	0xFE9
  4899                           wreg	equ	0xFE8
  4900                           fsr1h	equ	0xFE2
  4901                           fsr1l	equ	0xFE1
  4902                           indf2	equ	0xFDF
  4903                           postinc2	equ	0xFDE
  4904                           postdec2	equ	0xFDD
  4905                           plusw2	equ	0xFDB
  4906                           fsr2h	equ	0xFDA
  4907                           fsr2l	equ	0xFD9
  4908                           status	equ	0xFD8
  4909                           
  4910 ;; *************** function _TMR1_ISR *****************
  4911 ;; Defined at:
  4912 ;;		line 155 in file "mcc_generated_files/tmr1.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    1
  4933 ;; This function calls:
  4934 ;;		Absolute function
  4935 ;;		_TMR1_DefaultInterruptHandler
  4936 ;; This function is called by:
  4937 ;;		_INTERRUPT_InterruptManager
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text27
  4942  00130A                     __ptext27:
  4943                           	opt stack 0
  4944  00130A                     _TMR1_ISR:
  4945                           	opt stack 24
  4946                           
  4947                           ;tmr1.c: 159: PIR1bits.TMR1IF = 0;
  4948                           
  4949                           ;incstack = 0
  4950  00130A  909E               	bcf	3998,0,c	;volatile
  4951                           
  4952                           ;tmr1.c: 161: TMR1H = (timer1ReloadVal >> 8);
  4953  00130C  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
  4954  00130E  6ECF               	movwf	4047,c	;volatile
  4955                           
  4956                           ;tmr1.c: 162: TMR1L = timer1ReloadVal;
  4957  001310  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4958                           
  4959                           ;tmr1.c: 163: if(timer1ReloadVal != 0xFFFF) timer1ReloadVal++;
  4960  001314  2848               	incf	_timer1ReloadVal,w,c	;volatile
  4961  001316  E103               	bnz	i2u53_40
  4962  001318  2849               	incf	_timer1ReloadVal+1,w,c	;volatile
  4963  00131A  B4D8               	btfsc	status,2,c
  4964  00131C  D003               	goto	i2l2005
  4965  00131E                     i2u53_40:
  4966  00131E  4A48               	infsnz	_timer1ReloadVal,f,c	;volatile
  4967  001320  2A49               	incf	_timer1ReloadVal+1,f,c	;volatile
  4968  001322  D004               	goto	i2l2007
  4969  001324                     i2l2005:
  4970                           
  4971                           ;tmr1.c: 164: else timer1ReloadVal = 0x0;
  4972  001324  0E00               	movlw	0
  4973  001326  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
  4974  001328  0E00               	movlw	0
  4975  00132A  6E48               	movwf	_timer1ReloadVal,c	;volatile
  4976  00132C                     i2l2007:
  4977                           
  4978                           ;tmr1.c: 166: if(TMR1_InterruptHandler)
  4979  00132C  5046               	movf	_TMR1_InterruptHandler,w,c
  4980  00132E  1047               	iorwf	_TMR1_InterruptHandler+1,w,c
  4981  001330  B4D8               	btfsc	status,2,c
  4982  001332  0012               	return	
  4983                           
  4984                           ;tmr1.c: 167: {
  4985                           ;tmr1.c: 168: TMR1_InterruptHandler();
  4986  001334  D801               	call	i2u55_48
  4987  001336  0012               	return	
  4988  001338                     i2u55_48:
  4989  001338  0005               	push	
  4990  00133A  6EFA               	movwf	pclath,c
  4991  00133C  5046               	movf	_TMR1_InterruptHandler,w,c
  4992  00133E  6EFD               	movwf	tosl,c
  4993  001340  5047               	movf	_TMR1_InterruptHandler+1,w,c
  4994  001342  6EFE               	movwf	tosh,c
  4995  001344  50F8               	movf	tblptru,w,c
  4996  001346  6EFF               	movwf	tosu,c
  4997  001348  50FA               	movf	pclath,w,c
  4998  00134A  0012               	return		;indir
  4999  00134C                     __end_of_TMR1_ISR:
  5000                           	opt stack 0
  5001                           tosu	equ	0xFFF
  5002                           tosh	equ	0xFFE
  5003                           tosl	equ	0xFFD
  5004                           pclatu	equ	0xFFB
  5005                           pclath	equ	0xFFA
  5006                           tblptru	equ	0xFF8
  5007                           tblptrh	equ	0xFF7
  5008                           tblptrl	equ	0xFF6
  5009                           tablat	equ	0xFF5
  5010                           prodh	equ	0xFF4
  5011                           prodl	equ	0xFF3
  5012                           intcon	equ	0xFF2
  5013                           postinc0	equ	0xFEE
  5014                           fsr0h	equ	0xFEA
  5015                           fsr0l	equ	0xFE9
  5016                           wreg	equ	0xFE8
  5017                           fsr1h	equ	0xFE2
  5018                           fsr1l	equ	0xFE1
  5019                           indf2	equ	0xFDF
  5020                           postinc2	equ	0xFDE
  5021                           postdec2	equ	0xFDD
  5022                           plusw2	equ	0xFDB
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5028 ;; Defined at:
  5029 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		None
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_TMR1_Initialize
  5053 ;;		_TMR1_ISR
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text28
  5058  001532                     __ptext28:
  5059                           	opt stack 0
  5060  001532                     _TMR1_DefaultInterruptHandler:
  5061                           	opt stack 24
  5062                           
  5063                           ;incstack = 0
  5064  001532  0012               	return		;funcret
  5065  001534                     __end_of_TMR1_DefaultInterruptHandler:
  5066                           	opt stack 0
  5067                           tosu	equ	0xFFF
  5068                           tosh	equ	0xFFE
  5069                           tosl	equ	0xFFD
  5070                           pclatu	equ	0xFFB
  5071                           pclath	equ	0xFFA
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           prodh	equ	0xFF4
  5077                           prodl	equ	0xFF3
  5078                           intcon	equ	0xFF2
  5079                           postinc0	equ	0xFEE
  5080                           fsr0h	equ	0xFEA
  5081                           fsr0l	equ	0xFE9
  5082                           wreg	equ	0xFE8
  5083                           fsr1h	equ	0xFE2
  5084                           fsr1l	equ	0xFE1
  5085                           indf2	equ	0xFDF
  5086                           postinc2	equ	0xFDE
  5087                           postdec2	equ	0xFDD
  5088                           plusw2	equ	0xFDB
  5089                           fsr2h	equ	0xFDA
  5090                           fsr2l	equ	0xFD9
  5091                           status	equ	0xFD8
  5092                           
  5093 ;; *************** function _I2C_ISR *****************
  5094 ;; Defined at:
  5095 ;;		line 231 in file "mcc_generated_files/i2c.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5113 ;;Total ram usage:        2 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    1
  5116 ;; This function calls:
  5117 ;;		_I2C_FunctionComplete
  5118 ;;		_I2C_Stop
  5119 ;; This function is called by:
  5120 ;;		_INTERRUPT_InterruptManager
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text29
  5125  000688                     __ptext29:
  5126                           	opt stack 0
  5127  000688                     _I2C_ISR:
  5128                           	opt stack 24
  5129                           
  5130                           ;i2c.c: 234: static uint8_t *pi2c_buf_ptr;
  5131                           ;i2c.c: 235: static uint16_t i2c_address = 0;
  5132                           ;i2c.c: 236: static uint8_t i2c_bytes_left = 0;
  5133                           ;i2c.c: 237: static uint8_t i2c_10bit_address_restart = 0;
  5134                           ;i2c.c: 239: PIR1bits.SSPIF = 0;
  5135                           
  5136                           ;incstack = 0
  5137  000688  969E               	bcf	3998,3,c	;volatile
  5138                           
  5139                           ;i2c.c: 243: if(SSPCON1bits.WCOL)
  5140  00068A  AEC6               	btfss	4038,7,c	;volatile
  5141  00068C  D0F9               	goto	i2l3135
  5142                           
  5143                           ;i2c.c: 244: {
  5144                           ;i2c.c: 246: SSPCON1bits.WCOL = 0;
  5145  00068E  9EC6               	bcf	4038,7,c	;volatile
  5146                           
  5147                           ;i2c.c: 247: i2c_state = S_MASTER_IDLE;
  5148  000690  0E00               	movlw	0
  5149  000692  6E3C               	movwf	_i2c_state,c
  5150                           
  5151                           ;i2c.c: 248: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  5152  000694  EE20 F003          	lfsr	2,3
  5153  000698  5031               	movf	_p_i2c_current,w,c
  5154  00069A  26D9               	addwf	fsr2l,f,c
  5155  00069C  5032               	movf	_p_i2c_current+1,w,c
  5156  00069E  22DA               	addwfc	fsr2h,f,c
  5157  0006A0  CFDE F004          	movff	postinc2,??_I2C_ISR
  5158  0006A4  CFDD F005          	movff	postdec2,??_I2C_ISR+1
  5159  0006A8  C004  FFD9         	movff	??_I2C_ISR,fsr2l
  5160  0006AC  C005  FFDA         	movff	??_I2C_ISR+1,fsr2h
  5161  0006B0  0E01               	movlw	1
  5162  0006B2  6EDF               	movwf	indf2,c
  5163                           
  5164                           ;i2c.c: 251: p_i2c_current = (0);
  5165  0006B4  0E00               	movlw	0
  5166  0006B6  6E31               	movwf	_p_i2c_current,c
  5167  0006B8  0E00               	movlw	0
  5168  0006BA  6E32               	movwf	_p_i2c_current+1,c
  5169                           
  5170                           ;i2c.c: 253: return;
  5171  0006BC  0012               	return	
  5172  0006BE                     i2l689:
  5173                           
  5174                           ;i2c.c: 261: if(i2c_object.trStatus.s.empty != 1)
  5175  0006BE  B22C               	btfsc	_i2c_object+4,1,c
  5176  0006C0  0012               	return	
  5177                           
  5178                           ;i2c.c: 262: {
  5179                           ;i2c.c: 264: p_i2c_current = i2c_object.pTrHead;
  5180  0006C2  C02A  F031         	movff	_i2c_object+2,_p_i2c_current
  5181  0006C6  C02B  F032         	movff	_i2c_object+3,_p_i2c_current+1
  5182                           
  5183                           ;i2c.c: 265: i2c_trb_count = i2c_object.pTrHead->count;
  5184  0006CA  C02A  FFD9         	movff	_i2c_object+2,fsr2l
  5185  0006CE  C02B  FFDA         	movff	_i2c_object+3,fsr2h
  5186  0006D2  50DF               	movf	indf2,w,c
  5187  0006D4  6E3B               	movwf	_i2c_trb_count,c
  5188                           
  5189                           ;i2c.c: 266: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  5190  0006D6  EE20 F001          	lfsr	2,1
  5191  0006DA  502A               	movf	_i2c_object+2,w,c
  5192  0006DC  26D9               	addwf	fsr2l,f,c
  5193  0006DE  502B               	movf	_i2c_object+3,w,c
  5194  0006E0  22DA               	addwfc	fsr2h,f,c
  5195  0006E2  CFDE F033          	movff	postinc2,_p_i2c_trb_current
  5196  0006E6  CFDD F034          	movff	postdec2,_p_i2c_trb_current+1
  5197                           
  5198                           ;i2c.c: 268: i2c_object.pTrHead++;
  5199  0006EA  0E05               	movlw	5
  5200  0006EC  262A               	addwf	_i2c_object+2,f,c
  5201  0006EE  0E00               	movlw	0
  5202  0006F0  222B               	addwfc	_i2c_object+3,f,c
  5203                           
  5204                           ;i2c.c: 271: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  5205  0006F2  0E44               	movlw	low (_i2c_tr_queue+5)
  5206  0006F4  182A               	xorwf	_i2c_object+2,w,c
  5207  0006F6  E108               	bnz	i2l3027
  5208  0006F8  0E00               	movlw	high (_i2c_tr_queue+5)
  5209  0006FA  182B               	xorwf	_i2c_object+3,w,c
  5210  0006FC  A4D8               	btfss	status,2,c
  5211  0006FE  D004               	goto	i2l3027
  5212                           
  5213                           ;i2c.c: 272: {
  5214                           ;i2c.c: 274: i2c_object.pTrHead = i2c_tr_queue;
  5215  000700  0E3F               	movlw	low _i2c_tr_queue
  5216  000702  6E2A               	movwf	_i2c_object+2,c
  5217  000704  0E00               	movlw	high _i2c_tr_queue
  5218  000706  6E2B               	movwf	_i2c_object+3,c
  5219  000708                     i2l3027:
  5220                           
  5221                           ;i2c.c: 275: }
  5222                           ;i2c.c: 279: i2c_object.trStatus.s.full = 0;
  5223  000708  902C               	bcf	_i2c_object+4,0,c
  5224                           
  5225                           ;i2c.c: 282: if(i2c_object.pTrHead == i2c_object.pTrTail)
  5226  00070A  5028               	movf	_i2c_object,w,c
  5227  00070C  182A               	xorwf	_i2c_object+2,w,c
  5228  00070E  E104               	bnz	i2l692
  5229  000710  5029               	movf	_i2c_object+1,w,c
  5230  000712  182B               	xorwf	_i2c_object+3,w,c
  5231  000714  B4D8               	btfsc	status,2,c
  5232                           
  5233                           ;i2c.c: 283: {
  5234                           ;i2c.c: 285: i2c_object.trStatus.s.empty = 1;
  5235  000716  822C               	bsf	_i2c_object+4,1,c
  5236  000718                     i2l692:
  5237                           
  5238                           ;i2c.c: 286: }
  5239                           ;i2c.c: 289: SSPCON2bits.SEN = 1;
  5240  000718  80C5               	bsf	4037,0,c	;volatile
  5241                           
  5242                           ;i2c.c: 292: i2c_state = S_MASTER_SEND_ADDR;
  5243  00071A  0E02               	movlw	2
  5244  00071C  6E3C               	movwf	_i2c_state,c
  5245                           
  5246                           ;i2c.c: 293: }
  5247                           ;i2c.c: 295: break;
  5248  00071E  0012               	return	
  5249  000720                     i2l694:
  5250                           
  5251                           ;i2c.c: 302: SSPCON2bits.RSEN = 1;
  5252  000720  82C5               	bsf	4037,1,c	;volatile
  5253                           
  5254                           ;i2c.c: 305: i2c_state = S_MASTER_SEND_ADDR;
  5255  000722  0E02               	movlw	2
  5256  000724  6E3C               	movwf	_i2c_state,c
  5257                           
  5258                           ;i2c.c: 307: break;
  5259  000726  0012               	return	
  5260  000728                     i2l695:
  5261                           
  5262                           ;i2c.c: 311: if(SSPCON2bits.ACKSTAT)
  5263  000728  ACC5               	btfss	4037,6,c	;volatile
  5264  00072A  D005               	goto	i2l3039
  5265                           
  5266                           ;i2c.c: 312: {
  5267                           ;i2c.c: 313: i2c_object.i2cErrors++;
  5268  00072C  2A2E               	incf	_i2c_object+6,f,c
  5269                           
  5270                           ;i2c.c: 314: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  5271  00072E  0E04               	movlw	4
  5272  000730  ECA6  F009         	call	_I2C_Stop
  5273                           
  5274                           ;i2c.c: 315: }
  5275  000734  0012               	return	
  5276  000736                     i2l3039:
  5277                           
  5278                           ;i2c.c: 316: else
  5279                           ;i2c.c: 317: {
  5280                           ;i2c.c: 319: SSPBUF = (i2c_address >> 1) & 0x00FF;
  5281  000736  90D8               	bcf	status,0,c
  5282  000738  3045               	rrcf	I2C_ISR@i2c_address+1,w,c
  5283  00073A  6E05               	movwf	(??_I2C_ISR+1)& (0+255),c
  5284  00073C  3044               	rrcf	I2C_ISR@i2c_address,w,c
  5285  00073E  6E04               	movwf	??_I2C_ISR& (0+255),c
  5286  000740  5004               	movf	??_I2C_ISR,w,c
  5287  000742  6EC9               	movwf	4041,c	;volatile
  5288                           
  5289                           ;i2c.c: 322: if(i2c_address & 0x01)
  5290  000744  A044               	btfss	I2C_ISR@i2c_address,0,c
  5291  000746  D003               	goto	i2l3045
  5292                           
  5293                           ;i2c.c: 323: {
  5294                           ;i2c.c: 326: i2c_state = S_MASTER_10BIT_RESTART;
  5295  000748  0E0B               	movlw	11
  5296  00074A  6E3C               	movwf	_i2c_state,c
  5297                           
  5298                           ;i2c.c: 327: }
  5299  00074C  0012               	return	
  5300  00074E                     i2l3045:
  5301                           
  5302                           ;i2c.c: 328: else
  5303                           ;i2c.c: 329: {
  5304                           ;i2c.c: 331: i2c_state = S_MASTER_SEND_DATA;
  5305  00074E  0E03               	movlw	3
  5306  000750  6E3C               	movwf	_i2c_state,c
  5307                           
  5308                           ;i2c.c: 332: }
  5309                           ;i2c.c: 333: }
  5310                           ;i2c.c: 335: break;
  5311  000752  0012               	return	
  5312  000754                     i2l700:
  5313                           
  5314                           ;i2c.c: 339: if(SSPCON2bits.ACKSTAT)
  5315  000754  ACC5               	btfss	4037,6,c	;volatile
  5316  000756  D005               	goto	i2l701
  5317                           
  5318                           ;i2c.c: 340: {
  5319                           ;i2c.c: 341: i2c_object.i2cErrors++;
  5320  000758  2A2E               	incf	_i2c_object+6,f,c
  5321                           
  5322                           ;i2c.c: 342: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  5323  00075A  0E04               	movlw	4
  5324  00075C  ECA6  F009         	call	_I2C_Stop
  5325                           
  5326                           ;i2c.c: 343: }
  5327  000760  0012               	return	
  5328  000762                     i2l701:
  5329                           
  5330                           ;i2c.c: 344: else
  5331                           ;i2c.c: 345: {
  5332                           ;i2c.c: 348: SSPCON2bits.RSEN = 1;
  5333  000762  82C5               	bsf	4037,1,c	;volatile
  5334                           
  5335                           ;i2c.c: 352: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5336  000764  C044  F004         	movff	I2C_ISR@i2c_address,??_I2C_ISR
  5337  000768  C045  F005         	movff	I2C_ISR@i2c_address+1,??_I2C_ISR+1
  5338  00076C  C005  F004         	movff	??_I2C_ISR+1,??_I2C_ISR
  5339  000770  6A05               	clrf	??_I2C_ISR+1,c
  5340  000772  0E06               	movlw	6
  5341  000774  1604               	andwf	??_I2C_ISR,f,c
  5342  000776  0E00               	movlw	0
  5343  000778  1605               	andwf	??_I2C_ISR+1,f,c
  5344  00077A  0EF0               	movlw	240
  5345  00077C  1004               	iorwf	??_I2C_ISR,w,c
  5346  00077E  6E44               	movwf	I2C_ISR@i2c_address,c
  5347  000780  5005               	movf	??_I2C_ISR+1,w,c
  5348  000782  6E45               	movwf	I2C_ISR@i2c_address+1,c
  5349                           
  5350                           ;i2c.c: 355: i2c_address |= 0x0001;
  5351  000784  8044               	bsf	I2C_ISR@i2c_address,0,c
  5352                           
  5353                           ;i2c.c: 358: i2c_10bit_address_restart = 1;
  5354  000786  0E01               	movlw	1
  5355  000788  6E39               	movwf	I2C_ISR@i2c_10bit_address_restart,c
  5356                           
  5357                           ;i2c.c: 361: i2c_state = S_MASTER_SEND_ADDR;
  5358  00078A  0E02               	movlw	2
  5359  00078C  6E3C               	movwf	_i2c_state,c
  5360                           
  5361                           ;i2c.c: 362: }
  5362                           ;i2c.c: 364: break;
  5363  00078E  0012               	return	
  5364  000790                     i2l3059:
  5365                           
  5366                           ;i2c.c: 379: if(i2c_10bit_address_restart != 1)
  5367  000790  0439               	decf	I2C_ISR@i2c_10bit_address_restart,w,c
  5368  000792  B4D8               	btfsc	status,2,c
  5369  000794  D01A               	goto	i2l705
  5370                           
  5371                           ;i2c.c: 380: {
  5372                           ;i2c.c: 382: i2c_address = p_i2c_trb_current->address;
  5373  000796  C033  FFD9         	movff	_p_i2c_trb_current,fsr2l
  5374  00079A  C034  FFDA         	movff	_p_i2c_trb_current+1,fsr2h
  5375  00079E  CFDE F044          	movff	postinc2,I2C_ISR@i2c_address
  5376  0007A2  CFDD F045          	movff	postdec2,I2C_ISR@i2c_address+1
  5377                           
  5378                           ;i2c.c: 383: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  5379  0007A6  EE20 F003          	lfsr	2,3
  5380  0007AA  5033               	movf	_p_i2c_trb_current,w,c
  5381  0007AC  26D9               	addwf	fsr2l,f,c
  5382  0007AE  5034               	movf	_p_i2c_trb_current+1,w,c
  5383  0007B0  22DA               	addwfc	fsr2h,f,c
  5384  0007B2  CFDE F02F          	movff	postinc2,I2C_ISR@pi2c_buf_ptr
  5385  0007B6  CFDD F030          	movff	postdec2,I2C_ISR@pi2c_buf_ptr+1
  5386                           
  5387                           ;i2c.c: 384: i2c_bytes_left = p_i2c_trb_current->length;
  5388  0007BA  EE20 F002          	lfsr	2,2
  5389  0007BE  5033               	movf	_p_i2c_trb_current,w,c
  5390  0007C0  26D9               	addwf	fsr2l,f,c
  5391  0007C2  5034               	movf	_p_i2c_trb_current+1,w,c
  5392  0007C4  22DA               	addwfc	fsr2h,f,c
  5393  0007C6  50DF               	movf	indf2,w,c
  5394  0007C8  6E3A               	movwf	I2C_ISR@i2c_bytes_left,c
  5395  0007CA                     i2l705:
  5396                           
  5397                           ;i2c.c: 407: else
  5398                           ;i2c.c: 408: {
  5399                           ;i2c.c: 410: SSPBUF = i2c_address;
  5400  0007CA  C044  FFC9         	movff	I2C_ISR@i2c_address,4041	;volatile
  5401                           
  5402                           ;i2c.c: 411: if(i2c_address & 0x01)
  5403  0007CE  A044               	btfss	I2C_ISR@i2c_address,0,c
  5404  0007D0  D003               	goto	i2l3079
  5405                           
  5406                           ;i2c.c: 412: {
  5407                           ;i2c.c: 414: i2c_state = S_MASTER_ACK_ADDR;
  5408  0007D2  0E05               	movlw	5
  5409  0007D4  6E3C               	movwf	_i2c_state,c
  5410                           
  5411                           ;i2c.c: 415: }
  5412  0007D6  0012               	return	
  5413  0007D8                     i2l3079:
  5414                           
  5415                           ;i2c.c: 416: else
  5416                           ;i2c.c: 417: {
  5417                           ;i2c.c: 419: i2c_state = S_MASTER_SEND_DATA;
  5418  0007D8  0E03               	movlw	3
  5419  0007DA  6E3C               	movwf	_i2c_state,c
  5420                           
  5421                           ;i2c.c: 420: }
  5422                           ;i2c.c: 421: }
  5423                           ;i2c.c: 422: break;
  5424  0007DC  0012               	return	
  5425  0007DE                     i2l711:
  5426                           
  5427                           ;i2c.c: 427: if(SSPCON2bits.ACKSTAT)
  5428  0007DE  ACC5               	btfss	4037,6,c	;volatile
  5429  0007E0  D006               	goto	i2l3087
  5430                           
  5431                           ;i2c.c: 428: {
  5432                           ;i2c.c: 430: i2c_object.i2cErrors++;
  5433  0007E2  2A2E               	incf	_i2c_object+6,f,c
  5434                           
  5435                           ;i2c.c: 433: SSPCON2bits.ACKSTAT = 0;
  5436  0007E4  9CC5               	bcf	4037,6,c	;volatile
  5437                           
  5438                           ;i2c.c: 436: I2C_Stop(I2C_DATA_NO_ACK);
  5439  0007E6  0E05               	movlw	5
  5440  0007E8  ECA6  F009         	call	_I2C_Stop
  5441                           
  5442                           ;i2c.c: 438: }
  5443  0007EC  0012               	return	
  5444  0007EE                     i2l3087:
  5445                           
  5446                           ;i2c.c: 439: else
  5447                           ;i2c.c: 440: {
  5448                           ;i2c.c: 442: if(i2c_bytes_left-- == 0U)
  5449  0007EE  063A               	decf	I2C_ISR@i2c_bytes_left,f,c
  5450  0007F0  283A               	incf	I2C_ISR@i2c_bytes_left,w,c
  5451  0007F2  A4D8               	btfss	status,2,c
  5452  0007F4  D00E               	goto	i2l3097
  5453                           
  5454                           ;i2c.c: 443: {
  5455                           ;i2c.c: 447: p_i2c_trb_current++;
  5456  0007F6  0E05               	movlw	5
  5457  0007F8  2633               	addwf	_p_i2c_trb_current,f,c
  5458  0007FA  0E00               	movlw	0
  5459  0007FC  2234               	addwfc	_p_i2c_trb_current+1,f,c
  5460                           
  5461                           ;i2c.c: 450: if(--i2c_trb_count == 0)
  5462  0007FE  2E3B               	decfsz	_i2c_trb_count,f,c
  5463  000800  D004               	goto	i2l715
  5464                           
  5465                           ;i2c.c: 451: {
  5466                           ;i2c.c: 452: I2C_Stop(I2C_MESSAGE_COMPLETE);
  5467  000802  0E00               	movlw	0
  5468  000804  ECA6  F009         	call	_I2C_Stop
  5469                           
  5470                           ;i2c.c: 453: }
  5471  000808  0012               	return	
  5472  00080A                     i2l715:
  5473                           
  5474                           ;i2c.c: 454: else
  5475                           ;i2c.c: 455: {
  5476                           ;i2c.c: 462: SSPCON2bits.RSEN = 1;
  5477  00080A  82C5               	bsf	4037,1,c	;volatile
  5478                           
  5479                           ;i2c.c: 465: i2c_state = S_MASTER_SEND_ADDR;
  5480  00080C  0E02               	movlw	2
  5481  00080E  6E3C               	movwf	_i2c_state,c
  5482                           
  5483                           ;i2c.c: 467: }
  5484                           ;i2c.c: 468: }
  5485  000810  0012               	return	
  5486  000812                     i2l3097:
  5487                           
  5488                           ;i2c.c: 469: else
  5489                           ;i2c.c: 470: {
  5490                           ;i2c.c: 472: SSPBUF = *pi2c_buf_ptr++;
  5491  000812  C02F  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  5492  000816  C030  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  5493  00081A  50DF               	movf	indf2,w,c
  5494  00081C  6EC9               	movwf	4041,c	;volatile
  5495  00081E  4A2F               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  5496  000820  2A30               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  5497                           
  5498                           ;i2c.c: 473: }
  5499                           ;i2c.c: 474: }
  5500                           ;i2c.c: 475: break;
  5501  000822  0012               	return	
  5502  000824                     i2l718:
  5503                           
  5504                           ;i2c.c: 480: if(SSPCON2bits.ACKSTAT)
  5505  000824  ACC5               	btfss	4037,6,c	;volatile
  5506  000826  D006               	goto	i2l719
  5507                           
  5508                           ;i2c.c: 481: {
  5509                           ;i2c.c: 484: i2c_object.i2cErrors++;
  5510  000828  2A2E               	incf	_i2c_object+6,f,c
  5511                           
  5512                           ;i2c.c: 487: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  5513  00082A  0E04               	movlw	4
  5514  00082C  ECA6  F009         	call	_I2C_Stop
  5515                           
  5516                           ;i2c.c: 490: SSPCON2bits.ACKSTAT = 0;
  5517  000830  9CC5               	bcf	4037,6,c	;volatile
  5518                           
  5519                           ;i2c.c: 491: }
  5520  000832  0012               	return	
  5521  000834                     i2l719:
  5522                           
  5523                           ;i2c.c: 492: else
  5524                           ;i2c.c: 493: {
  5525                           ;i2c.c: 494: SSPCON2bits.RCEN = 1;
  5526  000834  86C5               	bsf	4037,3,c	;volatile
  5527                           
  5528                           ;i2c.c: 495: i2c_state = S_MASTER_ACK_RCV_DATA;
  5529  000836  0E08               	movlw	8
  5530  000838  6E3C               	movwf	_i2c_state,c
  5531                           
  5532                           ;i2c.c: 496: }
  5533                           ;i2c.c: 497: break;
  5534  00083A  0012               	return	
  5535  00083C                     i2l3109:
  5536                           
  5537                           ;i2c.c: 504: i2c_state = S_MASTER_ACK_RCV_DATA;
  5538  00083C  0E08               	movlw	8
  5539  00083E  6E3C               	movwf	_i2c_state,c
  5540                           
  5541                           ;i2c.c: 507: SSPCON2bits.RCEN = 1;
  5542  000840  86C5               	bsf	4037,3,c	;volatile
  5543                           
  5544                           ;i2c.c: 509: break;
  5545  000842  0012               	return	
  5546  000844                     i2l3113:
  5547                           
  5548                           ;i2c.c: 514: *pi2c_buf_ptr++ = SSPBUF;
  5549  000844  C02F  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  5550  000848  C030  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  5551  00084C  CFC9 FFDF          	movff	4041,indf2	;volatile
  5552  000850  4A2F               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  5553  000852  2A30               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  5554                           
  5555                           ;i2c.c: 517: if(--i2c_bytes_left)
  5556  000854  0E01               	movlw	1
  5557  000856  5E3A               	subwf	I2C_ISR@i2c_bytes_left,f,c
  5558  000858  B4D8               	btfsc	status,2,c
  5559  00085A  D004               	goto	i2l723
  5560                           
  5561                           ;i2c.c: 518: {
  5562                           ;i2c.c: 524: SSPCON2bits.ACKDT = 0;
  5563  00085C  9AC5               	bcf	4037,5,c	;volatile
  5564                           
  5565                           ;i2c.c: 527: i2c_state = S_MASTER_RCV_DATA;
  5566  00085E  0E06               	movlw	6
  5567  000860  6E3C               	movwf	_i2c_state,c
  5568                           
  5569                           ;i2c.c: 528: }
  5570  000862  D003               	goto	i2l3125
  5571  000864                     i2l723:
  5572                           
  5573                           ;i2c.c: 529: else
  5574                           ;i2c.c: 530: {
  5575                           ;i2c.c: 534: SSPCON2bits.ACKDT = 1;
  5576  000864  8AC5               	bsf	4037,5,c	;volatile
  5577                           
  5578                           ;i2c.c: 536: I2C_FunctionComplete();
  5579  000866  EC6E  F00A         	call	_I2C_FunctionComplete	;wreg free
  5580  00086A                     i2l3125:
  5581                           
  5582                           ;i2c.c: 537: }
  5583                           ;i2c.c: 540: SSPCON2bits.ACKEN = 1;
  5584  00086A  88C5               	bsf	4037,4,c	;volatile
  5585                           
  5586                           ;i2c.c: 541: break;
  5587  00086C  0012               	return	
  5588  00086E                     i2l3127:
  5589                           
  5590                           ;i2c.c: 544: case S_MASTER_SEND_STOP:
  5591                           ;i2c.c: 547: I2C_Stop(I2C_MESSAGE_COMPLETE);
  5592  00086E  0E00               	movlw	0
  5593  000870  ECA6  F009         	call	_I2C_Stop
  5594                           
  5595                           ;i2c.c: 548: break;
  5596  000874  0012               	return	
  5597  000876                     i2l3129:
  5598                           
  5599                           ;i2c.c: 554: i2c_object.i2cErrors++;
  5600  000876  2A2E               	incf	_i2c_object+6,f,c
  5601                           
  5602                           ;i2c.c: 555: I2C_Stop(I2C_LOST_STATE);
  5603  000878  0E06               	movlw	6
  5604  00087A  ECA6  F009         	call	_I2C_Stop
  5605                           
  5606                           ;i2c.c: 558: }
  5607                           
  5608                           ;i2c.c: 556: break;
  5609  00087E  0012               	return	
  5610  000880                     i2l3135:
  5611  000880  503C               	movf	_i2c_state,w,c
  5612                           
  5613                           ; Switch size 1, requested type "space"
  5614                           ; Number of cases is 11, Range of values is 0 to 11
  5615                           ; switch strategies available:
  5616                           ; Name         Instructions Cycles
  5617                           ; simple_byte           34    18 (average)
  5618                           ;	Chosen strategy is simple_byte
  5619  000882  0A00               	xorlw	0	; case 0
  5620  000884  B4D8               	btfsc	status,2,c
  5621  000886  D71B               	goto	i2l689
  5622  000888  0A01               	xorlw	1	; case 1
  5623  00088A  B4D8               	btfsc	status,2,c
  5624  00088C  D749               	goto	i2l694
  5625  00088E  0A03               	xorlw	3	; case 2
  5626  000890  B4D8               	btfsc	status,2,c
  5627  000892  D77E               	goto	i2l3059
  5628  000894  0A01               	xorlw	1	; case 3
  5629  000896  B4D8               	btfsc	status,2,c
  5630  000898  D7A2               	goto	i2l711
  5631  00089A  0A07               	xorlw	7	; case 4
  5632  00089C  B4D8               	btfsc	status,2,c
  5633  00089E  D7E7               	goto	i2l3127
  5634  0008A0  0A01               	xorlw	1	; case 5
  5635  0008A2  B4D8               	btfsc	status,2,c
  5636  0008A4  D7BF               	goto	i2l718
  5637  0008A6  0A03               	xorlw	3	; case 6
  5638  0008A8  B4D8               	btfsc	status,2,c
  5639  0008AA  D7C8               	goto	i2l3109
  5640  0008AC  0A01               	xorlw	1	; case 7
  5641  0008AE  B4D8               	btfsc	status,2,c
  5642  0008B0  D7DE               	goto	i2l3127
  5643  0008B2  0A0F               	xorlw	15	; case 8
  5644  0008B4  B4D8               	btfsc	status,2,c
  5645  0008B6  D7C6               	goto	i2l3113
  5646  0008B8  0A02               	xorlw	2	; case 10
  5647  0008BA  B4D8               	btfsc	status,2,c
  5648  0008BC  D735               	goto	i2l695
  5649  0008BE  0A01               	xorlw	1	; case 11
  5650  0008C0  B4D8               	btfsc	status,2,c
  5651  0008C2  D748               	goto	i2l700
  5652  0008C4  D7D8               	goto	i2l3129
  5653  0008C6                     __end_of_I2C_ISR:
  5654                           	opt stack 0
  5655                           tosu	equ	0xFFF
  5656                           tosh	equ	0xFFE
  5657                           tosl	equ	0xFFD
  5658                           pclatu	equ	0xFFB
  5659                           pclath	equ	0xFFA
  5660                           tblptru	equ	0xFF8
  5661                           tblptrh	equ	0xFF7
  5662                           tblptrl	equ	0xFF6
  5663                           tablat	equ	0xFF5
  5664                           prodh	equ	0xFF4
  5665                           prodl	equ	0xFF3
  5666                           intcon	equ	0xFF2
  5667                           postinc0	equ	0xFEE
  5668                           fsr0h	equ	0xFEA
  5669                           fsr0l	equ	0xFE9
  5670                           wreg	equ	0xFE8
  5671                           fsr1h	equ	0xFE2
  5672                           fsr1l	equ	0xFE1
  5673                           indf2	equ	0xFDF
  5674                           postinc2	equ	0xFDE
  5675                           postdec2	equ	0xFDD
  5676                           plusw2	equ	0xFDB
  5677                           fsr2h	equ	0xFDA
  5678                           fsr2l	equ	0xFD9
  5679                           status	equ	0xFD8
  5680                           
  5681 ;; *************** function _I2C_Stop *****************
  5682 ;; Defined at:
  5683 ;;		line 579 in file "mcc_generated_files/i2c.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  completion_c    1    wreg     enum E15091
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  completion_c    1    2[COMRAM] enum E15091
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5701 ;;Total ram usage:        3 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_I2C_ISR
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text30
  5711  00134C                     __ptext30:
  5712                           	opt stack 0
  5713  00134C                     _I2C_Stop:
  5714                           	opt stack 24
  5715                           
  5716                           ;incstack = 0
  5717                           ;I2C_Stop@completion_code stored from wreg
  5718  00134C  6E03               	movwf	I2C_Stop@completion_code,c
  5719                           
  5720                           ;i2c.c: 582: SSPCON2bits.PEN = 1;
  5721  00134E  84C5               	bsf	4037,2,c	;volatile
  5722                           
  5723                           ;i2c.c: 585: if (p_i2c_current->pTrFlag != (0))
  5724  001350  EE20 F003          	lfsr	2,3
  5725  001354  5031               	movf	_p_i2c_current,w,c
  5726  001356  26D9               	addwf	fsr2l,f,c
  5727  001358  5032               	movf	_p_i2c_current+1,w,c
  5728  00135A  22DA               	addwfc	fsr2h,f,c
  5729  00135C  50DE               	movf	postinc2,w,c
  5730  00135E  10DE               	iorwf	postinc2,w,c
  5731  001360  B4D8               	btfsc	status,2,c
  5732  001362  D010               	goto	i2l2827
  5733                           
  5734                           ;i2c.c: 586: {
  5735                           ;i2c.c: 588: *(p_i2c_current->pTrFlag) = completion_code;
  5736  001364  EE20 F003          	lfsr	2,3
  5737  001368  5031               	movf	_p_i2c_current,w,c
  5738  00136A  26D9               	addwf	fsr2l,f,c
  5739  00136C  5032               	movf	_p_i2c_current+1,w,c
  5740  00136E  22DA               	addwfc	fsr2h,f,c
  5741  001370  CFDE F001          	movff	postinc2,??_I2C_Stop
  5742  001374  CFDD F002          	movff	postdec2,??_I2C_Stop+1
  5743  001378  C001  FFD9         	movff	??_I2C_Stop,fsr2l
  5744  00137C  C002  FFDA         	movff	??_I2C_Stop+1,fsr2h
  5745  001380  C003  FFDF         	movff	I2C_Stop@completion_code,indf2
  5746  001384                     i2l2827:
  5747                           
  5748                           ;i2c.c: 589: }
  5749                           ;i2c.c: 592: i2c_state = S_MASTER_IDLE;
  5750  001384  0E00               	movlw	0
  5751  001386  6E3C               	movwf	_i2c_state,c
  5752  001388  0012               	return		;funcret
  5753  00138A                     __end_of_I2C_Stop:
  5754                           	opt stack 0
  5755                           tosu	equ	0xFFF
  5756                           tosh	equ	0xFFE
  5757                           tosl	equ	0xFFD
  5758                           pclatu	equ	0xFFB
  5759                           pclath	equ	0xFFA
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           prodh	equ	0xFF4
  5765                           prodl	equ	0xFF3
  5766                           intcon	equ	0xFF2
  5767                           postinc0	equ	0xFEE
  5768                           fsr0h	equ	0xFEA
  5769                           fsr0l	equ	0xFE9
  5770                           wreg	equ	0xFE8
  5771                           fsr1h	equ	0xFE2
  5772                           fsr1l	equ	0xFE1
  5773                           indf2	equ	0xFDF
  5774                           postinc2	equ	0xFDE
  5775                           postdec2	equ	0xFDD
  5776                           plusw2	equ	0xFDB
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function _I2C_FunctionComplete *****************
  5782 ;; Defined at:
  5783 ;;		line 561 in file "mcc_generated_files/i2c.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_I2C_ISR
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text31
  5811  0014DC                     __ptext31:
  5812                           	opt stack 0
  5813  0014DC                     _I2C_FunctionComplete:
  5814                           	opt stack 24
  5815                           
  5816                           ;i2c.c: 565: p_i2c_trb_current++;
  5817                           
  5818                           ;incstack = 0
  5819  0014DC  0E05               	movlw	5
  5820  0014DE  2633               	addwf	_p_i2c_trb_current,f,c
  5821  0014E0  0E00               	movlw	0
  5822  0014E2  2234               	addwfc	_p_i2c_trb_current+1,f,c
  5823                           
  5824                           ;i2c.c: 568: if(--i2c_trb_count == 0)
  5825  0014E4  2E3B               	decfsz	_i2c_trb_count,f,c
  5826  0014E6  D003               	goto	i2l2835
  5827                           
  5828                           ;i2c.c: 569: {
  5829                           ;i2c.c: 570: i2c_state = S_MASTER_SEND_STOP;
  5830  0014E8  0E04               	movlw	4
  5831  0014EA  6E3C               	movwf	_i2c_state,c
  5832                           
  5833                           ;i2c.c: 571: }
  5834  0014EC  0012               	return	
  5835  0014EE                     i2l2835:
  5836                           
  5837                           ;i2c.c: 572: else
  5838                           ;i2c.c: 573: {
  5839                           ;i2c.c: 574: i2c_state = S_MASTER_RESTART;
  5840  0014EE  0E01               	movlw	1
  5841  0014F0  6E3C               	movwf	_i2c_state,c
  5842  0014F2  0012               	return	
  5843  0014F4                     __end_of_I2C_FunctionComplete:
  5844                           	opt stack 0
  5845                           tosu	equ	0xFFF
  5846                           tosh	equ	0xFFE
  5847                           tosl	equ	0xFFD
  5848                           pclatu	equ	0xFFB
  5849                           pclath	equ	0xFFA
  5850                           tblptru	equ	0xFF8
  5851                           tblptrh	equ	0xFF7
  5852                           tblptrl	equ	0xFF6
  5853                           tablat	equ	0xFF5
  5854                           prodh	equ	0xFF4
  5855                           prodl	equ	0xFF3
  5856                           intcon	equ	0xFF2
  5857                           postinc0	equ	0xFEE
  5858                           fsr0h	equ	0xFEA
  5859                           fsr0l	equ	0xFE9
  5860                           wreg	equ	0xFE8
  5861                           fsr1h	equ	0xFE2
  5862                           fsr1l	equ	0xFE1
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           plusw2	equ	0xFDB
  5867                           fsr2h	equ	0xFDA
  5868                           fsr2l	equ	0xFD9
  5869                           status	equ	0xFD8
  5870                           
  5871 ;; *************** function _I2C_BusCollisionISR *****************
  5872 ;; Defined at:
  5873 ;;		line 726 in file "mcc_generated_files/i2c.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;		None
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		None
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;Total ram usage:        0 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; This function calls:
  5894 ;;		Nothing
  5895 ;; This function is called by:
  5896 ;;		_INTERRUPT_InterruptManager
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text32
  5901  001534                     __ptext32:
  5902                           	opt stack 0
  5903  001534                     _I2C_BusCollisionISR:
  5904                           	opt stack 25
  5905                           
  5906                           ;incstack = 0
  5907  001534  0012               	return		;funcret
  5908  001536                     __end_of_I2C_BusCollisionISR:
  5909                           	opt stack 0
  5910                           tosu	equ	0xFFF
  5911                           tosh	equ	0xFFE
  5912                           tosl	equ	0xFFD
  5913                           pclatu	equ	0xFFB
  5914                           pclath	equ	0xFFA
  5915                           tblptru	equ	0xFF8
  5916                           tblptrh	equ	0xFF7
  5917                           tblptrl	equ	0xFF6
  5918                           tablat	equ	0xFF5
  5919                           prodh	equ	0xFF4
  5920                           prodl	equ	0xFF3
  5921                           intcon	equ	0xFF2
  5922                           postinc0	equ	0xFEE
  5923                           fsr0h	equ	0xFEA
  5924                           fsr0l	equ	0xFE9
  5925                           wreg	equ	0xFE8
  5926                           fsr1h	equ	0xFE2
  5927                           fsr1l	equ	0xFE1
  5928                           indf2	equ	0xFDF
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           plusw2	equ	0xFDB
  5932                           fsr2h	equ	0xFDA
  5933                           fsr2l	equ	0xFD9
  5934                           status	equ	0xFD8
  5935                           
  5936 ;; *************** function _CCP2_CaptureISR *****************
  5937 ;; Defined at:
  5938 ;;		line 80 in file "mcc_generated_files/ccp2.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  module          2    2[COMRAM] struct CCPR2Reg_tag
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5954 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5956 ;;Total ram usage:        4 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_INTERRUPT_InterruptManager
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text33
  5966  00117C                     __ptext33:
  5967                           	opt stack 0
  5968  00117C                     _CCP2_CaptureISR:
  5969                           	opt stack 25
  5970                           
  5971                           ;ccp2.c: 82: CCP_PERIOD_REG_T module;
  5972                           ;ccp2.c: 85: PIR3bits.CCP2IF = 0;
  5973                           
  5974                           ;incstack = 0
  5975  00117C  94A4               	bcf	4004,2,c	;volatile
  5976                           
  5977                           ;ccp2.c: 88: module.ccpr2l = CCPR2L;
  5978  00117E  CF51 F003          	movff	3921,CCP2_CaptureISR@module	;volatile
  5979                           
  5980                           ;ccp2.c: 89: module.ccpr2h = CCPR2H;
  5981  001182  CF52 F004          	movff	3922,CCP2_CaptureISR@module+1	;volatile
  5982                           
  5983                           ;ccp2.c: 92: if(prev_reading >= module.ccpr2_16Bit) time_diff = 0xFFFF - (prev_reading -
      +                           module.ccpr2_16Bit);
  5984  001186  5003               	movf	CCP2_CaptureISR@module,w,c
  5985  001188  5C35               	subwf	_prev_reading,w,c	;volatile
  5986  00118A  5004               	movf	CCP2_CaptureISR@module+1,w,c
  5987  00118C  5836               	subwfb	_prev_reading+1,w,c	;volatile
  5988  00118E  A0D8               	btfss	status,0,c
  5989  001190  D015               	goto	i2l1857
  5990  001192  C003  F001         	movff	CCP2_CaptureISR@module,??_CCP2_CaptureISR
  5991  001196  C004  F002         	movff	CCP2_CaptureISR@module+1,??_CCP2_CaptureISR+1
  5992  00119A  1E01               	comf	??_CCP2_CaptureISR,f,c
  5993  00119C  1E02               	comf	??_CCP2_CaptureISR+1,f,c
  5994  00119E  4A01               	infsnz	??_CCP2_CaptureISR,f,c
  5995  0011A0  2A02               	incf	??_CCP2_CaptureISR+1,f,c
  5996  0011A2  5035               	movf	_prev_reading,w,c	;volatile
  5997  0011A4  2601               	addwf	??_CCP2_CaptureISR,f,c
  5998  0011A6  5036               	movf	_prev_reading+1,w,c	;volatile
  5999  0011A8  2202               	addwfc	??_CCP2_CaptureISR+1,f,c
  6000  0011AA  1E01               	comf	??_CCP2_CaptureISR,f,c
  6001  0011AC  1E02               	comf	??_CCP2_CaptureISR+1,f,c
  6002  0011AE  4A01               	infsnz	??_CCP2_CaptureISR,f,c
  6003  0011B0  2A02               	incf	??_CCP2_CaptureISR+1,f,c
  6004  0011B2  0EFF               	movlw	255
  6005  0011B4  2401               	addwf	??_CCP2_CaptureISR,w,c
  6006  0011B6  6E37               	movwf	_time_diff,c	;volatile
  6007  0011B8  0EFF               	movlw	255
  6008  0011BA  D00C               	goto	L1
  6009  0011BC                     i2l1857:
  6010                           
  6011                           ;ccp2.c: 93: else time_diff = module.ccpr2_16Bit - prev_reading;
  6012  0011BC  C035  F001         	movff	_prev_reading,??_CCP2_CaptureISR	;volatile
  6013  0011C0  C036  F002         	movff	_prev_reading+1,??_CCP2_CaptureISR+1	;volatile
  6014  0011C4  1E01               	comf	??_CCP2_CaptureISR,f,c
  6015  0011C6  1E02               	comf	??_CCP2_CaptureISR+1,f,c
  6016  0011C8  4A01               	infsnz	??_CCP2_CaptureISR,f,c
  6017  0011CA  2A02               	incf	??_CCP2_CaptureISR+1,f,c
  6018  0011CC  5003               	movf	CCP2_CaptureISR@module,w,c
  6019  0011CE  2401               	addwf	??_CCP2_CaptureISR,w,c
  6020  0011D0  6E37               	movwf	_time_diff,c	;volatile
  6021  0011D2  5004               	movf	CCP2_CaptureISR@module+1,w,c
  6022  0011D4                     L1:
  6023  0011D4  2002               	addwfc	??_CCP2_CaptureISR+1,w,c
  6024  0011D6  6E38               	movwf	_time_diff+1,c	;volatile
  6025                           
  6026                           ;ccp2.c: 100: prev_reading = module.ccpr2_16Bit;
  6027  0011D8  C003  F035         	movff	CCP2_CaptureISR@module,_prev_reading	;volatile
  6028  0011DC  C004  F036         	movff	CCP2_CaptureISR@module+1,_prev_reading+1	;volatile
  6029  0011E0  0012               	return		;funcret
  6030  0011E2                     __end_of_CCP2_CaptureISR:
  6031                           	opt stack 0
  6032  0000                     tosu	equ	0xFFF
  6033                           tosh	equ	0xFFE
  6034                           tosl	equ	0xFFD
  6035                           pclatu	equ	0xFFB
  6036                           pclath	equ	0xFFA
  6037                           tblptru	equ	0xFF8
  6038                           tblptrh	equ	0xFF7
  6039                           tblptrl	equ	0xFF6
  6040                           tablat	equ	0xFF5
  6041                           prodh	equ	0xFF4
  6042                           prodl	equ	0xFF3
  6043                           intcon	equ	0xFF2
  6044                           postinc0	equ	0xFEE
  6045                           fsr0h	equ	0xFEA
  6046                           fsr0l	equ	0xFE9
  6047                           wreg	equ	0xFE8
  6048                           fsr1h	equ	0xFE2
  6049                           fsr1l	equ	0xFE1
  6050                           indf2	equ	0xFDF
  6051                           postinc2	equ	0xFDE
  6052                           postdec2	equ	0xFDD
  6053                           plusw2	equ	0xFDB
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           tosu	equ	0xFFF
  6058                           tosh	equ	0xFFE
  6059                           tosl	equ	0xFFD
  6060                           pclatu	equ	0xFFB
  6061                           pclath	equ	0xFFA
  6062                           tblptru	equ	0xFF8
  6063                           tblptrh	equ	0xFF7
  6064                           tblptrl	equ	0xFF6
  6065                           tablat	equ	0xFF5
  6066                           prodh	equ	0xFF4
  6067                           prodl	equ	0xFF3
  6068                           intcon	equ	0xFF2
  6069                           postinc0	equ	0xFEE
  6070                           fsr0h	equ	0xFEA
  6071                           fsr0l	equ	0xFE9
  6072                           wreg	equ	0xFE8
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           indf2	equ	0xFDF
  6076                           postinc2	equ	0xFDE
  6077                           postdec2	equ	0xFDD
  6078                           plusw2	equ	0xFDB
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083                           	psect	text34
  6084  000000                     __ptext34:
  6085                           	opt stack 0
  6086                           tosu	equ	0xFFF
  6087                           tosh	equ	0xFFE
  6088                           tosl	equ	0xFFD
  6089                           pclatu	equ	0xFFB
  6090                           pclath	equ	0xFFA
  6091                           tblptru	equ	0xFF8
  6092                           tblptrh	equ	0xFF7
  6093                           tblptrl	equ	0xFF6
  6094                           tablat	equ	0xFF5
  6095                           prodh	equ	0xFF4
  6096                           prodl	equ	0xFF3
  6097                           intcon	equ	0xFF2
  6098                           postinc0	equ	0xFEE
  6099                           fsr0h	equ	0xFEA
  6100                           fsr0l	equ	0xFE9
  6101                           wreg	equ	0xFE8
  6102                           fsr1h	equ	0xFE2
  6103                           fsr1l	equ	0xFE1
  6104                           indf2	equ	0xFDF
  6105                           postinc2	equ	0xFDE
  6106                           postdec2	equ	0xFDD
  6107                           plusw2	equ	0xFDB
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112                           	psect	rparam
  6113  0000                     tosu	equ	0xFFF
  6114                           tosh	equ	0xFFE
  6115                           tosl	equ	0xFFD
  6116                           pclatu	equ	0xFFB
  6117                           pclath	equ	0xFFA
  6118                           tblptru	equ	0xFF8
  6119                           tblptrh	equ	0xFF7
  6120                           tblptrl	equ	0xFF6
  6121                           tablat	equ	0xFF5
  6122                           prodh	equ	0xFF4
  6123                           prodl	equ	0xFF3
  6124                           intcon	equ	0xFF2
  6125                           postinc0	equ	0xFEE
  6126                           fsr0h	equ	0xFEA
  6127                           fsr0l	equ	0xFE9
  6128                           wreg	equ	0xFE8
  6129                           fsr1h	equ	0xFE2
  6130                           fsr1l	equ	0xFE1
  6131                           indf2	equ	0xFDF
  6132                           postinc2	equ	0xFDE
  6133                           postdec2	equ	0xFDD
  6134                           plusw2	equ	0xFDB
  6135                           fsr2h	equ	0xFDA
  6136                           fsr2l	equ	0xFD9
  6137                           status	equ	0xFD8
  6138                           
  6139                           	psect	temp
  6140  00004A                     btemp:
  6141                           	opt stack 0
  6142  00004A                     	ds	1
  6143  0000                     int$flags	set	btemp
  6144                           tosu	equ	0xFFF
  6145                           tosh	equ	0xFFE
  6146                           tosl	equ	0xFFD
  6147                           pclatu	equ	0xFFB
  6148                           pclath	equ	0xFFA
  6149                           tblptru	equ	0xFF8
  6150                           tblptrh	equ	0xFF7
  6151                           tblptrl	equ	0xFF6
  6152                           tablat	equ	0xFF5
  6153                           prodh	equ	0xFF4
  6154                           prodl	equ	0xFF3
  6155                           intcon	equ	0xFF2
  6156                           postinc0	equ	0xFEE
  6157                           fsr0h	equ	0xFEA
  6158                           fsr0l	equ	0xFE9
  6159                           wreg	equ	0xFE8
  6160                           fsr1h	equ	0xFE2
  6161                           fsr1l	equ	0xFE1
  6162                           indf2	equ	0xFDF
  6163                           postinc2	equ	0xFDE
  6164                           postdec2	equ	0xFDD
  6165                           plusw2	equ	0xFDB
  6166                           fsr2h	equ	0xFDA
  6167                           fsr2l	equ	0xFD9
  6168                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         40
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      73
    BANK0           160     67      77
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    i2c_tr_queue.pTrFlag	PTR enum E15091 size(2) Largest target is 0
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    i2c_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> main@message(BANK0[1]), BNO055_Initialize@message(COMRAM[1]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    I2C_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), BNO055_Initialize@id(COMRAM[1]), 

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    I2C_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), 

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    i2c_object.pTrTail.pTrFlag	PTR enum E15091 size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    i2c_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@pflag	PTR enum E15091 size(2) Largest target is 1
		 -> main@status(BANK0[1]), BNO055_Initialize@pflag(COMRAM[1]), 

    I2C_MasterRead@pflag	PTR enum E15091 size(2) Largest target is 1
		 -> main@status(BANK0[1]), BNO055_Initialize@pflag(COMRAM[1]), 

    I2C_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), BNO055_Initialize@id(COMRAM[1]), 

    F15203.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    I2C_MasterWrite@pflag	PTR enum E15091 size(2) Largest target is 1
		 -> main@status(BANK0[1]), BNO055_Initialize@pflag(COMRAM[1]), 

    I2C_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> main@message(BANK0[1]), BNO055_Initialize@message(COMRAM[1]), 

    F15198.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> NULL(NULL[0]), BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    p_i2c_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E15091 size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    i2c_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    S1797$pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    p_i2c_current.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    S1809$pTrFlag	PTR enum E15091 size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    p_i2c_current.pTrFlag	PTR enum E15091 size(2) Largest target is 1
		 -> main@linear_accel_z_MSB(BANK0[1]), main@linear_accel_z_LSB(BANK0[1]), main@linear_accel_y_MSB(BANK0[1]), main@linear_accel_y_LSB(BANK0[1]), 
		 -> main@linear_accel_x_MSB(BANK0[1]), main@linear_accel_x_LSB(BANK0[1]), main@status(BANK0[1]), main@message(BANK0[1]), 
		 -> BNO055_Initialize@message(COMRAM[1]), BNO055_Initialize@pflag(COMRAM[1]), BNO055_Initialize@id(COMRAM[1]), 

    S1809$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), NULL(NULL[0]), 

    S1820$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    i2c_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    S1820$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    i2c_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(BANK0[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(BANK0[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(BANK0[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(BANK0[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@G_sensor_data(BANK0[14]), main@test(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_transmit
    _main->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_BNO055_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _BNO055_Initialize->_I2C_MasterRead
    _BNO055_Initialize->_I2C_MasterWrite
    _I2C_MasterWrite->_I2C_MasterWriteTRBBuild
    _I2C_MasterRead->_I2C_MasterReadTRBBuild
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_Stop

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   31302
                                             21 BANK0     46    46      0
                  _ADC_GetConversion
                       _CAN_transmit
                     _I2C_MasterRead
                    _I2C_MasterWrite
                  _SYSTEM_Initialize
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2954
                                             27 COMRAM     3     0      3
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     461
                                              6 BANK0     15    11      4
                  _ADC_GetConversion (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3641
                                             30 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                  _ADC_GetConversion (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3573
                                             27 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2833
                                             19 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    7279
                     _ADC_Initialize
                  _BNO055_Initialize
                    _CCP2_Initialize
                    _ECAN_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BNO055_Initialize                                    3     3      0    7181
                                             35 COMRAM     3     3      0
                     _I2C_MasterRead
                    _I2C_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      7     0      7    2806
                                             28 COMRAM     7     0      7
                _I2C_MasterTRBInsert
            _I2C_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWriteTRBBuild                              9     2      7     436
                                             19 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterRead                                       7     0      7    3740
                                             28 COMRAM     7     0      7
             _I2C_MasterReadTRBBuild
                _I2C_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterTRBInsert                                  6     2      4     436
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterReadTRBBuild                               9     2      7     458
                                             19 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    4451
                                             37 COMRAM     2     0      2
                                              0 BANK0      5     5      0
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    2425
                                             19 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0      97
                                              5 COMRAM    14    14      0
                    _CCP2_CaptureISR
                _I2C_BusCollisionISR
                            _I2C_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              2     2      0      22
                                              3 COMRAM     2     2      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C_Stop                                             3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _I2C_FunctionComplete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP2_CaptureISR                                      4     4      0      75
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _CAN_transmit
     _convertCANid2Reg
   _I2C_MasterRead
     _I2C_MasterReadTRBBuild
     _I2C_MasterTRBInsert
   _I2C_MasterWrite
     _I2C_MasterTRBInsert
     _I2C_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _BNO055_Initialize
       _I2C_MasterRead
         _I2C_MasterReadTRBBuild
         _I2C_MasterTRBInsert
       _I2C_MasterWrite
         _I2C_MasterTRBInsert
         _I2C_MasterWriteTRBBuild
     _CCP2_Initialize
     _ECAN_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   ___ftdiv
     ___ftpack
   ___ftmul
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___fttol
     _ADC_GetConversion (ARG)
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _CCP2_CaptureISR
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      4D       5       48.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      49       1       77.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96       6        0.0%
DATA                 0      0      96       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jan 04 10:59:08 2018

                   I2C_ISR@i2c_bytes_left 003A                  __size_of_ECAN_Initialize 00EE  
                             __CFG_BORV$3 000000                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                   ?_I2C_MasterReadTRBBuild 0014  
                            __CFG_CP2$OFF 000000                         _BNO055_Initialize 0A64  
                            __CFG_CP3$OFF 000000                                       l321 01EC  
                                     l323 02FC                                       l423 1410  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                         __end_of_I2C_ISR 08C6                           _timer1ReloadVal 0048  
                      ?_BNO055_Initialize 0001                                       tosl 000FFD  
                                     wreg 000FE8                              ___ftdiv@cntr 0060  
                            ___ftdiv@sign 0065                                      l1050 10BE  
                     ??_BNO055_Initialize 0024                                      l1108 0F0E  
                                    l3431 09D4                                      l2631 1156  
                                    l2633 1162                                      l2721 0F46  
                                    l2627 1142                                      l2651 12B8  
                                    l3451 1058                                      l3611 0EE4  
                                    l2637 1172                                      l2733 1022  
                                    l3461 10B4                                      l3453 1076  
                                    l3445 1040                                      l3701 0CBA  
                                    l2743 0AB2                                      l3631 0D4A  
                                    l3711 0CF0                                      l2657 126E  
                                    l2761 0B1C                                      l2753 0AE8  
                                    l2737 0A84                                      l3457 108C  
                                    l3449 104E                                      l3459 10AA  
                                    l3651 0DB8                                      l3715 0D0C  
                                    l3707 0CD6                                      l2773 0B76  
                                    l2765 0B40                                      l2749 0AC0  
                                    l3661 0DEA                                      l3637 0D76  
                                    l3709 0CE6                                      l3805 063A  
                                    l2759 0B16                                      l3591 0E96  
                                    l3655 0DCE                                      l2785 0BD2  
                                    l3585 0E6A                                      l3665 0E00  
                                    l3737 0452                                      l2779 0BA4  
                                    l3781 057A                                      l3679 0C14  
                                    l3775 054A                                      l3697 0CA6  
                                    l3793 05DA                                      l3769 051A  
                                    l3787 05AA                                      l3799 060A  
                                    u2201 0E4E                                      u2221 0E7A  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    u2311 0BF0                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u2330 0C3A                                      u2075 095E  
                                    u2251 0D2E                                      u2085 09FE  
                                    u2271 0D5A                                      u2335 0C30  
                  ??_I2C_FunctionComplete 0001                                      _WPUB 000F5B  
                             main@message 007D                   __end_of_CCP2_Initialize 14DC  
                                    _main 040C                              ___ftpack@arg 0014  
            convertCANid2Reg@passedInEIDH 0019              convertCANid2Reg@passedInEIDL 001B  
                            ___ftpack@exp 0017                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004A              convertCANid2Reg@passedInSIDH 001D  
            convertCANid2Reg@passedInSIDL 001F                          __end_of_I2C_Stop 138A  
                 CAN_transmit@returnValue 0060                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00BA  
                           __CFG_IESO$OFF 000000                             __CFG_FOSC$HS1 000000  
              ??_TMR1_SetInterruptHandler 0016                             __CFG_MCLRE$ON 000000  
                            ___ftmul@cntr 0064                              ___param_bank 000000  
                            ___ftmul@sign 0065                              ___fttol@exp1 0074  
                            ___fttol@lval 0070                 __end_of_BNO055_Initialize 0BDA  
          __end_of_I2C_MasterReadTRBBuild 1232                I2C_MasterReadTRBBuild@ptrb 0014  
          __size_of_OSCILLATOR_Initialize 0012                          ?_I2C_MasterWrite 001D  
           __end_of_OSCILLATOR_Initialize 151C                                     ?_main 0001  
                        main@ADC_result_H 0084                          main@ADC_result_L 0085  
                                   _EEADR 000F74                           __end_of___ftdiv 0F42  
                         _TMR1_StartTimer 152E                           __end_of___ftmul 0E3E  
                                   _T1CON 000FCD                           __end_of___fttol 0D1E  
                           _i2c_trb_count 003B                                     i2l700 0754  
                                   i2l701 0762                                     i2l711 07DE  
                                   i2l705 07CA                                     i2l561 0062  
                                   i2l723 0864                                     i2l715 080A  
                                   i2l563 0072                                     i2l718 0824  
                                   i2l719 0834                                     i2l567 007E  
                                   i2l559 0052                                     i2l692 0718  
                                   i2l694 0720                                     i2l695 0728  
                                   i2l689 06BE                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR1_ISR 134C  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          ?_CCP2_CaptureISR 0001  
                          __CFG_EBTRB$OFF 000000                      __end_of_CAN_transmit 040C  
                           ___ftpack@sign 0018                                     main@x 0078  
                 __end_of_TMR1_Initialize 13C4                                     pclath 000FFA  
                                   tablat 000FF5                                     plusw2 000FDB  
                                   status 000FD8                      CAN_transmit@tempEIDH 0061  
                    CAN_transmit@tempEIDL 0062                      CAN_transmit@tempSIDH 0063  
                    CAN_transmit@tempSIDL 0064                  I2C_MasterTRBInsert@count 0019  
                I2C_MasterTRBInsert@pflag 0016                                _i2c_object 0028  
                         __initialization 1452                              __end_of_main 0688  
                               ??_I2C_ISR 0004               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 0028                             ___fttol@sign1 006F  
                           __activetblptr 000002                       _I2C_MasterTRBInsert 10DE  
             I2C_MasterReadTRBBuild@pdata 0016                            __CFG_RETEN$OFF 000000  
                       ??_ECAN_Initialize 0014                  ?_I2C_MasterWriteTRBBuild 0014  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _CANCON 000F6F  
                                  _ADRESH 000FC4                                    _EEADRH 000F75  
                                  _ADRESL 000FC3                                    _EEDATA 000F73  
                                  _CCPR2H 000F52                                    _CCPR2L 000F51  
                                  _EECON2 000F7E                                    _ANCON0 000F5D  
                                  _ANCON1 000F5C                          __end_of___ftpack 10DE  
                                  _T1GCON 000FAA                    main@linear_accel_x_LSB 007E  
                  main@linear_accel_x_MSB 007F                    main@linear_accel_y_LSB 0080  
                  main@linear_accel_y_MSB 0081                    main@linear_accel_z_LSB 0082  
                  main@linear_accel_z_MSB 0083                                    i2l2005 1324  
                                  i2l2007 132C                           __CFG_BBSIZ$BB2K 000000  
                                  i2l3113 0844                                    i2l3027 0708  
                                  i2l3125 086A                                    i2l3109 083C  
                                  i2l3045 074E                                    i2l3127 086E  
                                  i2l3039 0736                                    i2l3135 0880  
                                  i2l3129 0876                                    i2l3059 0790  
                          __CFG_WDTEN$OFF 000000                                    i2l3087 07EE  
                                  i2l3079 07D8                                    i2l3097 0812  
                                  i2l1857 11BC                                    i2l2835 14EE  
                                  i2l2827 1384                                    _TABLAT 000FF5  
                        __end_of___lwtoft 14C2                                    _OSCCON 000FD3  
                                  _RXB0D0 000F66                                    _RXB0D1 000F67  
                                  _RXB0D2 000F68                                    _RXB0D3 000F69  
                                  _RXB0D4 000F6A                                    _RXB1D0 000F36  
                                  _RXB0D5 000F6B                                    _RXB1D1 000F37  
                                  _RXB0D6 000F6C                                    _RXB1D2 000F38  
                                  _RXB0D7 000F6D                                    _RXB1D3 000F39  
                                  _RXB1D4 000F3A                                    _RXB1D5 000F3B  
                                  _RXB1D6 000F3C                                    _RXB1D7 000F3D  
                                  _TXB0D0 000F26                                    _TXB0D1 000F27  
                                  _TXB0D2 000F28                                    _TXB0D3 000F29  
                                  _TXB0D4 000F2A                                    _TXB1D0 000F16  
                                  _TXB0D5 000F2B                                    _TXB1D1 000F17  
                                  _TXB0D6 000F2C                                    _TXB1D2 000F18  
                                  _TXB0D7 000F2D                                    _TXB1D3 000F19  
                                  _TXB1D4 000F1A                                    _TXB2D0 000F06  
                                  _TXB1D5 000F1B                                    _TXB2D1 000F07  
                                  _TXB1D6 000F1C                                    _TXB2D2 000F08  
                                  _TXB1D7 000F1D                                    _TXB2D3 000F09  
                                  _TXB2D4 000F0A                                    _TXB2D5 000F0B  
                                  _TXB2D6 000F0C                                    _TXB2D7 000F0D  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                        ?_CCP2_Initialize 0001                      ?_I2C_MasterTRBInsert 0014  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 1534  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 1532  
                 __end_of_TMR1_StartTimer 1532                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 0022                                 ??___ftmul 0025  
                               ??___fttol 006A                __size_of_BNO055_Initialize 0176  
           I2C_MasterReadTRBBuild@address 0019                                    clear_0 1458  
                                  clear_1 1464                   __size_of_I2C_MasterRead 004A  
                 __size_of_I2C_Initialize 002A                     ___ftmul@f3_as_product 0061  
                               ?_I2C_Stop 0001                 __size_of_convertCANid2Reg 019E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                  ADC_GetConversion@channel 0018  
TMR1_SetInterruptHandler@InterruptHandler 0014             __size_of_INTERRUPT_Initialize 0008  
                        ?_TMR1_Initialize 0001                         _SYSTEM_Initialize 1478  
                              __accesstop 0060                   __end_of__initialization 146A  
                   ??_I2C_MasterTRBInsert 0018                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                ___ftdiv@f1 001C  
                              ___ftdiv@f2 001F                                ___ftdiv@f3 0061  
                              ___ftmul@f1 001F                                ___ftmul@f2 0022  
                              ___fttol@f1 0066                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0027                                 ?_TMR1_ISR 0001  
           ?_TMR1_DefaultInterruptHandler 0001                                ___lwtoft@c 001C  
         __end_of_I2C_MasterWriteTRBBuild 130A                     __size_of_CAN_transmit 034E  
                              ??_I2C_Stop 0001                 __end_of_SYSTEM_Initialize 149E  
                              __pbssBANK0 00A3                           __CFG_PLLCFG$OFF 000000  
            I2C_MasterReadTRBBuild@length 0018                                __pnvCOMRAM 0046  
            __size_of_I2C_BusCollisionISR 0002                              _CAN_transmit 00BE  
                        ?_TMR1_StartTimer 0001                                ??_TMR1_ISR 0001  
                                 _CCP2CON 000F50                                   _I2C_ISR 0688  
                                 _ECANCON 000F72                                   _CANSTAT 000F6E  
                               ?___ftpack 0014                                   _BRGCON1 000E43  
                                 _BRGCON2 000E44                                   _BRGCON3 000E45  
             I2C_MasterWriteTRBBuild@ptrb 0014                   __size_of_ADC_Initialize 0016  
                               ?___lwtoft 001C                         main@G_sensor_data 0087  
                        __CFG_CANMX$PORTB 000000                                   _REFOCON 000F9A  
                                 _OSCCON2 000FD2                                   _TBLPTRH 000FF7  
                                 _TBLPTRL 000FF6                                   _TBLPTRU 000FF8  
                                 _RXB0DLC 000F65                                   _RXB1DLC 000F35  
                                 i2u53_40 131E                                   _OSCTUNE 000F9B  
                                 i2u55_48 1338                   I2C_Stop@completion_code 0003  
                                 _TXB0DLC 000F25                                   _TXB1DLC 000F15  
                                 _TXB2DLC 000F05                                   _SSPCON1 000FC6  
                                 _SSPSTAT 000FC7             __size_of_I2C_FunctionComplete 0018  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                                   ___ftdiv 0E3E  
                                 ___ftmul 0D1E                                   ___fttol 0BDA  
                         _ECAN_Initialize 0F42                            _I2C_MasterRead 127C  
                                 __pcinit 1452                            _I2C_Initialize 1428  
                              ??___ftpack 0019                                   __ramtop 0F00  
                                 __ptext0 040C                                   __ptext1 149E  
                                 __ptext2 0BDA                                   __ptext3 0D1E  
                                 __ptext4 0E3E                                   __ptext5 1030  
                                 __ptext6 1478                                   __ptext7 138A  
                                 __ptext8 152E                                   __ptext9 151C  
                              ??___lwtoft 001F            ??_TMR1_DefaultInterruptHandler 0001  
                               _T1CONbits 000FCD                     _OSCILLATOR_Initialize 150A  
       __size_of_TMR1_SetInterruptHandler 000A                       BNO055_Initialize@id 0024  
                        _convertCANid2Reg 08C6                  ??_PIN_MANAGER_Initialize 0014  
               ?_TMR1_SetInterruptHandler 0014                         __CFG_MSSPMSK$MSK7 000000  
                __size_of_I2C_MasterWrite 004A                                   main@VDD 0075  
              __size_of_SYSTEM_Initialize 0026                      end_of_initialization 146A  
                  BNO055_Initialize@pflag 0026                             __Lmediumconst 0000  
                __size_of_CCP2_CaptureISR 0066                      I2C_MasterRead@length 001F  
        __size_of_I2C_MasterWriteTRBBuild 0044                                   postdec2 000FDD  
                  __end_of_I2C_MasterRead 12C6                                   postinc0 000FEE  
                                 postinc2 000FDE                    __end_of_I2C_Initialize 1452  
                   I2C_MasterWrite@length 001F                        I2C_ISR@i2c_address 0044  
                  CAN_transmit@tempCanMsg 0026                         __size_of_I2C_Stop 003E  
                       __CFG_SOSCSEL$HIGH 000000          I2C_ISR@i2c_10bit_address_restart 0039  
                             ___ftdiv@exp 0064                   __end_of_ECAN_Initialize 1030  
                ??_I2C_MasterReadTRBBuild 001B                                main@status 0086  
                             ___ftmul@exp 0060                         _p_i2c_trb_current 0033  
                         ?_I2C_MasterRead 001D                  __size_of_CCP2_Initialize 001A  
            __end_of_INTERRUPT_Initialize 152E                           ?_I2C_Initialize 0001  
                            _i2c_tr_queue 003F                         __size_of_TMR1_ISR 0042  
                          _ADC_Initialize 14F4                    ?_OSCILLATOR_Initialize 0001  
                     _I2C_BusCollisionISR 1534                       start_initialization 1452  
         __size_of_PIN_MANAGER_Initialize 0034                                 _i2c_state 003C  
             __end_of_I2C_MasterTRBInsert 117C                         ??_I2C_MasterWrite 0024  
                    ?_I2C_BusCollisionISR 0001                  __size_of_TMR1_Initialize 003A  
                       ??_CCP2_CaptureISR 0001                               _CCPTMRSbits 000F99  
                  __end_of_ADC_Initialize 150A                                  ?_I2C_ISR 0001  
                       __size_of___ftpack 00AE                               __pbssCOMRAM 0028  
                       __size_of___lwtoft 0024                             __pcstackBANK0 0060  
                 _I2C_MasterWriteTRBBuild 12C6                     ??_I2C_BusCollisionISR 0001  
                          _read_available 003D                          ?_ECAN_Initialize 0001  
                  _PIN_MANAGER_Initialize 13C4                  __end_of_convertCANid2Reg 0A64  
         __size_of_I2C_MasterReadTRBBuild 0050                                 __pintcode 0008  
        __end_of_TMR1_SetInterruptHandler 1526                                  ?___ftdiv 001C  
                                ?___ftmul 001F                                  ?___fttol 0066  
                         ?_ADC_Initialize 0001              __end_of_I2C_FunctionComplete 14F4  
            ??_INTERRUPT_InterruptManager 0006                         ??_CCP2_Initialize 0014  
                __size_of_TMR1_StartTimer 0004                               _COMSTATbits 000F71  
                               _cycle_num 003E                                  _I2C_Stop 134C  
          convertCANid2Reg@tempPassedInID 0014              I2C_MasterWriteTRBBuild@pdata 0016  
                           _p_i2c_current 0031                      _INTERRUPT_Initialize 1526  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3                                  _PIE5bits 000F76  
                     I2C_MasterRead@pdata 001D                       I2C_MasterRead@pflag 0022  
     __size_of_INTERRUPT_InterruptManager 00B2                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                                _PIR4bits 000FB7                                  _PIR5bits 000F77  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RXB1EIDH 000F33                                  _RXB1EIDL 000F34  
                                _RCONbits 000FD0                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXB1SIDH 000F31  
                                _RXF0EIDH 000EE2                                  _RXB1SIDL 000F32  
                                _RXF0EIDL 000EE3                                  _RXF1EIDH 000EE6  
                                _RXF1EIDL 000EE7                                 _time_diff 0037  
                                _RXF2EIDH 000EEA                                  _RXF2EIDL 000EEB  
                    I2C_MasterWrite@pdata 001D                                  _RXF3EIDH 000EEE  
                                _RXF3EIDL 000EEF                                  _RXF4EIDH 000EF2  
                    I2C_MasterWrite@pflag 0022                                  _RXF4EIDL 000EF3  
                                _RXF5EIDH 000EF6                                  _RXF5EIDL 000EF7  
                                _RXF0SIDH 000EE0                                  _RXF0SIDL 000EE1  
                                _TXB0EIDH 000F23                                  _RXF1SIDH 000EE4  
                                _TXB0EIDL 000F24                                  _RXF1SIDL 000EE5  
                                _TXB1EIDH 000F13                                  _RXF2SIDH 000EE8  
                                _TXB1EIDL 000F14                                  _RXF2SIDL 000EE9  
                                _TXB2EIDH 000F03                                  _RXF3SIDH 000EEC  
                                _TXB2EIDL 000F04                                  _RXF3SIDL 000EED  
                                _RXF4SIDH 000EF0                                  _RXF4SIDL 000EF1  
                                _RXF5SIDH 000EF4                                  _RXF5SIDL 000EF5  
                                _TMR1_ISR 130A                                  _RXM0EIDH 000EFA  
                                _RXM0EIDL 000EFB                                  _TXB0SIDH 000F21  
                                _RXM1EIDH 000EFE                                  _TXB0SIDL 000F22  
                                _RXM1EIDL 000EFF                       I2C_ISR@pi2c_buf_ptr 002F  
                                _TXB1SIDH 000F11                                  _TXB1SIDL 000F12  
                                _TXB2SIDH 000F01                                  _TXB2SIDL 000F02  
                                _RXM0SIDH 000EF8                                  _RXM0SIDL 000EF9  
                                _RXM1SIDH 000EFC                                  _RXM1SIDL 000EFD  
                        __size_of_I2C_ISR 023E                         ??_TMR1_Initialize 0016  
                              _ADCON0bits 000FC2                    _I2C_MasterReadTRBBuild 11E2  
                   ?_INTERRUPT_Initialize 0001                 ??_I2C_MasterWriteTRBBuild 001B  
                              _EECON1bits 000F7F                          ??_I2C_MasterRead 0024  
                BNO055_Initialize@message 0025                          ??_I2C_Initialize 0014  
                                __Hrparam 0000                                  __Lrparam 0000  
                       _ADC_GetConversion 13F8                        __CFG_BOREN$SBORDIS 000000  
               convertCANid2Reg@canIdType 0018                   ??_OSCILLATOR_Initialize 0014  
                      ?_ADC_GetConversion 0014                                _CIOCONbits 000F70  
                        __size_of___ftdiv 0104                          __size_of___ftmul 0120  
                        __size_of___fttol 0144                                  ___ftpack 1030  
                _TMR1_SetInterruptHandler 151C                                  ___lwtoft 149E  
                   _TMR1_InterruptHandler 0046                       ??_ADC_GetConversion 0016  
                 convertCANid2Reg@wipSIDL 0025                           _I2C_MasterWrite 1232  
                                __ptext10 13C4                                  __ptext11 150A  
                                __ptext20 10DE                                  __ptext12 1526  
                                __ptext21 11E2                                  __ptext13 1428  
                              _T1GCONbits 000FAA                                  __ptext30 134C  
                                __ptext22 14F4                                  __ptext14 0F42  
                                __ptext31 14DC                                  __ptext23 00BE  
                                __ptext15 14C2                                  __ptext32 1534  
                                __ptext24 08C6                                  __ptext16 0A64  
                                __ptext33 117C                                  __ptext25 13F8  
                                __ptext17 1232                                  __ptext34 0000  
                                __ptext18 12C6                                  __ptext27 130A  
                                __ptext19 127C                                  __ptext28 1532  
                                __ptext29 0688                         ??_TMR1_StartTimer 0014  
            I2C_MasterTRBInsert@ptrb_list 0014                           _CCP2_CaptureISR 117C  
                           __size_of_main 027C                      _I2C_FunctionComplete 14DC  
               __end_of_ADC_GetConversion 1428                             ?_CAN_transmit 0026  
                                int$flags 004A                             main@ADCResult 007B  
      __end_of_INTERRUPT_InterruptManager 00BA                _INTERRUPT_InterruptManager 0008  
                                main@test 0095                       __CFG_INTOSCSEL$HIGH 000000  
                             _RXB0CONbits 000F60                               _RXB1CONbits 000F30  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 0014  
                   I2C_MasterRead@address 0020                                  intlevel2 0000  
                   ?_I2C_FunctionComplete 0001                   ?_PIN_MANAGER_Initialize 0001  
                   I2C_MasterRead@trBlock 00A3              __size_of_I2C_MasterTRBInsert 009E  
                             _TXB0CONbits 000F20                               _TXB1CONbits 000F10  
                             _TXB2CONbits 000F00                          ??_ADC_Initialize 0014  
                          ??_CAN_transmit 0028                         ?_convertCANid2Reg 0014  
                         _CCP2_Initialize 14C2                              _prev_reading 0035  
                  I2C_MasterWrite@address 0020                        __CFG_WDTPS$1048576 000000  
                      ??_convertCANid2Reg 0021                   __end_of_I2C_MasterWrite 127C  
                  I2C_MasterWrite@trBlock 00A8                     CCP2_CaptureISR@module 0003  
                 __end_of_CCP2_CaptureISR 11E2                               _SSPCON1bits 000FC6  
                             _SSPCON2bits 000FC5               __end_of_I2C_BusCollisionISR 1536  
          __end_of_PIN_MANAGER_Initialize 13F8            I2C_MasterWriteTRBBuild@address 0019  
                     __CFG_BORPWR$ZPBORMV 000000                __size_of_ADC_GetConversion 0030  
                         _TMR1_Initialize 138A             I2C_MasterWriteTRBBuild@length 0018  
